//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//                Automatically Generated File - Do Not Edit                  //
//----------------------------------------------------------------------------//
// Class:       ifbTC1                                                        //
// Description: Instances of TC1                                              //
//                                                                            //
// Manufacutring Transfer line cooling only temperature controller.           //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 2.0 David Paspa      05-Jan-2018 NA        Reboot for S7-1500.             //
// 0.8 Khairul Basar    12-Oct-2009 CC-09/016 IN_REQ_MODE is assigned to      //
//                                            Toggle.                         //
// 0.7 Khairul Basar    04-Oct-2009 CC-09/016 TC1 SETPOINT variables DB ref.  //
//                                            not internal variables.         //
// 0.6 Gus Abdallah     01-Oct-2009 CC-09/016 Interlock are CM processed      //
// 0.5 Khairul Basar    18-Sep-2009 CC-09/016 T_CTRL-BOOL->INT, CMD deleted.  //
// 0.4 Khairul Basar    14-Sep-2009 CC-09/016 NCRIL TI_1x10.INTERLOCK linked.//
// 0.3 Khairul Basar    11-Sep-2009 CC-09/016 Manual setpoint, Non PID        //
//                                            selection parameters added &    //
//                                            programmed.                     //
// 0.2 Khairul Basar    03-Sep-2009 CC-09/016 T_CTRL parameters linked to TI1 //
//                                            INTERLOCK is changed from       //
//                                            IN_OUT to OUT.New parameters    //
//                                            CMD_MAN, CMD_AUTO, DEV_STATE    //
//                                            added.                          //
//                                            LMN & MEASURE parameters are    //
//                                            linked to MOD1 & TI1            //
//                                            respectively.                   //
// 0.1 Khairul Basar    31-Aug-2009           Initial design                  //
//----------------------------------------------------------------------------//
// Index   Instance    Description                                            //
@@TEMPLATE_BEGIN@@
@@TEMPLATE_END@@
@@TEMPLATE_BEGIN|createInstancesGlobal@@
// @@IDX@@       @@INSTANCE@@      @@DESCRIPTION@@
@@TEMPLATE_END@@
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "ifbTC1"
TITLE = TC1 : Manufacturing Transfer Line cooling only temperature controller
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : REO
NAME : ifbTC1
VERSION : 2.0

//----------------------------------------------------------------------------//
// Declare variables:                                                         //
//----------------------------------------------------------------------------//
VAR
@@TEMPLATE_BEGIN|createClassNone@@
@@ATTR_BEGIN|numInstances@@
    item : Array[0..@@MAXITEM@@] of "fbTC1";
@@ATTR_END|numInstances@@
@@TEMPLATE_END@@
END_VAR

BEGIN
@@TEMPLATE_BEGIN|createInstances@@
NETWORK
TITLE = Item @@IDX@@ @@INSTANCE@@ : @@DESCRIPTION@@ Critical Interlocks
    //------------------------------------------------------------------------//
    // Get the critical interlock if there is one. If not set alwaysLow:      //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|CRIL_EXISTS@@
@@ATTR_DEFAULT_BEGIN@@
    A "alwaysLow";
@@ATTR_DEFAULT_END@@
@@ATTR_BEGIN|CRIL_TARGET@@
    A "idbCRIL".item[@@IDXIL@@].INTERLOCK;
@@ATTR_END|CRIL_TARGET@@
@@ATTR_END|CRIL_EXISTS@@
    = #item[@@IDX@@].mc.CRIL;

NETWORK
TITLE = Item @@IDX@@ @@INSTANCE@@ : @@DESCRIPTION@@ Non-Critical Interlocks
    //------------------------------------------------------------------------//
    // Get the non-critical interlock if there is one. If not set alwaysLow:  //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|NCRIL_EXISTS@@
@@ATTR_DEFAULT_BEGIN@@
    A "alwaysLow";
@@ATTR_DEFAULT_END@@
@@ATTR_BEGIN|NCRIL_TARGET@@
    A "idbNCRIL".item[@@IDXIL@@].INTERLOCK;
@@ATTR_END|NCRIL_TARGET@@
@@ATTR_END|NCRIL_EXISTS@@
    = #item[@@IDX@@].mc.NCRIL;

NETWORK
TITLE = Item @@IDX@@ @@INSTANCE@@ : Unique ID
    //------------------------------------------------------------------------//
    // Set the instance unique ID:                                            //
    //------------------------------------------------------------------------//
    L "dbCONST".BLK.ID.@@INSTANCE@@;
    T #item[@@IDX@@].mc.ME;

NETWORK
TITLE = Item @@IDX@@ @@INSTANCE@@ : Owner
    //------------------------------------------------------------------------//
    // Set the instance owner:                                                //
    //------------------------------------------------------------------------//
    L "dbCONST".BLK.ID.@@PARENT@@;
    T #item[@@IDX@@].mc.OWNER;

NETWORK
TITLE = Item @@IDX@@ @@INSTANCE@@ : Safe Command on restart
    //------------------------------------------------------------------------//
    // Set the safe command if restarting the PLC:                            //
    //------------------------------------------------------------------------//
    A "flagFirstScanRestart";
    JCN _notRestart_@@COUNTER|1@@;
    L "dbCONST".BLK.TC1.SAFE.CMD;
    T #item[@@IDX@@].mc.CMD_SAFE;
_notRestart_@@COUNTER@@:   NOP 0;

@@TEMPLATE_BEGIN@@
NETWORK
TITLE = Item @@IDX@@ @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Call the class function to process each instance:                      //
    //------------------------------------------------------------------------//
    CALL #item[@@IDX@@]
    (   _SETPOINT            := #item[@@IDX@@]._SETPOINT ,
@@ATTR_BEGIN|LINK@@
        TCVPOS               := "idb@@TCVLINKCLASS@@".item[@@TCVLINKIDX@@].POS_REMOTE ,
        TI1_PV               := "idb@@TILINKCLASS@@".item[@@TILINKIDX@@]._PV ,
@@ATTR_END|LINK@@
        LMN                  := #item[@@IDX@@].LMN
    );
    NOP 0;

@@TEMPLATE_END@@
END_FUNCTION_BLOCK
