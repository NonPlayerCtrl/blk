//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//----------------------------------------------------------------------------//
// Class:       ifbPOS1                                                       //
// Description: Instances of POS1                                             //
//                                                                            //
// Uses the generic fbPOSx class. In this case FB_O=OUT_Q,FB_C=Negative-OUT_Q //
// because the FB_C & FB_O don't have feedback from field.                    //
//                                                                            //
// INDEX = 3                                                                  //
// IL_INDEX = 3                                                               //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 0.9 David Paspa      05-Jan-2018 NA        Reboot from Pharmaniaga.        //
// 0.8 Gus Abdallah     01-Oct-2009 CC-09/016 Interlocks are CM processed     //
// 0.7 Khairul Basar    21-Sep-2009 CC-09/016 XV_1031/1231 interlock DV-1x20  //
//                                            Added.                          //
// 0.6 Khairul Basar    18-Sep-2009 CC-09/016 ifcPOSx interface created.      //
// 0.5 Khairul Basar    17-Sep-2009 CC-09/016 XV_1242,1222 FB_O changed to NC.//
// 0.4 Khairul Basar    16-Sep-2009 CC-09/016 DV_1080, CR_IL ZSC-1010 changed //
//                                            from NO to NC.XV_1031,XV_1131 CR//
//                                            Duplicate Auto/man parameters   //
//                                            deleted auto/manual both now    //
//                                            using same parameters.          //
//                                            instance specific IL configured.//
// 0.3 Khairul Basar    09-Sep-2009 CC-09/016 Ref2.                           //
// 0.2 Khairul Basar    02-Sep-2009 CC-09/016 Ref1.                           //
// 0.1 Khairul Basar    03-Aug-2009           Initial design                  //
//                                                                            //
// Ref2: In DV_1041 & Dv1040 TI_1010 is changed to PI_1010 for the interlock. //
//                                                                            //
// Ref1: For XV_1090, FB_C is NC of "XV-1090" and FB_O is NO "XV-1090"        //
// assigned. Class interlocks & Instance specific interlocks are assigned.    //
// Instance Comment added.                                                    //
// All the Instances are updated after POSx module code changed (ref fbPOSx). //
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "ifbPOS1"
TITLE = Instances of POS1 On/Off valve without feedback
{ S7_Optimized_Access := 'FALSE' }
NAME : ifbPOS1
AUTHOR : Rieckermann Engineering Operations
VERSION : 0.9

//----------------------------------------------------------------------------//
//                                                                            //
//----------------------------------------------------------------------------//
   VAR
@@TEMPLATE_BEGIN@@
      @@MODULE@@ : "fbPOSx";   // @@DESCRIPTION@@
@@TEMPLATE_END@@
@@TEMPLATE_BEGIN@@
      @@MODULE@@_MODE : Struct
         PosEdge1 : Bool;
         PosEdge2 : Bool;
         REQ : Int;   // Request for Required Mode
      END_STRUCT;
@@TEMPLATE_END@@
   END_VAR

//----------------------------------------------------------------------------//
//                                                                            //
//----------------------------------------------------------------------------//
BEGIN
@@TEMPLATE_BEGIN@@
NETWORK
TITLE = @@MODULE@@ : @@DESCRIPTION@@
      A "AlwaysHighBit";
      = %L0.0;
      BLD 103;
      A(;
@@ATTR_BEGIN|CR_IL@@
@@ATTR_DEFAULT_BEGIN@@
      A "AlwaysHighBit";
@@ATTR_DEFAULT_END@@
      @@INTERLOCK@@
@@ATTR_END|CR_IL@@
      );
      = %L0.1;
      BLD 103;
      CALL "ifcPOSx"
      (  IN_REQ_MODE                 := %L0.0 ,
         INTERLOCK                   := %L0.1 ,
         IN_MODE                     := "idb@@PARENTCLASS@@".@@PARENT@@_MODE.REQ ,
         IN_CMD                      := "idb@@PARENTCLASS@@".@@PARENT@@.@@INSTANCECHILDALIASTAG@@_CMD ,
         OUT_MODE                    := #@@MODULE@@_MODE.REQ ,
         IO_MODE                     := "idbPOS1".@@MODULE@@.MODE ,
         IO_CMD                      := "idbPOS1".@@MODULE@@.CMD ,
         POS_EDGE1                   := #@@MODULE@@_MODE.PosEdge1 ,
         POS_EDGE2                   := #@@MODULE@@_MODE.PosEdge2
      );
      NOP 0;
NETWORK
TITLE = @@MODULE@@ : @@DESCRIPTION@@
      A(;
@@ATTR_BEGIN|CR_IL@@
@@ATTR_DEFAULT_BEGIN@@
      A "AlwaysHighBit";
@@ATTR_DEFAULT_END@@
      @@INTERLOCK@@
@@ATTR_END|CR_IL@@
      );
      = %L0.0;
      BLD 103;
      A(;
@@ATTR_BEGIN|NCR_IL@@
@@ATTR_DEFAULT_BEGIN@@
      A "AlwaysHighBit";
@@ATTR_DEFAULT_END@@
      @@INTERLOCK@@
@@ATTR_END|NCR_IL@@
      );
      = %L0.1;
      BLD 103;
      AN "@@INSTANCE@@";
      = %L0.2;
      BLD 103;
      A "@@INSTANCE@@";
      = %L0.3;
      BLD 103;
      CALL #@@MODULE@@
      (  CMD                         := #@@MODULE@@.CMD ,
         CR_IL                       := %L0.0 ,
         NCR_IL                      := %L0.1 ,
         MAN_OVERRIDE                := #@@MODULE@@.MAN_OVERRIDE ,
         FB_C                        := %L0.2 ,
         FB_O                        := %L0.3 ,
         TMR                         := #@@MODULE@@.TMR ,
         INTERLOCKING_TIMER          := "Tag_@@COUNTER|1@@" ,
         DEV_STATE                   := #@@MODULE@@.DEV_STATE ,
         OUT_Q                       := "@@INSTANCE@@" ,
         FAULT_C                     := #@@MODULE@@.FAULT_C ,
         FAULT_O                     := #@@MODULE@@.FAULT_O ,
         INTERLOCK                   := #@@MODULE@@.INTERLOCK ,
         MODE                        := #@@MODULE@@.MODE
      );
      NOP 0;
@@TEMPLATE_END@@
END_FUNCTION_BLOCK
