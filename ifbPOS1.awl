//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//                Automatically Generated File - Do Not Edit                  //
//----------------------------------------------------------------------------//
// Class:       ifbPOS1                                                       //
// Description: Instances of POS1                                             //
//                                                                            //
// Uses the generic fbPOSx class. In this case FB_O=OUT_Q,FB_C=Negative-OUT_Q //
// because the FB_C & FB_O don't have feedback from field.                    //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 2.0 David Paspa      05-Jan-2018 NA        Reboot for S7-1500.             //
// 0.8 Gus Abdallah     01-Oct-2009 CC-09/016 Interlocks are CM processed     //
// 0.7 Khairul Basar    21-Sep-2009 CC-09/016 XV_1031/1231 interlock DV-1x20  //
//                                            Added.                          //
// 0.6 Khairul Basar    18-Sep-2009 CC-09/016 ifcPOSx interface created.      //
// 0.5 Khairul Basar    17-Sep-2009 CC-09/016 XV_1242,1222 FB_O changed to NC.//
// 0.4 Khairul Basar    16-Sep-2009 CC-09/016 DV_1080, CRIL ZSC-1010 changed //
//                                            from NO to NC.XV_1031,XV_1131 CR//
//                                            Duplicate Auto/man parameters   //
//                                            deleted auto/manual both now    //
//                                            using same parameters.          //
//                                            instance specific IL configured.//
// 0.3 Khairul Basar    09-Sep-2009 CC-09/016 Ref2.                           //
// 0.2 Khairul Basar    02-Sep-2009 CC-09/016 Ref1.                           //
// 0.1 Khairul Basar    03-Aug-2009           Initial design                  //
//                                                                            //
// Ref2: In DV_1041 & Dv1040 TI_1010 is changed to PI_1010 for the interlock. //
//                                                                            //
// Ref1: For XV_1090, FB_C is NC of "XV-1090" and FB_O is NO "XV-1090"        //
// assigned. Class interlocks & Instance specific interlocks are assigned.    //
// Instance Comment added.                                                    //
// All the Instances are updated after POSx module code changed (ref fbPOSx). //
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "ifbPOS1"
TITLE = Instances of POS1 On/Off valve without feedback
{ S7_Optimized_Access := 'FALSE' }
AUTHOR : REO
NAME : ifbPOS1
VERSION : 2.0

//----------------------------------------------------------------------------//
//                                                                            //
//----------------------------------------------------------------------------//
VAR
@@TEMPLATE_BEGIN@@
    @@INSTANCE@@ : "fbPOSx";   // @@DESCRIPTION@@
@@TEMPLATE_END@@
END_VAR

VAR_TEMP
    CRIL : Bool;
    NCRIL : Bool;
    FBC : Bool;
    FBO : Bool;
END_VAR

BEGIN
@@TEMPLATE_BEGIN@@
NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Get the critical interlock if there is one. If not set alwaysLow:      //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|CRIL_EXISTS@@
@@ATTR_DEFAULT_BEGIN@@
    A "alwaysLow";
@@ATTR_DEFAULT_END@@
    "idbILCR".@@TARGET@@-CRIL.INTERLOCK;
@@ATTR_END|CRIL_EXISTS@@
    = #CRIL;

NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Get the non-critical interlock if there is one. If not set alwaysLow:  //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|NCRIL_EXISTS@@
@@ATTR_DEFAULT_BEGIN@@
    A "alwaysLow";
@@ATTR_DEFAULT_END@@
    "idbILNCR".@@TARGET@@-NCRIL.INTERLOCK;
@@ATTR_END|NCRIL_EXISTS@@
    = #NCRIL;

NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Call the class function to process each instance:                      //
    //------------------------------------------------------------------------//
      AN "@@INSTANCE@@";
      = #FBC;
      BLD 103;
      A "@@INSTANCE@@";
      = #FBO;
      CALL #@@INSTANCE@@
      (  CMD                         := #@@INSTANCE@@.CMD ,
         CRIL                       := #CRIL ,
         NCRIL                      := #NCRIL ,
         MAN_OVERRIDE                := #@@INSTANCE@@.MAN_OVERRIDE ,
         FB_C                        := #FBC ,
         FB_O                        := #FBO ,
         TMR                         := #@@INSTANCE@@.TMR ,
         INTERLOCKING_TIMER          := "@@INSTANCE@@-TTM" ,
         STATE                       := #@@INSTANCE@@.STATE ,
         OUT_Q                       := "@@INSTANCE@@-CMD" ,
         FAULT_C                     := #@@INSTANCE@@.FAULT_C ,
         FAULT_O                     := #@@INSTANCE@@.FAULT_O ,
         INTERLOCK                   := #@@INSTANCE@@.INTERLOCK ,
         MODE                        := #@@INSTANCE@@.MODE
      );
      NOP 0;
@@TEMPLATE_END@@
END_FUNCTION_BLOCK
