//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//                Automatically Generated File - Do Not Edit                  //
//----------------------------------------------------------------------------//
// Class:       ifb@@CLASS@@                                                  //
// Description: Instances of Equipment Module @@CLASS@@                       //
//                                                                            //
// @@CLASSDESCRIPTION@@.                                                      //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 2.0 David Paspa      05-Jan-2018 NA        Reboot for S7-1500.             //
// 0.5 Khairul Basar    12-Oct-2009 CC-09/023 Toggle Mode coded.              //
// 0.4 Khairul Basar    30-Sep-2009 CC-09/023 EM Mode var changed to IN_OUT.  //
// 0.3 Khairul Basar    17-Sep-2009 CC-09/016 Duplicate Auto/man parameters   //
//                                            deleted auto/manual,Instaed     //
//                                            single command,Setpoint is used //
//                                            for both mode.                  //
// 0.2 Khairul Basar    28-Aug-2009 CC-09/023 Phases are updated.             //
// 0.1 Khairul Basar    14-Aug-2009 CC-09/023 Initial design.                 //
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "ifb@@CLASS@@"
TITLE = @@CLASS@@ : @@CLASSDESCRIPTION@@
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : REO
NAME : ifb@@CLASS@@
VERSION : 2.0

//----------------------------------------------------------------------------//
// Declare the instance objects of the class:                                 //
//----------------------------------------------------------------------------//
VAR
@@TEMPLATE_BEGIN@@
    @@INSTANCE@@ : "fb@@CLASS@@";   // @@DESCRIPTION@@
@@TEMPLATE_END@@
END_VAR

BEGIN
@@TEMPLATE_BEGIN@@
NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Get the critical interlock if there is one. If not set alwaysLow:      //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|CRIL_EXISTS@@
@@ATTR_DEFAULT_BEGIN@@
    A "alwaysLow";
@@ATTR_DEFAULT_END@@
    A "idbCRIL".@@INSTANCE@@cril.INTERLOCK;
@@ATTR_END|CRIL_EXISTS@@
    = #@@INSTANCE@@.mc.CRIL;

NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Get the non-critical interlock if there is one. If not set alwaysLow:  //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|NCRIL_EXISTS@@
@@ATTR_DEFAULT_BEGIN@@
    A "alwaysLow";
@@ATTR_DEFAULT_END@@
    A "idbNCRIL".@@INSTANCE@@ncril.INTERLOCK;
@@ATTR_END|NCRIL_EXISTS@@
    = #@@INSTANCE@@.mc.NCRIL;

NETWORK
TITLE = @@INSTANCE@@ : Unique ID
    //------------------------------------------------------------------------//
    // Set the instance unique ID:                                            //
    //------------------------------------------------------------------------//
    L "dbCONST".BLK.ID.@@INSTANCE@@;
    T #@@INSTANCE@@.mc.ME;

NETWORK
TITLE = @@INSTANCE@@ : Owner
    //------------------------------------------------------------------------//
    // Set the instance owner:                                                //
    //------------------------------------------------------------------------//
    L "dbCONST".BLK.ID.@@PARENT@@;
    T #@@INSTANCE@@.mc.OWNER;

NETWORK
TITLE = @@INSTANCE@@ : Safe Command
    //------------------------------------------------------------------------//
    // Set the safe command:                                                  //
    //------------------------------------------------------------------------//
    L "dbCONST".BLK.@@CLASS@@.SAFE.CMD;
    T #@@INSTANCE@@.mc.CMD_SAFE;

@@ATTR_BEGIN|CHILD_INSTANCE@@
NETWORK
TITLE = @@INSTANCE@@ : Child @@CHILDINSTANCE@@ @@CHILDDESCRIPTION@@
    //------------------------------------------------------------------------//
    // Copy the child mode and command data:                                  //
    //------------------------------------------------------------------------//
    CALL MOVE
    {value_type := 'Variant'}
    (   IN                   := "idb@@CHILDCLASS@@".@@CHILDINSTANCE@@.mc ,
        OUT                  := #@@INSTANCE@@.cmc[@@CHILDINDEX@@]
    );

@@ATTR_END|CHILD_INSTANCE@@

NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Call the class function to process each instance:                      //
    //------------------------------------------------------------------------//
    CALL #@@INSTANCE@@
    (   CHILD_RELEASE                  := #@@INSTANCE@@.CHILD_RELEASE ,
@@ATTR_BEGIN|TIMER@@
        TIME_H                         := #@@INSTANCE@@.TIME_H ,
        TIME_M                         := #@@INSTANCE@@.TIME_M ,
        TIME_S                         := #@@INSTANCE@@.TIME_S ,
        REM_TIME_H                     := #@@INSTANCE@@.REM_TIME_H ,
        REM_TIME_M                     := #@@INSTANCE@@.REM_TIME_M ,
        REM_TIME_S                     := #@@INSTANCE@@.REM_TIME_S ,
@@ATTR_END|TIMER@@
@@ATTR_BEGIN|pChildIN@@
        @@CHILDPARAMETER@@_@@CLASS@@   := #@@INSTANCE@@.@@CHILDPARAMETER@@_@@CLASS@@ ,
@@ATTR_END|pChildIN@@
@@ATTR_BEGIN|pBLK@@
        @@BLOCKPARAMETER@@             := #@@INSTANCE@@.@@BLOCKPARAMETER@@ ,
@@ATTR_END|pBLK@@
@@ATTR_BEGIN|pEventPrompt@@
        eventPrompt.@@PARAMETERSOURCE@@@@CHILDPARAMETER@@ :=
                    "dbEVENTProcess".eventPrompt.@@INSTANCE@@_@@PARAMETERSOURCE@@@@CHILDPARAMETER@@ ,
@@ATTR_END|pEventPrompt@@
@@ATTR_BEGIN|pEventConfirm@@
        eventConfirm.@@PARAMETERSOURCE@@@@CHILDPARAMETER@@ :=
                    "dbEVENTProcess".eventConfirm.@@INSTANCE@@_@@PARAMETERSOURCE@@@@CHILDPARAMETER@@ ,
@@ATTR_END|pEventConfirm@@
@@ATTR_BEGIN|pEventLogMsg@@
        eventLogMsg.@@PARAMETERSOURCE@@@@CHILDPARAMETER@@ :=
                    "dbEVENTProcess".eventLogMsg.@@INSTANCE@@_@@PARAMETERSOURCE@@@@CHILDPARAMETER@@ ,
@@ATTR_END|pEventLogMsg@@
@@ATTR_BEGIN|pEventLogReal@@
        eventLogReal.@@PARAMETERSOURCE@@@@CHILDPARAMETER@@ :=
                    "dbEVENTProcess".eventLogReal.@@INSTANCE@@_@@PARAMETERSOURCE@@@@CHILDPARAMETER@@ ,
@@ATTR_END|pEventLogReal@@
@@ATTR_BEGIN|pEventLogTime@@
        eventLogTime.@@PARAMETERSOURCE@@@@CHILDPARAMETER@@ :=
                    "dbEVENTProcess".eventLogTime.@@INSTANCE@@_@@PARAMETERSOURCE@@@@CHILDPARAMETER@@ ,
@@ATTR_END|pEventLogTime@@
@@ATTR_BEGIN|pEventDataReal@@
        eventDataReal.@@PARAMETERSOURCE@@@@CHILDPARAMETER@@ :=
                    "dbEVENTProcess".eventDataReal.@@INSTANCE@@_@@PARAMETERSOURCE@@@@CHILDPARAMETER@@ ,
@@ATTR_END|pEventDataReal@@
@@ATTR_BEGIN|pEventDataTime@@
        eventDataTime.@@PARAMETERSOURCE@@@@CHILDPARAMETER@@ :=
                    "dbEVENTProcess".eventDataTime.@@INSTANCE@@_@@PARAMETERSOURCE@@@@CHILDPARAMETER@@ ,
@@ATTR_END|pEventDataTime@@
        DUMMY                          := #@@INSTANCE@@.DUMMY
    );
    NOP 0;

@@TEMPLATE_END@@
END_FUNCTION_BLOCK
