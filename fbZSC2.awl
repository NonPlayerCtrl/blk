//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//----------------------------------------------------------------------------//
// Class:       fbZSC2                                                        //
// Description:                                                               //
// Flowpath connection indication.                                            //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 2.0 David Paspa      30-Jan-2018 NA        Reboot for S7-1500.             //
// 0.4 Gerald Kontriner 09-Oct-2009 CC-09/016 MON_MISMATCH Logic.             //
// 0.3 Khairul Basar    02-Oct-2009 CC-09/016 NW3 DI changed from NC to NO.   //
// 0.2 Khairul Basar    04-Sep-2009 CC-09/016 Mode=1 initialized.             //
// 0.1 Khairul Basar    03-Aug-2009           Initial design.                 //
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "fbZSC2"
TITLE = ZSC2 : Flowpath connection indication
{ S7_Optimized_Access := 'FALSE' }
AUTHOR : REO
NAME : fbZSC2
VERSION : 2.0

    VAR_INPUT
        CMD : Int := -1;     // Safe command
        DI_INPUT : Bool;     // Input signal from Field (0 = Device is OUT, 1 = Device is IN)
        DI_USER : Bool;
        REQ_STATE : Bool;    // The required state, either IN or OUT, of the flowpath device.
        ARM_FLAG : Bool;
    END_VAR

    VAR_OUTPUT
        STATE : Int;         // Device State (1= IN, 2= OUT, 3= MISMATCH)
        INTERLOCK : Bool;    // Interlock Flag (0 = Inactive, 1 = Active)
        DI_PV : Bool;        // Processed DI
        MON_MISMATCH : Bool;
    END_VAR

    VAR_IN_OUT
        OWNER : Int;         // Value to be set or reset by Parent
        MODE : Int := 1;     // Control Mode, Auto by default
    END_VAR

    VAR_TEMP
        DI_POS_B_1 : Bool;   // Temporary processed DI signal
        isMismatch : Bool;
        modeAuto : Bool;
        modeManual : Bool;
        modeOOS : Bool;
    END_VAR

BEGIN
NETWORK
TITLE = Mode auto
      L #MODE;
      L "dbCONST".BLK.MODE.AUTO;
      ==I;
      = #modeAuto;
NETWORK
TITLE = Mode man
      L #MODE;
      L "dbCONST".BLK.MODE.MANUAL;
      ==I;
      = #modeManual;
NETWORK
TITLE = Mode oos
      L #MODE;
      L "dbCONST".BLK.MODE.OOS;
      ==I;
      = #modeOOS;
NETWORK
TITLE = Process Digital Input Signal
      A #DI_INPUT;
      A #modeAuto;
      O;
      A #DI_USER;
      A #modeManual;
      = #DI_PV;
NETWORK
TITLE = Setting Device State to IN
      A(;
      A #DI_INPUT;
      A #modeAuto;
      O;
      A #DI_USER;
      A #modeManual;
      );
      A #REQ_STATE;
      JNB Label_0;
      L "dbCONST".BLK.ZSC2.STATE.IN;
      T #STATE;
Label_0:      NOP 0;
NETWORK
TITLE = Setting Device State to OUT
      A(;
      AN #DI_INPUT;
      A #modeAuto;
      O;
      AN #DI_USER;
      A #modeManual;
      );
      AN #REQ_STATE;
      JNB Label_1;
      L "dbCONST".BLK.ZSC2.STATE.OUT;
      T #STATE;
Label_1:      NOP 0;
NETWORK
TITLE = Check if Device State is MISMATCH
      A(;
      A(;
      A #DI_INPUT;
      A #modeAuto;
      O;
      A #DI_USER;
      A #modeManual;
      );
      AN #REQ_STATE;
      O;
      A(;
      AN #DI_INPUT;
      A #modeAuto;
      O;
      AN #DI_USER;
      A #modeManual;
      );
      A #REQ_STATE;
      );
      = #isMismatch;
NETWORK
TITLE = Setting Device State to MISMATCH
      A #isMismatch;
      L "dbCONST".BLK.ZSC2.STATE.MISMATCH;
      T #STATE;
NETWORK
TITLE =
      A #isMismatch;
      A #ARM_FLAG;
      AN #modeOOS;
      = #MON_MISMATCH;
END_FUNCTION_BLOCK
