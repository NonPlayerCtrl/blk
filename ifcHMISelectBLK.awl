//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//                Automatically Generated File - Do Not Edit                  //
//----------------------------------------------------------------------------//
// Description: Handles the HMI interface for operator control of each BLK.   //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 2.0 David Paspa      03-Aug-2018 NA        Reboot for S7-1500.             //
// 0.1 Khairul Basar    05-Oct-2009 NA        Inital Design.                  //
//----------------------------------------------------------------------------//
FUNCTION "ifcHMISelectBLK" : Void
TITLE = BLK Selection
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : REO
NAME : ifcHMISelectBLK
VERSION : 2.0

//----------------------------------------------------------------------------//
// Declare local variables:                                                   //
//----------------------------------------------------------------------------//
VAR_TEMP
    blkSelected : Int;
END_VAR

BEGIN
NETWORK
TITLE = Get the selected BLK
    //------------------------------------------------------------------------//
    // Get the BLK index number selected by the user when they clicked the    //
    // faceplate BLK target:                                                  //
    //------------------------------------------------------------------------//
    L "dbHMIInterfaceBLK".blkSelected;
    T #blkSelected;

@@TEMPLATE_BEGIN|INSTANCE_BLK@@
NETWORK
TITLE = @@INSTANCE@@ @@DESCRIPTION@@ : @@STATEDESCRIPTION@@
    //------------------------------------------------------------------------//
    // Check if this BLK instance is selected:                                //
    //------------------------------------------------------------------------//
    A(;
    L #blkSelected;
    L 1@@ID@@;
    ==I;
    );
    JCN _not_@@INSTANCE@@;

    CALL "fcHMIInterfaceBLK"
@@ATTR_BEGIN|numChildren@@
    (   numChildren          := @@NUM@@ ,
@@ATTR_END|numChildren@@
@@ATTR_BEGIN|numReadBool@@
        numReadBool          := @@NUM@@ ,
@@ATTR_END|numReadBool@@
@@ATTR_BEGIN|numReadInt@@
        numReadInt           := @@NUM@@ ,
@@ATTR_END|numReadInt@@
@@ATTR_BEGIN|numReadReal@@
        numReadReal          := @@NUM@@ ,
@@ATTR_END|numReadReal@@
@@ATTR_BEGIN|numReadTime@@
        numReadTime          := @@NUM@@ ,
@@ATTR_END|numReadTime@@
@@ATTR_BEGIN|numWriteBool@@
        numWriteBool         := @@NUM@@ ,
@@ATTR_END|numWriteBool@@
@@ATTR_BEGIN|numWriteInt@@
        numWriteInt          := @@NUM@@ ,
@@ATTR_END|numWriteInt@@
@@ATTR_BEGIN|numWriteReal@@
        numWriteReal         := @@NUM@@ ,
@@ATTR_END|numWriteReal@@
@@ATTR_BEGIN|numWriteTime@@
        numWriteTime         := @@NUM@@ ,
@@ATTR_END|numWriteTime@@
        bmc                  := "idb@@CLASS@@".f[@@IDX@@].p.origin.bmc ,
        mc                   := "idb@@CLASS@@".f[@@IDX@@].p.origin.mc ,
        mco                  := "idb@@CLASS@@".f[@@IDX@@].p.owner.mc
    );

NETWORK
TITLE = Transfer the parameter values to the interface arrays
    //------------------------------------------------------------------------//
    // Transfer the parameter values:                                         //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|pReadBool@@
    A "idb@@CLASS@@".f[@@IDX@@].p.origin.@@BLOCKPARAMETER@@;
    = "dbHMIInterfaceBLK".pBool[@@PIDX@@];
@@ATTR_END|pReadBool@@
@@ATTR_BEGIN|pReadInt@@
    L "idb@@CLASS@@".f[@@IDX@@].p.origin.@@BLOCKPARAMETER@@;
    T "dbHMIInterfaceBLK".pInt[@@PIDX@@];
@@ATTR_END|pReadInt@@
@@ATTR_BEGIN|pReadReal@@
    L "idb@@CLASS@@".f[@@IDX@@].p.origin.@@BLOCKPARAMETER@@;
    T "dbHMIInterfaceBLK".pReal[@@PIDX@@];
@@ATTR_END|pReadReal@@
@@ATTR_BEGIN|pReadTime@@
    L "idb@@CLASS@@".f[@@IDX@@].p.origin.@@BLOCKPARAMETER@@;
    T "dbHMIInterfaceBLK".pTime[@@PIDX@@];
@@ATTR_END|pReadTime@@
@@ATTR_BEGIN|pWriteBool@@
    A "idb@@CLASS@@".f[@@IDX@@].p.owner.@@BLOCKPARAMETER@@;
    = "dbHMIInterfaceBLK".pBool[@@PIDX@@];
@@ATTR_END|pWriteBool@@
@@ATTR_BEGIN|pWriteInt@@
    L "idb@@CLASS@@".f[@@IDX@@].p.owner.@@BLOCKPARAMETER@@;
    T "dbHMIInterfaceBLK".pInt[@@PIDX@@];
@@ATTR_END|pWriteInt@@
@@ATTR_BEGIN|pWriteReal@@
    L "idb@@CLASS@@".f[@@IDX@@].p.owner.@@BLOCKPARAMETER@@;
    T "dbHMIInterfaceBLK".pReal[@@PIDX@@];
@@ATTR_END|pWriteReal@@
@@ATTR_BEGIN|pWriteTime@@
    L "idb@@CLASS@@".f[@@IDX@@].p.owner.@@BLOCKPARAMETER@@;
    T "dbHMIInterfaceBLK".pTime[@@PIDX@@];
@@ATTR_END|pWriteTime@@

_not_@@INSTANCE@@:   NOP 0;

@@TEMPLATE_END@@
END_FUNCTION
