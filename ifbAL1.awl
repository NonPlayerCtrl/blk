//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//                Automatically Generated File - Do Not Edit                  //
//----------------------------------------------------------------------------//
// Name:        ifb@@CLASS@@                                                  //
// Description: Instances of @@CLASS@@                                        //
//                                                                            //
// @@CLASSDESCRIPTION@@                                                       //
// This file inherits from the base template ifbAL.awl.                       //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 2.0 David Paspa      08-Jan-2018 NA        Reboot for S7-1500. Created     //
//                                            base template ifbAL1.           //
// 0.4 Khairul Basar    12-Oct-2009 CC-09/016 IN_REQ_MODE is assigned to      //
//                                            Toggle.                         //
// 0.3 Khairul Basar    14-Sep-2009 CC-09/016 Ref.OB100,Instance LIMIT_H/HH   //
//                                            Hardcode deleted.               //
// 0.2 Khairul Basar    31-Aug-2009 CC-09/016 Upper/Lower range hardcoded.    //
//                                            USER_INPUT added for manual     //
//                                            mode simulation.                //
// 0.1 Khairul Basar    03-Aug-2009           Initial design.                 //
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "ifb@@CLASS@@"
TITLE = @@CLASS@@ Instances
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : REO
NAME : ifb@@CLASS@@
VERSION : 2.0

//----------------------------------------------------------------------------//
// Declare the instance objects of the class:                                 //
//----------------------------------------------------------------------------//
VAR
@@TEMPLATE_BEGIN@@
    @@INSTANCE@@ : "fbAL1";   // @@DESCRIPTION@@
@@TEMPLATE_END@@
END_VAR

BEGIN
@@TEMPLATE_BEGIN@@
@@ATTR_BEGIN|ANALOG@@
NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Call the class function to process each instance:                      //
    //------------------------------------------------------------------------//
    CALL #@@INSTANCE@@
    (   OWNER                := #@@INSTANCE@@.OWNER ,
        SERIAL               := #@@INSTANCE@@.SERIAL ,
        CRIL                 := #@@INSTANCE@@.CRIL ,
        NCRIL                := #@@INSTANCE@@.NCRIL ,
        MAN_OVERRIDE         := #@@INSTANCE@@.MAN_OVERRIDE ,
        CMD_SAFE             := #@@INSTANCE@@.CMD_SAFE ,
        RAW_INPUT            := "@@INSTANCE@@-RAW":P ,
        USER_INPUT           := #@@INSTANCE@@.USER_INPUT ,
        RANGE_UPPER          := @@RANGELOW@@ ,
        RANGE_LOWER          := @@RANGEHIGH@@ ,
        POLARITY             := #@@INSTANCE@@.POLARITY ,
        LIMIT_HH             := @@LIMITHH@@ ,
        LIMIT_H              := @@LIMITH@@ ,
        LIMIT_L              := @@LIMITL@@ ,
        LIMIT_LL             := @@LIMITLL@@ ,
        ENABLE_HH            := @@ENABLEHH@@ ,
        ENABLE_H             := @@ENABLEH@@ ,
        ENABLE_L             := @@ENABLEL@@ ,
        ENABLE_LL            := @@ENABLELL@@ ,
        STATE_ENABLED        := "dbCONST".BLK.@@CLASS@@.STATE.ENABLED ,
        STATE_FAULT          := "dbCONST".BLK.@@CLASS@@.STATE.FAULT ,
        PV                   := #@@INSTANCE@@.PV ,
        CMD                  := #@@INSTANCE@@.CMD ,
        MODE                 := #@@INSTANCE@@.MODE ,
        STATE                := #@@INSTANCE@@.STATE ,
        INTERLOCK            := #@@INSTANCE@@.INTERLOCK ,
        DQ                   := #@@INSTANCE@@.DQ ,
        ALARM_HH             := #@@INSTANCE@@.ALARM_HH ,
        ALARM_H              := #@@INSTANCE@@.ALARM_H ,
        ALARM_L              := #@@INSTANCE@@.ALARM_L ,
        ALARM_LL             := #@@INSTANCE@@.ALARM_LL ,
        RANGE_ERROR          := #@@INSTANCE@@.RANGE_ERROR ,
        BROKEN_WIRE          := #@@INSTANCE@@.BROKEN_WIRE
    );
    NOP 0;

@@ATTR_END|ANALOG@@
@@TEMPLATE_END@@
END_FUNCTION_BLOCK
