//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//                Automatically Generated File - Do Not Edit                  //
//----------------------------------------------------------------------------//
// Name:        ifb@@CLASS@@                                                  //
// Description: Instances of @@CLASS@@                                        //
//                                                                            //
// @@CLASSDESCRIPTION@@                                                       //
// This file inherits from the base template ifbAL.awl.                       //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 2.0 David Paspa      08-Jan-2018 NA        Reboot for S7-1500. Created     //
//                                            base template ifbAL1.           //
// 0.4 Khairul Basar    12-Oct-2009 CC-09/016 IN_REQ_MODE is assigned to      //
//                                            Toggle.                         //
// 0.3 Khairul Basar    14-Sep-2009 CC-09/016 Ref.OB100,Instance LIMIT_H/HH   //
//                                            Hardcode deleted.               //
// 0.2 Khairul Basar    31-Aug-2009 CC-09/016 Upper/Lower range hardcoded.    //
//                                            USER_INPUT added for manual     //
//                                            mode simulation.                //
// 0.1 Khairul Basar    03-Aug-2009           Initial design.                 //
//----------------------------------------------------------------------------//
// Index   Instance    Description                                            //
@@TEMPLATE_BEGIN@@
@@TEMPLATE_END@@
@@TEMPLATE_BEGIN|createInstancesGlobal@@
// @@IDX@@       @@INSTANCE@@      @@DESCRIPTION@@
@@TEMPLATE_END@@
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "ifb@@CLASS@@"
TITLE = @@CLASS@@ Instances
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : REO
NAME : ifb@@CLASS@@
VERSION : 2.0

//----------------------------------------------------------------------------//
// Declare the instance objects of the class:                                 //
//----------------------------------------------------------------------------//
VAR
@@TEMPLATE_BEGIN|createClassNone@@
@@ATTR_BEGIN|numInstances@@
    item : Array[0..@@MAXITEM@@] of "fbAL1";
@@ATTR_END|numInstances@@
@@TEMPLATE_END@@
END_VAR

BEGIN
@@TEMPLATE_BEGIN|createInstances@@
NETWORK
TITLE = @@INSTANCE@@ : Unique ID
    //------------------------------------------------------------------------//
    // ANALOG INPUT   ANALOG INPUT   ANALOG INPUT   ANALOG INPUT   ANALOG INP //
    //                                                                        //
    // Set the instance unique ID:                                            //
    //------------------------------------------------------------------------//
    L "dbCONST".BLK.ID.@@INSTANCE@@;
    T #item[@@IDX@@].mc.ME;

NETWORK
TITLE = @@INSTANCE@@ : Owner
    //------------------------------------------------------------------------//
    // Set the instance owner:                                                //
    //------------------------------------------------------------------------//
    L "dbCONST".BLK.ID.@@PARENT@@;
    T #item[@@IDX@@].mc.OWNER;

NETWORK
TITLE = @@INSTANCE@@ : Safe Command
    //------------------------------------------------------------------------//
    // Set the safe command:                                                  //
    //------------------------------------------------------------------------//
    L "dbCONST".BLK.AL1.SAFE.CMD;
    T #item[@@IDX@@].mc.CMD_SAFE;

@@ATTR_BEGIN|ANALOG@@
NETWORK
TITLE = @@INSTANCE@@ : Analog input attributes
    //------------------------------------------------------------------------//
    // Set the analog input attributes:                                       //
    //------------------------------------------------------------------------//
    L @@RANGELOW@@;
    T #item[@@IDX@@].ai.RANGE_LOWER;
    L @@RANGEHIGH@@;
    T #item[@@IDX@@].ai.RANGE_UPPER;
    L @@LIMITHH@@;
    T #item[@@IDX@@].ai.LIMIT_HH;
    L @@LIMITH@@;
    T #item[@@IDX@@].ai.LIMIT_H;
    L @@LIMITL@@;
    T #item[@@IDX@@].ai.LIMIT_L;
    L @@LIMITLL@@;
    T #item[@@IDX@@].ai.LIMIT_LL;
    A @@ENABLEHH@@;
    = #item[@@IDX@@].ai.ENABLE_HH;
    A @@ENABLEH@@;
    = #item[@@IDX@@].ai.ENABLE_H;
    A @@ENABLEL@@;
    = #item[@@IDX@@].ai.ENABLE_L;
    A @@ENABLELL@@;
    = #item[@@IDX@@].ai.ENABLE_LL;
    L "@@INSTANCE@@-RAW";
    T #item[@@IDX@@].ai.RAW_INPUT;

@@ATTR_END|ANALOG@@

NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Call the class function to process each instance:                      //
    //------------------------------------------------------------------------//
    CALL #item[@@IDX@@]
    (   CMD_ENABLE           := "dbCONST".BLK.@@CLASS@@.CMD.ENABLE ,
        STATE_ENABLED        := "dbCONST".BLK.@@CLASS@@.STATE.ENABLED ,
        STATE_FAULT          := "dbCONST".BLK.@@CLASS@@.STATE.FAULT ,
        _PV                  := #item[@@IDX@@]._PV ,
        DQ                   := #item[@@IDX@@].DQ ,
        ALARM_LL             := #item[@@IDX@@].ALARM_LL ,
        ALARM_L              := #item[@@IDX@@].ALARM_L ,
        ALARM_H              := #item[@@IDX@@].ALARM_H ,
        ALARM_HH             := #item[@@IDX@@].ALARM_HH
    );

@@TEMPLATE_END@@
END_FUNCTION_BLOCK
