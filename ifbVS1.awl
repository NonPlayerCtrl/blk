//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//                Automatically Generated File - Do Not Edit                  //
//----------------------------------------------------------------------------//
// Class:       ifbVS1                                                        //
// Description: Instances of VS1                                              //
//                                                                            //
// Grouped CM for the two vacuum pumps to comprise one vacuum system which    //
// starts sucking if any user vacuum valve opens indicating a call for the    //
// vacuum service.                                                            //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 1.0 David Paspa      05-Jan-2018 NA        Reboot for S7-1500.             //
//----------------------------------------------------------------------------//
// Index   Instance    Description                                            //
@@TEMPLATE_BEGIN|createInstancesGlobal@@
// @@IDX@@       @@INSTANCE@@      @@DESCRIPTION@@
@@TEMPLATE_END@@
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "ifbVS1"
TITLE = Instances of VS1 Vacuum System grouped CM
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : REO
NAME : ifbVS1
VERSION : 1.0

//----------------------------------------------------------------------------//
// Declare the instance objects of the class:                                 //
//----------------------------------------------------------------------------//
VAR
@@TEMPLATE_BEGIN|createClassNone@@
@@ATTR_BEGIN|numInstances@@
    f : Array[0..@@MAXITEM@@] of "fbVS1";
@@ATTR_END|numInstances@@
@@TEMPLATE_END@@
END_VAR

BEGIN
@@TEMPLATE_BEGIN|createInstances@@
NETWORK
TITLE = Item @@IDX@@ @@INSTANCE@@ : Unique ID
    //------------------------------------------------------------------------//
    // INSTANCE   INSTANCE   INSTANCE   INSTANCE   INSTANCE   INSTANCE   INST //
    // INSTANCE   INSTANCE   INSTANCE   INSTANCE   INSTANCE   INSTANCE   INST //
    //                                                                        //
    // Set the instance unique ID:                                            //
    //------------------------------------------------------------------------//
    L "dbCONST".BLK.ID.@@INSTANCE@@;
    T #f[@@IDX@@].p.origin.mc.ME;

NETWORK
TITLE = Item @@IDX@@ @@INSTANCE@@ : Owner
    //------------------------------------------------------------------------//
    // Set the instance available:                                            //
    //------------------------------------------------------------------------//
    L "dbCONST".BLK.ID.AVAILABLE;
    T #f[@@IDX@@].p.owner.mc.OWNER;

NETWORK
TITLE = Item @@IDX@@ @@INSTANCE@@ : Block Origin
    //------------------------------------------------------------------------//
    // This block can only reside within this CPU:                            //
    //------------------------------------------------------------------------//
    A "alwaysHigh";
    = #f[@@IDX@@].p.origin.mc.isOriginBlock;

NETWORK
TITLE = Item @@IDX@@ @@INSTANCE@@ : Owner Origin
    //------------------------------------------------------------------------//
    // This block can only be owned by a parent block in this CPU:            //
    //------------------------------------------------------------------------//
    A "alwaysHigh";
    = #f[@@IDX@@].p.owner.mc.isOriginOwner;

NETWORK
TITLE = Item @@IDX@@ @@INSTANCE@@ : Safe Command on restart
    //------------------------------------------------------------------------//
    // Set the safe command if restarting the PLC:                            //
    //------------------------------------------------------------------------//
    A "flagFirstScanRestart";
    JCN _notRestart_@@COUNTERTEMPLATE|1@@;
    L "dbCONST".BLK.VS1.SAFE.CMD;
    T #f[@@IDX@@].p.origin.mc.CMD_SAFE;
_notRestart_@@COUNTERTEMPLATE@@:   NOP 0;

NETWORK
TITLE = Item @@IDX@@ @@INSTANCE@@ : Pump 1 mode and command
//------------------------------------------------------------------------//
    // Copy the PUMP 1 structure to the VS1 instance:                         //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|LINK@@
    L @@PUMP1LINKIDX@@;      // @@PUMP1LINKCLASS@@
    T #f[@@IDX@@].p.child.PUMP1;
@@ATTR_END|LINK@@

NETWORK
TITLE = Item @@IDX@@ @@INSTANCE@@ : Pump 2 mode and command
    //------------------------------------------------------------------------//
    // Copy the PUMP 2 structure to the VS1 instance:                         //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|LINK@@
    L @@PUMP2LINKIDX@@;      // @@PUMP2LINKCLASS@@
    T #f[@@IDX@@].p.child.PUMP2;
@@ATTR_END|LINK@@

NETWORK
TITLE = Item @@IDX@@ @@INSTANCE@@ : Vacuum user valve 1 state
    //------------------------------------------------------------------------//
    // Copy the VACUUM user valve 1 structure:                                //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|LINK@@
    L @@VALVE1LINKIDX@@;     // @@VALVE1LINKCLASS@@
    T #f[@@IDX@@].p.child.VALVE1;
@@ATTR_END|LINK@@

NETWORK
TITLE = Item @@IDX@@ @@INSTANCE@@ : Vacuum user valve 2 state
    //------------------------------------------------------------------------//
    // Copy the VACUUM user valve 2 structure:                                //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|LINK@@
    L @@VALVE2LINKIDX@@;     // @@VALVE2LINKCLASS@@
    T #f[@@IDX@@].p.child.VALVE2;
@@ATTR_END|LINK@@

NETWORK
TITLE = Item @@IDX@@ @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Call the class function to process each instance:                      //
    //------------------------------------------------------------------------//
    CALL #f[@@IDX@@];

@@TEMPLATE_END@@
END_FUNCTION_BLOCK
