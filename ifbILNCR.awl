//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//                Automatically Generated File - Do Not Edit                  //
//----------------------------------------------------------------------------//
// Class:       ifbIL1                                                        //
// Description: Instances of Non-Critical Interlocks                          //
//                                                                            //
// Interlock with up to fifteen inputs.                                       //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 1.0 David Paspa      17-Apr-2018 NA        Initial design.                 //
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "ifbNCRIL"
TITLE = Instances of Non-Critical Interlocks
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : REO
NAME : ifbNCRIL
VERSION : 1.0

//----------------------------------------------------------------------------//
// Define the instances of the FB type:                                       //
//----------------------------------------------------------------------------//
VAR
@@TEMPLATE_BEGIN@@
    @@INSTANCE@@ncril : "udtInterlock";     // @@DESCRIPTION@@
@@TEMPLATE_END@@
END_VAR

VAR_TEMP
    tIL : "udtInterlock";    // Interlock source input
END_VAR

BEGIN
@@TEMPLATE_BEGIN@@
@@ATTR_BEGIN|NCRIL_EXISTS@@
NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // NON-CRITICAL INTERLOCK   NON-CRITICAL INTERLOCK   NON-CRITICAL INTERLO //
    // NON-CRITICAL INTERLOCK   NON-CRITICAL INTERLOCK   NON-CRITICAL INTERLO //
    //                                                                        //
    // Clear the interlock flag:                                              //
    //------------------------------------------------------------------------//
    A "alwaysLow";
    = #tIL.INTERLOCK;

    //------------------------------------------------------------------------//
    // Clear all interlock source values to initialise them to off:           //
    //------------------------------------------------------------------------//
    CALL FILL_BLK
    {value_type := 'Bool', count_type := 'UInt'}
    (   IN                   := 0 ,
        COUNT                := 15 ,
        OUT                  := #tIL.Source[0]
    );

@@ATTR_END|NCRIL_EXISTS@@

@@ATTR_BEGIN|NCRIL_INSTANCE@@
NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTIONIL@@
    //------------------------------------------------------------------------//
    // Calculate the interlock condition:                                     //
    //------------------------------------------------------------------------//
    @@INTERLOCK@@
    = #tIL.Source[@@COUNTER|0@@];

@@ATTR_END|NCRIL_INSTANCE@@
@@ATTR_BEGIN|NCRIL_EXISTS@@
NETWORK
TITLE = @@INSTANCE@@ : Aggregate individual interlocks into overall INTERLOCK flag
    //------------------------------------------------------------------------//
    // Determine if an interlock is raised:                                   //
    //------------------------------------------------------------------------//
    O #tIL.Source[0];
    O #tIL.Source[1];
    O #tIL.Source[2];
    O #tIL.Source[3];
    O #tIL.Source[4];
    O #tIL.Source[5];
    O #tIL.Source[6];
    O #tIL.Source[7];
    O #tIL.Source[8];
    O #tIL.Source[9];
    O #tIL.Source[10];
    O #tIL.Source[11];
    O #tIL.Source[12];
    O #tIL.Source[13];
    O #tIL.Source[14];
    = #tIL.INTERLOCK;

NETWORK
TITLE = @@INSTANCE@@ : Update the instance data
    //------------------------------------------------------------------------//
    // Update the instance DB with the calculated interlock flags:            //
    //------------------------------------------------------------------------//
    CALL MOVE
    {value_type := 'Variant'}
    (   IN                   := #tIL ,
        OUT                  := #@@INSTANCE@@ncril
    );

@@ATTR_END|NCRIL_EXISTS@@
@@TEMPLATE_END@@
END_FUNCTION_BLOCK
