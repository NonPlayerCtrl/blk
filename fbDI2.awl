//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//----------------------------------------------------------------------------//
// Class:       fbDI2                                                         //
// Description:                                                               //
// General alarm single digital input.                                        //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 1.0 David Paspa      17-Apr-2018 NA        Initial design from DI1.        //
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "fbDI2"
TITLE = DI2 : General alarm with software input
{ S7_Optimized_Access := 'FALSE' }
NAME : fbDI2
AUTHOR : REO
VERSION : 1.0

//----------------------------------------------------------------------------//
// Declare variables:                                                         //
//----------------------------------------------------------------------------//
VAR_INPUT
    OWNER : Int;             // Value to be set or reset by Parent
    SERIAL : Int;            // Unique batch or CIPSIP serial number
    CR_IL : Bool;            // Critical Interlock in series
    NCR_IL : Bool;           // Non-critical Interlock in series
    MAN_OVERRIDE : Bool;     // Critical Interlock in series can be Override by this Input
    CMD_SAFE : Int;          // Safe command for the module
    DI_Manual : Bool;        // User digital signal for simulating
END_VAR

VAR_OUTPUT
    ALARM : Bool;            // Alarm Flag (0 = OK, 1 = ALARM)
    PV : Bool;               // Processed DI
END_VAR

VAR_IN_OUT
    CMD : Int;               // Command
    MODE : Int;              // Control Mode
    STATE : Int;             // Device State from dbCONST
    INTERLOCK : Bool;        // Interlock Flag
END_VAR

VAR_TEMP
    modeAuto : Bool;
    modeManual : Bool;
    modeOOS : Bool;
    tPV : Bool;              // Temporary processed DI signal
END_VAR

BEGIN
NETWORK
TITLE = Call Mode and Command handling function
    //------------------------------------------------------------------------//
    // MODE AND COMMAND   MODE AND COMMAND   MODE AND COMMAND   MODE AND COMM //
    // MODE AND COMMAND   MODE AND COMMAND   MODE AND COMMAND   MODE AND COMM //
    //                                                                        //
    // Process the standard block functions for command, mode, interlock and  //
    // state:                                                                 //
    //------------------------------------------------------------------------//
    CALL "fcModeCmd"
    (
        CR_IL                := #CR_IL ,
        NCR_IL               := #NCR_IL ,
        MAN_OVERRIDE         := #MAN_OVERRIDE ,
        CMD_SAFE             := #CMD_SAFE ,
        modeAuto             := #modeAuto ,
        modeManual           := #modeManual ,
        modeOOS              := #modeOOS ,
        MODE                 := #MODE ,
        CMD                  := #CMD ,
        STATE                := #STATE ,
        INTERLOCK            := #INTERLOCK
    );
    NOP 0;

NETWORK
TITLE = Process user input signal
    //------------------------------------------------------------------------//
    // INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS  //
    // INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS  //
    //                                                                        //
    // Calculate the process value based on the mode:                         //
    //------------------------------------------------------------------------//
    A #modeManual;
    A #DI_Manual;
    = #tPV;
    = #PV;

NETWORK
TITLE = Setting ALARM Flag
    //------------------------------------------------------------------------//
    // ALARM   ALARM   ALARM   ALARM   ALARM   ALARM   ALARM   ALARM   ALARM  //
    // ALARM   ALARM   ALARM   ALARM   ALARM   ALARM   ALARM   ALARM   ALARM  //
    //                                                                        //
    // Set alarms:                                                            //
    //------------------------------------------------------------------------//
    AN #tPV;
    AN #modeOOS;
    = #ALARM;

NETWORK
TITLE = Setting INTERLOCK Flag
    //------------------------------------------------------------------------//
    // INTERLOCK   INTERLOCK   INTERLOCK   INTERLOCK   INTERLOCK   INTERLOCK  //
    // INTERLOCK   INTERLOCK   INTERLOCK   INTERLOCK   INTERLOCK   INTERLOCK  //
    //                                                                        //
    // Set interlocks:                                                        //
    //------------------------------------------------------------------------//
    O #INTERLOCK;
    O #tPV;
    = #INTERLOCK;

NETWORK
TITLE = Set Device command which can only be ENABLE.
    //------------------------------------------------------------------------//
    // COMMAND   COMMAND   COMMAND   COMMAND   COMMAND   COMMAND   COMMAND    //
    // COMMAND   COMMAND   COMMAND   COMMAND   COMMAND   COMMAND   COMMAND    //
    //                                                                        //
    // CMD is always ENABLE:                                                  //
    //------------------------------------------------------------------------//
    L "dbCONST".BLK.DI2.CMD.ENABLE;
    T #CMD;

NETWORK
TITLE = Set Device State to Enabled if user input is on
    //------------------------------------------------------------------------//
    // STATE   STATE   STATE   STATE   STATE   STATE   STATE   STATE   STATE  //
    // STATE   STATE   STATE   STATE   STATE   STATE   STATE   STATE   STATE  //
    //                                                                        //
    // ENABLED if switch is on:                                               //
    //------------------------------------------------------------------------//
    A #tPV;
    L "dbCONST".BLK.DI2.STATE.ENABLED;
    T #STATE;

NETWORK
TITLE = Setting Device State to ALARM
    //------------------------------------------------------------------------//
    // ALARM if user input is off and not OOS:                                //
    //------------------------------------------------------------------------//
    A #ALARM;
    L "dbCONST".BLK.DI2.STATE.ALARM;
    T #STATE;
END_FUNCTION_BLOCK
