//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//                Automatically Generated File - Do Not Edit                  //
//----------------------------------------------------------------------------//
// Name:        ifbTI1                                                        //
// Description: Instances of TI1                                              //
//                                                                            //
// Vessel temperature indicator with alarms and interlocks.                   //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 2.0 David Paspa      08-Jan-2018 NA        Reboot for S7-1500.             //
// 0.3 Khairul Basar    12-Oct-2009 CC-09/016 IN_REQ_MODE is assigned to      //
//                                            Toggle.                         //
// 0.2 Khairul Basar    03-Sep-2009 CC-09/016 Initial value change-Ref.fbTI1  //
// 0.1 Khairul Basar    03-Aug-2009           Initial design.                 //
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "ifbTI1"
TITLE = TI1 : Instances of Vessel Temperature Indicator with alarms and Interlocks
{ S7_Optimized_Access := 'FALSE' }
AUTHOR : REO
NAME : ifbTI1
VERSION : 2.0

//----------------------------------------------------------------------------//
//                                                                            //
//----------------------------------------------------------------------------//
   VAR
@@TEMPLATE_BEGIN@@
      @@INSTANCE@@ : "fbTI1";   // @@DESCRIPTION@@
@@TEMPLATE_END@@
@@TEMPLATE_BEGIN@@
      @@INSTANCE@@_MODE : Struct
         PosEdge1 : Bool;
         PosEdge2 : Bool;
         REQ : Int;   // Request for Required Mode
      END_STRUCT;
@@TEMPLATE_END@@
   END_VAR

//----------------------------------------------------------------------------//
//                                                                            //
//----------------------------------------------------------------------------//
BEGIN
@@TEMPLATE_BEGIN@@
NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
      CALL "ifcTI1"
      (  IN_REQ_MODE                 := "idb@@PARENTCLASS@@".@@PARENT@@_MODE.Toggle ,
         IN_MODE                     := "idb@@PARENTCLASS@@".@@PARENT@@_MODE.REQ ,
         OUT_MODE                    := #@@INSTANCE@@_MODE.REQ ,
         IO_MODE                     := "idbTI1".@@INSTANCE@@.MODE ,
         POS_EDGE1                   := #@@INSTANCE@@_MODE.PosEdge1 ,
         POS_EDGE2                   := #@@INSTANCE@@_MODE.PosEdge2
      );
      NOP 0;
NETWORK

//----------------------------------------------------------------------------//
//                                                                            //
//----------------------------------------------------------------------------//
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
      CALL #@@INSTANCE@@
      (  MODE                        := #@@INSTANCE@@.MODE ,
         RAW_INPUT                   := "P_@@NUMINSTANCE@@":P ,
         USER_INPUT                  := #@@INSTANCE@@.USER_INPUT ,
         UPPER_RANGE                 := #@@INSTANCE@@.UPPER_RANGE ,
         LOWER_RANGE                 := #@@INSTANCE@@.LOWER_RANGE ,
         POLARITY                    := #@@INSTANCE@@.POLARITY ,
         LIMIT_HH                    := #@@INSTANCE@@.LIMIT_HH ,
         LIMIT_H                     := #@@INSTANCE@@.LIMIT_H ,
         LIMIT_L                     := #@@INSTANCE@@.LIMIT_L ,
         LIMIT_LL                    := #@@INSTANCE@@.LIMIT_LL ,
         ENABLE_H                    := #@@INSTANCE@@.ENABLE_H ,
         ENABLE_L                    := #@@INSTANCE@@.ENABLE_L ,
         MEASURE                     := #@@INSTANCE@@.MEASURE ,
         DATA_QUALITY                := #@@INSTANCE@@.DATA_QUALITY ,
         ALARM_HH                    := #@@INSTANCE@@.ALARM_HH ,
         ALARM_H                     := #@@INSTANCE@@.ALARM_H ,
         ALARM_L                     := #@@INSTANCE@@.ALARM_L ,
         ALARM_LL                    := #@@INSTANCE@@.ALARM_LL ,
         INTERLOCK                   := #@@INSTANCE@@.INTERLOCK ,
         RANGE_ERROR                 := #@@INSTANCE@@.RANGE_ERROR ,
         BROKEN_WIRE                 := #@@INSTANCE@@.BROKEN_WIRE
      );
      NOP 0;
@@TEMPLATE_END@@
END_FUNCTION_BLOCK
