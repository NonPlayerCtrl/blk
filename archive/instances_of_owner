fbAL1.awl:        mcOwner              := #p.owner.mc
fbAL1.awl:    T #p.owner.mc.CMD;
fbBLK.awl:    AN "idb@@CHILDALIASCLASS@@".f[#p.child.@@CHILDPARAMETERALIAS@@].p.owner.mc.isAvailable;
fbBLK.awl:    L "idb@@CHILDALIASCLASS@@".f[#p.child.@@CHILDPARAMETERALIAS@@].p.owner.mc.OWNER;
fbBLK.awl:        mcOwner              := #p.owner.mc
fbBLK.awl:    T "idb@@CHILDALIASCLASS@@".f[#p.child.@@CHILDPARAMETERALIAS@@].p.owner.mc.OWNER;
fbBLK.awl:        mcOwner              := #p.owner.mc ,
fbBLK.awl:    T "idb@@CHILDALIASCLASS@@".f[#p.child.@@CHILDPARAMETERALIAS@@].p.owner.mc.CMD;
fbBLK.awl:    L #p.owner.mc.MODE;
fbBLK.awl:    L #p.owner.mc.MODE;
fbBLK.awl:    T "idb@@CHILDALIASCLASS@@".f[#p.child.@@CHILDPARAMETERALIAS@@].p.owner.mc.MODE;
fbBLK.awl:    L "idb@@CHILDALIASCLASS@@".f[#p.child.@@CHILDPARAMETERALIAS@@].p.owner.@@CHILDPAIRPARAMETER@@;
fbBLK.awl:    T #p.owner.@@CHILDPARAMETERALIAS@@_@@CHILDPAIRPARAMETER@@;
fbBLK.awl:    L #p.owner.mc.SUBS;
fbBLK.awl:    L #p.owner.mc.SUBS;
fbBLK.awl:    L #p.owner.@@PARAMETER@@_@@SELECTION@@;
fbBLK.awl:    // Flag to take ownership of the child now and release at the end if      //
fbBLK.awl:    A "idb@@CHILDALIASCLASS@@".f[#p.child.@@CHILDPARAMETERALIAS@@].p.owner.mc.isAvailable;
fbBLK.awl:    T "idb@@CHILDALIASCLASS@@".f[#p.child.@@CHILDPARAMETERALIAS@@].p.owner.mc.OWNER;
fbBLK.awl:    L #p.owner.mc.SERIALNUM;
fbBLK.awl:    T "idb@@CHILDALIASCLASS@@".f[#p.child.@@CHILDPARAMETERALIAS@@].p.owner.mc.SERIALNUM;
fbBLK.awl:    L #p.owner.mc.RECIPE;
fbBLK.awl:    T "idb@@CHILDALIASCLASS@@".f[#p.child.@@CHILDPARAMETERALIAS@@].p.owner.mc.RECIPE;
fbBLK.awl:    L #p.owner.@@CHILDPAIRPARAMETER@@;
fbBLK.awl:    T "idb@@CHILDALIASCLASS@@".f[#p.child.@@CHILDPARAMETERALIAS@@].p.owner.@@CHILDPAIRPARAMETER@@;
fbBLK.awl:    L #p.owner.@@BLOCKPARAMETER@@;
fbBLK.awl:    L "idb@@CHILDALIASCLASS@@".f[#p.child.@@CHILDPARAMETERALIAS@@].p.owner.mc.CMD;
fbBLK.awl:        @@CHILDPARAMETER@@   := #p.owner.@@BLOCKPARAMETER@@ ,
fbBLK.awl:        @@CHILDPARAMETER@@   := "idb@@CHILDPARAMETERCLASS@@".f[#p.child.@@CHILDPARAMETERALIAS@@].p.owner.@@CHILDPARAMETERATTRIBUTE@@ ,
fbBLK.awl:        @@CHILDPARAMETER@@   := "idb@@CHILDPARAMETERCLASS@@".f[#p.link.@@CHILDPARAMETERALIAS@@].p.owner.@@CHILDPARAMETERATTRIBUTE@@ ,
fbBLK.awl:        @@CHILDPARAMETER@@   := "idb@@CHILDPARAMETERCLASS@@".f[@@CHILDIDX@@].p.owner.mc.@@CHILDPARAMETERATTRIBUTE@@ ,
fbBLK.awl:        @@CHILDPARAMETER@@   := "idb@@CHILDPARAMETERCLASS@@".f[#p.child.@@CHILDPARAMETERALIAS@@].p.owner.@@CHILDPARAMETERATTRIBUTE@@ ,
fbBLK.awl:        @@CHILDPARAMETER@@   := "idb@@CHILDPARAMETERCLASS@@".f[#p.select.@@CHILDPARAMETERALIAS@@].p.owner.mc.@@CHILDPARAMETERATTRIBUTE@@ ,
fbBLK.awl:    T "idb@@CHILDALIASCLASS@@".f[#p.child.@@CHILDPARAMETERALIAS@@].p.owner.mc.CMD;
fbBLK.awl:    L #p.owner.mc.SUBS;
fbDI1.awl:        mcOwner              := #p.owner.mc
fbDI1.awl:    T #p.owner.mc.CMD;
fbDI1.awl:    A #p.owner.DI_Manual;
fbDI2.awl:        mcOwner              := #p.owner.mc
fbDI2.awl:    T #p.owner.mc.CMD;
fbDI2.awl:    A #p.owner.DI_Manual;
fbDI3.awl:        mcOwner              := #p.owner.mc
fbDI3.awl:    T #p.owner.mc.CMD;
fbDI3.awl:    A #p.owner.DI_Manual;
fbHE1.awl:        mcOwner              := #p.owner.mc
fbHE1.awl:    L #p.owner.mc.CMD;
fbHE1.awl:    L #p.owner.mc.CMD;
fbHE1.awl:    = #p.owner.CUTOUT;
fbMOD1.awl:        mcOwner              := #p.owner.mc
fbMOD1.awl:    L #p.owner.mc.CMD;
fbMOD1.awl:    L #p.owner.mc.CMD;
fbMOD1.awl:    L #p.owner.mc.CMD;
fbMOD1.awl:    L #p.owner.POS_LOCAL;
fbMOD1.awl:    L #p.owner.POS_REMOTE;
fbMOT1.awl:        mcOwner              := #p.owner.mc
fbMOT1.awl:    L #p.owner.mc.CMD;
fbMOT1.awl:    L #p.owner.mc.CMD;
fbPC1.awl:        mcOwner              := #p.owner.mc
fbPC1.awl:    L #p.owner.mc.CMD;
fbPC1.awl:    L #p.owner.mc.CMD;
fbPC1.awl:    L #p.owner.mc.CMD;
fbPC1.awl:    L #p.owner.SETPOINT;
fbPC1.awl:    L #p.owner.DB_H;
fbPC1.awl:    L #p.owner.SETPOINT;
fbPC1.awl:    L #p.owner.DB_L;
fbPC1.awl:    L #p.owner.MEDIUM_GAS;
fbPC1.awl:    L #p.owner.MEDIUM_GAS;
fbPC1.awl:    L #p.owner.MEDIUM_GAS;
fbPC1.awl:    L #p.owner.MEDIUM_GAS;
fbPC1.awl:    L #p.owner.MEDIUM_GAS;
fbPC1.awl:    L #p.owner.SETPOINT;
fbPC1.awl:    L #p.owner.SETPOINT;
fbPC1.awl:    T "idbPOS4".f[#p.link.DRAIN].p.owner.mc.CMD;
fbPC1.awl:    T "idbPOS2".f[#p.link.HPCA].p.owner.mc.CMD;
fbPC1.awl:    T "idbPOS2".f[#p.link.LPCA].p.owner.mc.CMD;
fbPC1.awl:    T "idbPOS2".f[#p.link.VACUUM].p.owner.mc.CMD;
fbPC1.awl:    T "idbPOS2".f[#p.link.VENT].p.owner.mc.CMD;
fbPC1.awl:    T "idbPOS4".f[#p.link.DRAIN].p.owner.mc.CMD;
fbPC1.awl:    T "idbPOS2".f[#p.link.HPCA].p.owner.mc.CMD;
fbPC1.awl:    T "idbPOS2".f[#p.link.LPCA].p.owner.mc.CMD;
fbPC1.awl:    T "idbPOS2".f[#p.link.VACUUM].p.owner.mc.CMD;
fbPC1.awl:    T "idbPOS2".f[#p.link.VENT].p.owner.mc.CMD;
fbPOSx.awl:        mcOwner              := #p.owner.mc
fbPOSx.awl:    L #p.owner.mc.CMD;
fbPOSx.awl:    L #p.owner.mc.CMD;
fbSIC1.awl:        mcOwner              := #p.owner.mc
fbSIC1.awl:    L #p.owner.mc.CMD;
fbSIC1.awl:    L #p.owner.mc.CMD;
fbSIC1.awl:    L #p.owner.SETPOINT;
fbSIC1.awl:    A #p.owner.MAN_PID;
fbSIC1.awl:    T #p.owner.mc.CMD;
fbSIC1.awl:    L #p.owner.CMD_PEER;
fbTC1.awl:        mcOwner              := #p.owner.mc
fbTC1.awl:    L #p.owner.mc.CMD;
fbTC1.awl:    L #p.owner.mc.CMD;
fbTC1.awl:    T #p.owner.mc.CMD;
fbTC1.awl:    L #p.owner.SETPOINT;
fbTC1.awl:    A #p.owner.MAN_PID;
fbTC1.awl:    T "idbMOD1".f[#p.link.MOD_TCV].p.owner.POS_REMOTE;
fbVS1.awl:        mcOwner              := #p.owner.mc
fbVS1.awl:    L #p.owner.mc.CMD;
fbVS1.awl:    L #p.owner.mc.CMD;
fbVS1.awl:    T "idbMOT1".f[#p.link.PUMP1].p.owner.mc.CMD;
fbVS1.awl:    T "idbMOT1".f[#p.link.PUMP2].p.owner.mc.CMD;
fbVS1.awl:    T "idbMOT1".f[#p.link.PUMP1].p.owner.mc.CMD;
fbVS1.awl:    T "idbMOT1".f[#p.link.PUMP2].p.owner.mc.CMD;
fbx.awl:    // send the owner parameters:                                             //
fbx.awl:    A "idb@@CLASS@@".f[@@IDX@@].p.owner.mc.isOriginOwner;
fbx.awl:    // and receive the owner parameters:                                      //
fbx.awl:    AN "idb@@CLASS@@".f[@@IDX@@].p.owner.mc.isOriginOwner;
fbx.awl:    // If this is the Owner origin then transfer the owner parameters:        //
fbx.awl:        SD_1                 := "idb@@CLASS@@".f[@@IDX@@].p.owner ,
fbx.awl:    // If not the Owner origin then receive the owner parameters:             //
fbx.awl:    AN "idb@@CLASS@@".f[@@IDX@@].p.owner.mc.isOriginOwner;
fbx.awl:    // If not the Owner origin then receive the owner parameters:             //
fbx.awl:        RD_1                 := "idb@@CLASS@@".f[@@IDX@@].p.owner ,
fbZSC1.awl:        mcOwner              := #p.owner.mc
fbZSC1.awl:    L #p.owner.mc.CMD;
fbZSC1.awl:    L #p.owner.mc.CMD;
fbZSC1.awl:    A #p.owner.DI_Manual;
fbZSC1.awl:    AN #p.owner.CUTOUT;
fbZSC2.awl:        mcOwner              := #p.owner.mc
fbZSC2.awl:    L #p.owner.mc.CMD;
fbZSC2.awl:    L #p.owner.mc.CMD;
fbZSC2.awl:    A #p.owner.DI_Manual;
fcAL1.awl:        mcOwner              := #p.owner.mc
fcAL1.awl:    T #p.owner.mc.CMD;
fcDI1.awl:        mcOwner              := #p.owner.mc
fcDI1.awl:    T #p.owner.mc.CMD;
fcDI1.awl:    A #p.owner.DI_Manual;
fcDI2.awl:        mcOwner              := #p.owner.mc
fcDI2.awl:    T #p.owner.mc.CMD;
fcDI2.awl:    A #p.owner.DI_Manual;
fcDI3.awl:        mcOwner              := #p.owner.mc
fcDI3.awl:    T #p.owner.mc.CMD;
fcDI3.awl:    A #p.owner.DI_Manual;
fcHE1.awl:        mcOwner              := #p.owner.mc
fcHE1.awl:    L #p.owner.mc.CMD;
fcHE1.awl:    L #p.owner.mc.CMD;
fcHE1.awl:    = #p.owner.CUTOUT;
fcHMIInterfaceBLK.awl:    mco : "udtMCOwner";      // Block owner mode and command
fcHMIInterfaceBLK.awl:TITLE = Copy the BLK owner mode and command data to the HMI interface block
fcHMIInterfaceBLK.awl:    // Copy owner mode and command data:                                      //
fcMOD1.awl:        mcOwner              := #p.owner.mc
fcMOD1.awl:    L #p.owner.mc.CMD;
fcMOD1.awl:    L #p.owner.mc.CMD;
fcMOD1.awl:    L #p.owner.mc.CMD;
fcMOD1.awl:    L #p.owner.POS_LOCAL;
fcMOD1.awl:    L #p.owner.POS_REMOTE;
fcModeCmd.awl:    mcOwner : "udtMCOwner";     // Block mode and command directives from owner CPU
fcModeCmdBLK.awl:    mcOwner : "udtMCOwner";            // Block mode and command directives from owner CPU
fcPC1.awl:        mcOwner              := #p.owner.mc
fcPC1.awl:    L #p.owner.mc.CMD;
fcPC1.awl:    L #p.owner.mc.CMD;
fcPC1.awl:    L #p.owner.mc.CMD;
fcPC1.awl:    L #p.owner.SETPOINT;
fcPC1.awl:    L #p.owner.DB_H;
fcPC1.awl:    L #p.owner.SETPOINT;
fcPC1.awl:    L #p.owner.DB_L;
fcPC1.awl:    L #p.owner.MEDIUM_GAS;
fcPC1.awl:    L #p.owner.MEDIUM_GAS;
fcPC1.awl:    L #p.owner.MEDIUM_GAS;
fcPC1.awl:    L #p.owner.MEDIUM_GAS;
fcPC1.awl:    L #p.owner.MEDIUM_GAS;
fcPC1.awl:    L #p.owner.SETPOINT;
fcPC1.awl:    L #p.owner.SETPOINT;
fcPC1.awl:    T #p.origin.DRAIN.owner.mc.CMD;
fcPC1.awl:    T #p.origin.HPCA.owner.mc.CMD;
fcPC1.awl:    T #p.origin.LPCA.owner.mc.CMD;
fcPC1.awl:    T #p.origin.VACUUM.owner.mc.CMD;
fcPC1.awl:    T #p.origin.VENT.owner.mc.CMD;
fcPC1.awl:    T #p.origin.DRAIN.owner.mc.CMD;
fcPC1.awl:    T #p.origin.HPCA.owner.mc.CMD;
fcPC1.awl:    T #p.origin.LPCA.owner.mc.CMD;
fcPC1.awl:    T #p.origin.VACUUM.owner.mc.CMD;
fcPC1.awl:    T #p.origin.VENT.owner.mc.CMD;
fcVS1.awl:        mcOwner              := #p.owner.mc
fcVS1.awl:    L #p.owner.mc.CMD;
fcVS1.awl:    L #p.owner.mc.CMD;
fcVS1.awl:    T #p.origin.PUMP1.owner.mc.CMD;
fcVS1.awl:    T #p.origin.PUMP2.owner.mc.CMD;
fcVS1.awl:    T #p.origin.PUMP1.owner.mc.CMD;
fcVS1.awl:    T #p.origin.PUMP2.owner.mc.CMD;
fcZSC1.awl:        mcOwner              := #p.owner.mc
fcZSC1.awl:    L #p.owner.mc.CMD;
fcZSC1.awl:    L #p.owner.mc.CMD;
fcZSC1.awl:    A #p.owner.DI_Manual;
fcZSC1.awl:    AN #p.owner.CUTOUT;
fcZSC2.awl:        mcOwner              := #p.owner.mc
fcZSC2.awl:    L #p.owner.mc.CMD;
fcZSC2.awl:    L #p.owner.mc.CMD;
fcZSC2.awl:    A #p.owner.DI_Manual;
gAlarmDiscrete.awl:@@COUNTERTEMPLATE|1@@,DiscreteAlarm_@@COUNTERTEMPLATE@@,": <field ref=""0"" /> : @@INSTANCE@@ : @@MESSAGE@@","<ref id = 0; type = AlarmTag; Tag = ""idb@@CLASS@@.f[@@IDX@@].p.owner.mc.SERIALNUM""; DisplayType = Text; Length = 6;>",Errors,"""hmiALARMS.ALARM""",@@COUNTERTEMPLATE@@,<No value>,0,<No value>,0,<No value>,False,<No value>
gTagHMI.awl:idb@@CLASS@@_@@INSTANCE@@_owner_SETPOINT,Default tag table,HMI_Connection_1,idb@@CLASS@@.f[@@IDX@@].p.owner.SETPOINT,Real,4,IEEE754,Symbolic access,<No Value>,False,<No Value>,<No Value>,0,<No Value>,<No Value>,Cyclic in operation,1 s,None,<No Value>,None,<No Value>,None,<No Value>,None,<No Value>,False,10,0,100,0,False,None,False
ifbAL1.awl:    // Set the instance owner:                                                //
ifbAL1.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbAL1.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifbBLK.awl:    // Set the instance owner:                                                //
ifbBLK.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbBLK.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifbBLK.awl:    L #f[@@IDX@@].p.owner.mc.RECIPE;
ifbBLK.awl:    T #f[@@IDX@@].p.owner.@@BLOCKPARAMETER@@;
ifbDI1.awl:    // Set the instance owner:                                                //
ifbDI1.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbDI1.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifbDI2.awl:    // Set the instance owner:                                                //
ifbDI2.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbDI2.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifbDI3.awl:    // Set the instance owner:                                                //
ifbDI3.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbDI3.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifbHE1.awl:    // Set the instance owner:                                                //
ifbHE1.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbHE1.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifbMOD1.awl:    // Set the instance owner:                                                //
ifbMOD1.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbMOD1.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifbMOD1.awl:    T #f[@@IDX@@].p.owner.POS_REMOTE;
ifbMOD1.awl:    T #f[@@IDX@@].p.owner.POS_LOCAL;
ifbMOT1.awl:    // Set the instance owner:                                                //
ifbMOT1.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbMOT1.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifbPC1.awl:    // Set the instance owner:                                                //
ifbPC1.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbPC1.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifbPC1.awl:    T #f[@@IDX@@].p.owner.DB_L;
ifbPC1.awl:    T #f[@@IDX@@].p.owner.DB_H;
ifbPOS1.awl:    // Set the instance owner:                                                //
ifbPOS1.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbPOS1.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifbPOS2.awl:    // Set the instance owner:                                                //
ifbPOS2.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbPOS2.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifbPOS3.awl:    // Set the instance owner:                                                //
ifbPOS3.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbPOS3.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifbPOS4.awl:    // Set the instance owner:                                                //
ifbPOS4.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbPOS4.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifbSIC1.awl:    // Set the instance owner:                                                //
ifbSIC1.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbSIC1.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifbTC1.awl:    // Set the instance owner:                                                //
ifbTC1.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbTC1.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifbVS1.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbVS1.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifbZSC1.awl:    // Set the instance owner:                                                //
ifbZSC1.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbZSC1.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifbZSC2.awl:    // Set the instance owner:                                                //
ifbZSC2.awl:    T #f[@@IDX@@].p.owner.mc.OWNER;
ifbZSC2.awl:    = #f[@@IDX@@].p.owner.mc.isOriginOwner;
ifcHMISelectBLK.awl:        mco                  := "idb@@CLASS@@".f[@@IDX@@].p.owner.mc
ifcHMISelectBLK.awl:    A "idb@@CLASS@@".f[@@IDX@@].p.owner.@@BLOCKPARAMETER@@;
ifcHMISelectBLK.awl:    L "idb@@CLASS@@".f[@@IDX@@].p.owner.@@BLOCKPARAMETER@@;
ifcHMISelectBLK.awl:    L "idb@@CLASS@@".f[@@IDX@@].p.owner.@@BLOCKPARAMETER@@;
ifcHMISelectBLK.awl:    L "idb@@CLASS@@".f[@@IDX@@].p.owner.@@BLOCKPARAMETER@@;
instances_of_origin:fbx.awl:    // If this is the Owner origin then transfer the owner parameters:        //
instances_of_origin:fbx.awl:    // If not the Owner origin then receive the owner parameters:             //
instances_of_origin:fbx.awl:    // If not the Owner origin then receive the owner parameters:             //
instances_of_origin:fcPC1.awl:    T #p.origin.DRAIN.owner.mc.CMD;
instances_of_origin:fcPC1.awl:    T #p.origin.HPCA.owner.mc.CMD;
instances_of_origin:fcPC1.awl:    T #p.origin.LPCA.owner.mc.CMD;
instances_of_origin:fcPC1.awl:    T #p.origin.VACUUM.owner.mc.CMD;
instances_of_origin:fcPC1.awl:    T #p.origin.VENT.owner.mc.CMD;
instances_of_origin:fcPC1.awl:    T #p.origin.DRAIN.owner.mc.CMD;
instances_of_origin:fcPC1.awl:    T #p.origin.HPCA.owner.mc.CMD;
instances_of_origin:fcPC1.awl:    T #p.origin.LPCA.owner.mc.CMD;
instances_of_origin:fcPC1.awl:    T #p.origin.VACUUM.owner.mc.CMD;
instances_of_origin:fcPC1.awl:    T #p.origin.VENT.owner.mc.CMD;
instances_of_origin:fcVS1.awl:    T #p.origin.PUMP1.owner.mc.CMD;
instances_of_origin:fcVS1.awl:    T #p.origin.PUMP2.owner.mc.CMD;
instances_of_origin:fcVS1.awl:    T #p.origin.PUMP1.owner.mc.CMD;
instances_of_origin:fcVS1.awl:    T #p.origin.PUMP2.owner.mc.CMD;
udtBLK.awl:TYPE "udt@@CLASS@@owner"
udtBLK.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtBLK.awl:        owner : "udt@@CLASS@@owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtAL1owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtAL1owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtDI1owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtDI1owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtDI2owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtDI2owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtDI3owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtDI3owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtHE1owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtHE1owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtMI1owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtMI1owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtMOD1owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtMOD1owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtMOT1owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtMOT1owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtPI1owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtPI1owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtPOSxowner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtPOSxowner";         // Directives from owner CPU
udtCM.awl:TYPE "udtPOS1owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtPOS1owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtPOS2owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtPOS2owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtPOS3owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtPOS3owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtPOS4owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtPOS4owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtSIC1owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtSIC1owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtTC1owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtTC1owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtTI1owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtTI1owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtTI2owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtTI2owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtVS1owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtVS1owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtZSC1owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtZSC1owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtZSC2owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtZSC2owner";         // Directives from owner CPU
udtCM.awl:TYPE "udtPC1owner"
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtPC1owner";         // Directives from owner CPU
udtMaster.awl:        isAvailable : Bool;            // True if block has no owner
