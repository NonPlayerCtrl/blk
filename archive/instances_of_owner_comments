fbBLK.awl:    // Flag to take ownership of the child now and release at the end if      //
fbx.awl:    // send the owner parameters:                                             //
fbx.awl:    // and receive the owner parameters:                                      //
fbx.awl:    // If this is the Owner origin then transfer the owner parameters:        //
fbx.awl:    // If not the Owner origin then receive the owner parameters:             //
fbx.awl:    // If not the Owner origin then receive the owner parameters:             //
fcHMIInterfaceBLK.awl:    mco : "udtMCOwner";      // Block owner mode and command
fcHMIInterfaceBLK.awl:    // Copy owner mode and command data:                                      //
fcModeCmd.awl:    mcOwner : "udtMCOwner";     // Block mode and command directives from owner CPU
fcModeCmdBLK.awl:    mcOwner : "udtMCOwner";            // Block mode and command directives from owner CPU
ifbAL1.awl:    // Set the instance owner:                                                //
ifbBLK.awl:    // Set the instance owner:                                                //
ifbDI1.awl:    // Set the instance owner:                                                //
ifbDI2.awl:    // Set the instance owner:                                                //
ifbDI3.awl:    // Set the instance owner:                                                //
ifbHE1.awl:    // Set the instance owner:                                                //
ifbMOD1.awl:    // Set the instance owner:                                                //
ifbMOT1.awl:    // Set the instance owner:                                                //
ifbPC1.awl:    // Set the instance owner:                                                //
ifbPOS1.awl:    // Set the instance owner:                                                //
ifbPOS2.awl:    // Set the instance owner:                                                //
ifbPOS3.awl:    // Set the instance owner:                                                //
ifbPOS4.awl:    // Set the instance owner:                                                //
ifbSIC1.awl:    // Set the instance owner:                                                //
ifbTC1.awl:    // Set the instance owner:                                                //
ifbZSC1.awl:    // Set the instance owner:                                                //
ifbZSC2.awl:    // Set the instance owner:                                                //
instances_of_origin:fbx.awl:    // If this is the Owner origin then transfer the owner parameters:        //
instances_of_origin:fbx.awl:    // If not the Owner origin then receive the owner parameters:             //
instances_of_origin:fbx.awl:    // If not the Owner origin then receive the owner parameters:             //
udtBLK.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtBLK.awl:        owner : "udt@@CLASS@@owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtAL1owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtDI1owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtDI2owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtDI3owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtHE1owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtMI1owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtMOD1owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtMOT1owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtPI1owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtPOSxowner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtPOS1owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtPOS2owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtPOS3owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtPOS4owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtSIC1owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtTC1owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtTI1owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtTI2owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtVS1owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtZSC1owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtZSC2owner";         // Directives from owner CPU
udtCM.awl:        mc : "udtMCOwner";             // Block mode and command for directives from owner CPU
udtCM.awl:        owner : "udtPC1owner";         // Directives from owner CPU
udtMaster.awl:        isAvailable : Bool;            // True if block has no owner
