//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//----------------------------------------------------------------------------//
// Class:       fbHE1                                                         //
// Description:                                                               //
// Vessel vent filter Electric heater element.                                //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 2.0 David Paspa      30-Jan-2018 NA        Reboot for S7-1500.             //
// 0.5 Khairul Basar    09-Oct-2009 CC-09/016 NW4, CMD & IL then Failed.      //
// 0.4 Gerald Kontriner 09-Oct-2009 CC-09/016 MON_MISMATCH Logic.             //
// 0.3 Khairul Basar    16-Sep-2009 CC-09/016 Duplicate Input Parameter       //
//                                            deleted auto/manual both now    //
//                                            using same parameter.           //
// 0.2 Khairul Basar    28-Aug-2009 CC-09/016 Ref1.Cutout can be ON/OFF when  //
//                                            key switch is ON.               //
// 0.1 Khairul Basar    03-Aug-2009           Initial design.                 //
//                                                                            //
// Ref1.Cutout ON when key switch is OFF and Command is ON or OFF.When Key    //
// switch is ON cutout can be ON or OFF by using user ON/OFF command.         //
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "fbHE1"
TITLE = HE1 : Vessel vent filter Electric heater element
{ S7_Optimized_Access := 'FALSE' }
AUTHOR : REO
NAME : fbHE1
VERSION : 2.0

//----------------------------------------------------------------------------//
// Declare variables:                                                         //
//----------------------------------------------------------------------------//
VAR_INPUT
    OWNER : Int;             // Value to be set by Parent
    SERIAL : Int;            // Unique batch or CIPSIP serial number
    CRIL : Bool;             // Critical interlock
    NCRIL : Bool;            // Non-critical interlock
    MAN_OVERRIDE : Bool;     // Override non-critical interlocks
    FAULT : Bool;            // Fault input signal from Field
END_VAR

VAR_OUTPUT
    DO : Bool;               // Output Signal to Heating Element
    ALARM : Bool;            // Alarm Flag (0 = OK, 1 = ALARM)
    CUTOUT : Bool;           // Flag indicating if TI alarm is to cutout (0= Alarm Enabled, 1= Alarm Disabled)
END_VAR

VAR_IN_OUT
    CMD : Int;               // Device Command from dbCONST
    MODE : Int;              // Control Mode
    STATE : Int;             // Device State from dbCONST
    INTERLOCK : Bool;        // Interlock Flag (0 = Inactive, 1 = Active)
END_VAR

VAR_TEMP
    modeAUTO : Bool;
    modeMANUAL : Bool;
    modeOOS : Bool;
    tDO : Bool;              // Temporary processed DO signal
    tFault : Bool;
END_VAR

BEGIN
NETWORK
TITLE = Call Mode and Command handling block
    //------------------------------------------------------------------------//
    // COMMAND PROCESSOR   COMMAND PROCESSOR   COMMAND PROCESSOR   COMMAND    //
    //                                                                        //
    // Process the standard block functions for command, mode, interlock and  //
    // state:                                                                 //
    //------------------------------------------------------------------------//
    CALL "fcModeCmd"
    (
        CRIL                 := #CRIL ,
        NCRIL                := #NCRIL ,
        MAN_OVERRIDE         := #MAN_OVERRIDE ,
        CMD_SAFE             := "dbCONST".BLK.HE1.SAFE.CMD ,
        MODE                 := #MODE ,
        CMD                  := #CMD ,
        STATE                := #STATE ,
        INTERLOCK            := #INTERLOCK ,
        modeAUTO             := #modeAUTO ,
        modeMANUAL           := #modeMANUAL ,
        modeOOS              := #modeOOS
    );
    NOP 0;

NETWORK
TITLE = Device command ENABLE
    //------------------------------------------------------------------------//
    // COMMAND   COMMAND   COMMAND   COMMAND   COMMAND   COMMAND   COMMAND    //
    // COMMAND   COMMAND   COMMAND   COMMAND   COMMAND   COMMAND   COMMAND    //
    //                                                                        //
    // CMD is ENABLE if no fault or interlock, otherwise DISABLE:             //
    //------------------------------------------------------------------------//
    AN #tFault;
    AN #INTERLOCK;
    L #CMD;
    L "dbCONST".BLK.HE1.CMD.ENABLE;
    ==I;
    = #tDO;

NETWORK
TITLE = Process Fault Digital Input Signal
    //------------------------------------------------------------------------//
    // INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS  //
    // INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS  //
    //                                                                        //
    // Check if the field indicates there is a fault:                         //
    //------------------------------------------------------------------------//
    A #FAULT;
    = #tFault;

NETWORK
TITLE = Device command DISABLE
    //------------------------------------------------------------------------//
    // CMD is DISABLE then switch off regardless of any fault or interlock:   //
    //------------------------------------------------------------------------//
    L #CMD;
    L "dbCONST".BLK.HE1.CMD.DISABLE;
    ==I;
    R #tDO;

NETWORK
TITLE = Set CUTOUT Flag if output is off
    //------------------------------------------------------------------------//
    // OUTPUTS   OUTPUTS   OUTPUTS   OUTPUTS   OUTPUTS   OUTPUTS   OUTPUTS    //
    // OUTPUTS   OUTPUTS   OUTPUTS   OUTPUTS   OUTPUTS   OUTPUTS   OUTPUTS    //
    //                                                                        //
    // Flag indicating if TI alarm is to be cutout (i.e. disabled) whenever   //
    // HE is OFF:                                                             //
    //------------------------------------------------------------------------//
    AN #tDO;
    = #CUTOUT;

NETWORK
TITLE = Set Digital Output Signal
    //------------------------------------------------------------------------//
    // Set the output ON or OFF as required:                                  //
    //------------------------------------------------------------------------//
    A #tDO;
    = #DO;

NETWORK
TITLE = Set Device State to Enabled if output is on
    //------------------------------------------------------------------------//
    // STATE   STATE   STATE   STATE   STATE   STATE   STATE   STATE   STATE  //
    // STATE   STATE   STATE   STATE   STATE   STATE   STATE   STATE   STATE  //
    //                                                                        //
    // ENABLED if output is on:                                               //
    //------------------------------------------------------------------------//
    A #tDO;
    L "dbCONST".BLK.HE1.STATE.ENABLED;
    T #STATE;

NETWORK
TITLE = Set Device State to Disabled if output is off
    //------------------------------------------------------------------------//
    // DISABLED if output is off:                                             //
    //------------------------------------------------------------------------//
    AN #tDO;
    AN #tFault;
    L "dbCONST".BLK.HE1.STATE.DISABLED;
    T #STATE;

NETWORK
TITLE = Set Device State to Fault if field fault signal is on
    //------------------------------------------------------------------------//
    // FAULT if fault signal is on:                                           //
    //------------------------------------------------------------------------//
    A #tFault;
    L "dbCONST".BLK.HE1.STATE.FAULT;
    T #STATE;
END_FUNCTION_BLOCK
