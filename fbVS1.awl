//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//----------------------------------------------------------------------------//
// Class:       fbVS1                                                         //
// Description:                                                               //
// Grouped CM for the two vacuum pumps to comprise one vacuum system which    //
// starts sucking if any user vacuum valve opens indicating a call for the    //
// vacuum service.                                                            //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 2.0 David Paspa      30-Jan-2018 NA        Reboot for S7-1500.             //
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "fbVS1"
TITLE = VS1 : VS1 Vacuum System grouped CM
{ S7_Optimized_Access := 'FALSE' }
NAME : fbVS1
AUTHOR : REO
VERSION : 2.0

//----------------------------------------------------------------------------//
// Declare variables:                                                         //
//----------------------------------------------------------------------------//
VAR_INPUT
    OWNER : Int;             // Value to be set or reset by Parent
    SERIAL : Int;            // Unique batch or CIPSIP serial number
    CRIL : Bool;            // Critical Interlock in series
    NCRIL : Bool;           // Non-critical Interlock in series
    MAN_OVERRIDE : Bool;     // Critical Interlock in series can be Override by this Input
    CMD_SAFE : Int;          // Safe command for the module
    DI_Auto : Bool;          // Input signal from Field
    DI_Manual : Bool;        // User digital signal for simulating
END_VAR

VAR_OUTPUT
    ALARM : Bool;            // Alarm Flag (0 = OK, 1 = ALARM)
    PV : Bool;               // Processed DI
END_VAR

VAR_IN_OUT
    CMD : Int;               // Command
    MODE : Int;              // Control Mode
    STATE : Int;             // Device State from dbCONST
    INTERLOCK : Bool;        // Interlock Flag (0 = Inactive, 1 = Active)
END_VAR

VAR_TEMP
    modeAUTO : Bool;
    modeMANUAL : Bool;
    modeOOS : Bool;
    tPV : Bool;              // Temporary processed DI signal
END_VAR

BEGIN
NETWORK
TITLE = Call Mode and Command handling function
    //------------------------------------------------------------------------//
    // MODE AND COMMAND   MODE AND COMMAND   MODE AND COMMAND   MODE AND COMM //
    // MODE AND COMMAND   MODE AND COMMAND   MODE AND COMMAND   MODE AND COMM //
    //                                                                        //
    // Process the standard block functions for command, mode, interlock and  //
    // state:                                                                 //
    //------------------------------------------------------------------------//
    CALL "fcModeCmd"
    (
        CRIL                 := #CRIL ,
        NCRIL                := #NCRIL ,
        MAN_OVERRIDE         := #MAN_OVERRIDE ,
        CMD_SAFE             := #CMD_SAFE ,
        modeAUTO             := #modeAUTO ,
        modeMANUAL           := #modeMANUAL ,
        modeOOS              := #modeOOS ,
        MODE                 := #MODE ,
        CMD                  := #CMD ,
        STATE                := #STATE ,
        INTERLOCK            := #INTERLOCK
    );

NETWORK
TITLE = Set Device command which can only be ENABLE.
    //------------------------------------------------------------------------//
    // COMMAND   COMMAND   COMMAND   COMMAND   COMMAND   COMMAND   COMMAND    //
    // COMMAND   COMMAND   COMMAND   COMMAND   COMMAND   COMMAND   COMMAND    //
    //                                                                        //
    // CMD is always ENABLE:                                                  //
    //------------------------------------------------------------------------//
    L "dbCONST".BLK.VS1.CMD.STOPPED;
    T #CMD;

NETWORK
TITLE = Process Digital Input Signal
    //------------------------------------------------------------------------//
    // INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS  //
    // INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS  //
    //                                                                        //
    // Calculate the process value based on the mode:                         //
    //------------------------------------------------------------------------//
    O(;
    A #modeAUTO;
    A #DI_Auto;
    );
    O(;
    A #modeMANUAL;
    A #DI_Manual;
    );
    = #tPV;
    = #PV;

NETWORK
TITLE = Set ALARM Flag
    //------------------------------------------------------------------------//
    // ALARM   ALARM   ALARM   ALARM   ALARM   ALARM   ALARM   ALARM   ALARM  //
    // ALARM   ALARM   ALARM   ALARM   ALARM   ALARM   ALARM   ALARM   ALARM  //
    //                                                                        //
    // Set alarms:                                                            //
    //------------------------------------------------------------------------//
    AN #tPV;
    AN #modeOOS;
    = #ALARM;

NETWORK
TITLE = Set INTERLOCK Flag
    //------------------------------------------------------------------------//
    // INTERLOCK   INTERLOCK   INTERLOCK   INTERLOCK   INTERLOCK   INTERLOCK  //
    // INTERLOCK   INTERLOCK   INTERLOCK   INTERLOCK   INTERLOCK   INTERLOCK  //
    //                                                                        //
    // Set interlocks:                                                        //
    //------------------------------------------------------------------------//
    A #tPV;
    = #INTERLOCK;

NETWORK
TITLE = Set Device State to Enabled if switch is on
    //------------------------------------------------------------------------//
    // STATE   STATE   STATE   STATE   STATE   STATE   STATE   STATE   STATE  //
    // STATE   STATE   STATE   STATE   STATE   STATE   STATE   STATE   STATE  //
    //                                                                        //
    // ENABLED if switch is on:                                               //
    //------------------------------------------------------------------------//
    A #tPV;
    L "dbCONST".BLK.VS1.STATE.VACUUM;
    T #STATE;

NETWORK
TITLE = Setting Device State to ALARM
    //------------------------------------------------------------------------//
    // ALARM if switch is off and not OOS:                                    //
    //------------------------------------------------------------------------//
    A #ALARM;
    L "dbCONST".BLK.VS1.STATE.FAULT;
    T #STATE;
END_FUNCTION_BLOCK
