//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//----------------------------------------------------------------------------//
// Class:       fbVS1                                                         //
// Description:                                                               //
// Grouped CM for the two vacuum pumps to comprise one vacuum system which    //
// starts sucking if any user vacuum valve opens indicating a call for the    //
// vacuum service.                                                            //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 2.0 David Paspa      30-Jan-2018 NA        Reboot for S7-1500.             //
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "fbVS1"
TITLE = VS1 : VS1 Vacuum System grouped CM
{ S7_Optimized_Access := 'TRUE' }
NAME : fbVS1
AUTHOR : REO
VERSION : 2.0

//----------------------------------------------------------------------------//
// Declare variables:                                                         //
//----------------------------------------------------------------------------//
VAR_INPUT
    VLV1_STATE : Int;        // State of the user 1 valve
    VLV2_STATE : Int;        // State of the user 2 valve
    PUMP1_INTERLOCK : Bool;  // Vacuum Pump 1 interlock
    PUMP2_INTERLOCK : Bool;  // Vacuum Pump 2 interlock
END_VAR

VAR_OUTPUT
    PUMP1_CMD : Int;         // Vacuum Pump 1 command
    PUMP2_CMD : Int;         // Vacuum Pump 2 command
END_VAR

VAR
    mc : "udtModeCommand";   // Block mode and command
    FAULT : Bool;
END_VAR

VAR_TEMP
    cmdDISABLE : Bool;
    cmdENABLE : Bool;
    tDO : Bool;              // Temporary processed output signal
END_VAR

BEGIN
NETWORK
TITLE = Call Mode and Command handling function
    //------------------------------------------------------------------------//
    // MODE AND COMMAND   MODE AND COMMAND   MODE AND COMMAND   MODE AND COMM //
    // MODE AND COMMAND   MODE AND COMMAND   MODE AND COMMAND   MODE AND COMM //
    //                                                                        //
    // Process the standard block functions for command, mode, interlock and  //
    // state:                                                                 //
    //------------------------------------------------------------------------//
    CALL "fcModeCmd"
    (   mc                   := #mc
    );

NETWORK
TITLE = DISABLE command
    //------------------------------------------------------------------------//
    // COMMAND   COMMAND   COMMAND   COMMAND   COMMAND   COMMAND   COMMAND    //
    // COMMAND   COMMAND   COMMAND   COMMAND   COMMAND   COMMAND   COMMAND    //
    //                                                                        //
    // CMD is DISABLE:                                                        //
    //------------------------------------------------------------------------//
    A(;
    L #mc.CMD;
    L "dbCONST".BLK.VS1.CMD.DISABLE;
    ==I;
    );
    = #cmdDISABLE;

    //------------------------------------------------------------------------//
    // CMD is ENABLE:                                                         //
    //------------------------------------------------------------------------//
    AN #mc.modeOOS;
    AN #mc.INTERLOCK;
    A(;
    L #mc.CMD;
    L "dbCONST".BLK.VS1.CMD.ENABLE;
    ==I;
    );
    = #cmdENABLE;

NETWORK
TITLE = Check vacuum pumps are available
    //------------------------------------------------------------------------//
    // INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS  //
    // INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS   INPUTS  //
    //                                                                        //
    // Check vacuum pumps are not interlocked:                                //
    //------------------------------------------------------------------------//
    AN #mc.modeOOS;
    A(;
    O #PUMP1_INTERLOCK;
    O #PUMP2_INTERLOCK;
    );
    = #FAULT;

    //------------------------------------------------------------------------//
    // Check if any user valve is open which is a call for vacuum:            //
    //------------------------------------------------------------------------//
    A #cmdENABLE;
    AN #FAULT;
    A(;
    O(;
    L #VLV1_STATE;
    L "dbCONST".BLK.POSx.STATE.OPENED;
    ==I;
    );
    O(;
    L #VLV2_STATE;
    L "dbCONST".BLK.POSx.STATE.OPENED;
    ==I;
    );
    );
    = #tDO;

NETWORK
TITLE = Check vacuum pumps are available
    //------------------------------------------------------------------------//
    // OUTPUTS   OUTPUTS   OUTPUTS   OUTPUTS   OUTPUTS   OUTPUTS   OUTPUTS    //
    // OUTPUTS   OUTPUTS   OUTPUTS   OUTPUTS   OUTPUTS   OUTPUTS   OUTPUTS    //
    //                                                                        //
    // Start vacuum pump 1 if a call for vacuum and all okay:                 //
    //------------------------------------------------------------------------//
    A #tDO;
    JCN _a;
    L "dbCONST".BLK.MOT1.CMD.START;
    T #PUMP1_CMD;
_a:   NOP 0;

    //------------------------------------------------------------------------//
    // Start vacuum pump 2 if a call for vacuum and all okay:                 //
    //------------------------------------------------------------------------//
    A #tDO;
    JCN _b;
    L "dbCONST".BLK.MOT1.CMD.START;
    T #PUMP2_CMD;
_b:   NOP 0;

    //------------------------------------------------------------------------//
    // Stop vacuum pump 1 if not required to run:                             //
    //------------------------------------------------------------------------//
    AN #tDO;
    JCN _c;
    L "dbCONST".BLK.MOT1.CMD.STOP;
    T #PUMP1_CMD;
_c:   NOP 0;

    //------------------------------------------------------------------------//
    // Stop vacuum pump 2 if not required to run:                             //
    //------------------------------------------------------------------------//
    AN #tDO;
    JCN _d;
    L "dbCONST".BLK.MOT1.CMD.STOP;
    T #PUMP2_CMD;
_d:   NOP 0;

NETWORK
TITLE = Set Device State to DISABLED if commanded or cannot ENABLE
    //------------------------------------------------------------------------//
    // STATE   STATE   STATE   STATE   STATE   STATE   STATE   STATE   STATE  //
    // STATE   STATE   STATE   STATE   STATE   STATE   STATE   STATE   STATE  //
    //                                                                        //
    // DISABLED if commanded or any ENABLE problem:                           //
    //------------------------------------------------------------------------//
    O #cmdDISABLE;
    ON #cmdENABLE;
    JCN _e;
    L "dbCONST".BLK.VS1.STATE.DISABLED;
    T #mc.STATE;
_e:   NOP 0;

NETWORK
TITLE = Set Device State to ENABLED if commanded
    //------------------------------------------------------------------------//
    // ENABLED if commanded:                                                  //
    //------------------------------------------------------------------------//
    A #cmdENABLE;
    JCN _f;
    L "dbCONST".BLK.VS1.STATE.ENABLED;
    T #mc.STATE;
_f:   NOP 0;

NETWORK
TITLE = Setting Device State to FAULT
    //------------------------------------------------------------------------//
    // FAULT if problem with either vacuum pump:                              //
    //------------------------------------------------------------------------//
    A #FAULT;
    JCN _g;
    L "dbCONST".BLK.VS1.STATE.FAULT;
    T #mc.STATE;
_g:   NOP 0;
END_FUNCTION_BLOCK
