//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//                Automatically Generated File - Do Not Edit                  //
//----------------------------------------------------------------------------//
// Title:       udtBLK                                                        //
// Description: Master definition of user defined data structures for Blocks. //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 1.0 David Paspa      04-Jun-2018 NA        Reboot for S7-1500.             //
//----------------------------------------------------------------------------//
@@TEMPLATE_BEGIN|PARENT@@
TYPE "udt@@CLASS@@read"
VERSION : 1.0
    STRUCT
        mc : "udtMCRead";            // Block mode and command for calculations on read CPU
        bmc : "udtModeCommandBLK";   // Block mode and command
        err : "udtBLKError";         // Block error
@@ATTR_BEGIN|pClassBlockRead@@
        @@BLOCKPARAMETER@@ : @@PARAMETERDATATYPE@@;
@@ATTR_END|pClassBlockRead@@
@@ATTR_BEGIN|pChildReadDefine@@
        @@BLOCKPARAMETER@@ : @@PARAMETERDATATYPE@@;
@@ATTR_END|pChildReadDefine@@
@@ATTR_BEGIN|pEventPromptExists@@
@@ATTR_BEGIN|pEventPromptNum@@
        eventPrompt : Array[1..@@IDXEVENTMAX@@] of "udtEventPrompt";   // SFC events for operator prompts
@@ATTR_END|pEventPromptNum@@
@@ATTR_END|pEventPromptExists@@
@@ATTR_BEGIN|pEventLogMsgExists@@
@@ATTR_BEGIN|pEventLogMsgWordClass@@
        eventLogMsg_@@CWORD@@ : Int;           // SFC events for logging messages as Discrete Alarms
@@ATTR_END|pEventLogMsgWordClass@@
@@ATTR_END|pEventLogMsgExists@@
@@ATTR_BEGIN|pEventLogRealExists@@
@@ATTR_BEGIN|pEventLogRealNum@@
        eventLogReal : Array[1..@@IDXEVENTMAX@@] of "udtEventLogReal";   // SFC events for logging real data
@@ATTR_END|pEventLogRealNum@@
@@ATTR_END|pEventLogRealExists@@
@@ATTR_BEGIN|pEventLogTimeExists@@
@@ATTR_BEGIN|pEventLogTimeNum@@
        eventLogTime : Array[1..@@IDXEVENTMAX@@] of "udtEventLogTime";   // SFC events for logging time data
@@ATTR_END|pEventLogTimeNum@@
@@ATTR_END|pEventLogTimeExists@@
@@ATTR_BEGIN|HYGIENE@@
        hs : "udtHygiene";
@@ATTR_END|HYGIENE@@
    END_STRUCT;
END_TYPE

TYPE "udt@@CLASS@@write"
VERSION : 1.0
    STRUCT
        mc : "udtMCWrite";             // Block mode and command for directives from write CPU
@@ATTR_BEGIN|pClassBlockWrite@@
        @@BLOCKPARAMETER@@ : @@PARAMETERDATATYPE@@;
@@ATTR_END|pClassBlockWrite@@
@@ATTR_BEGIN|pChildWriteDefine@@
        @@BLOCKPARAMETER@@ : @@PARAMETERDATATYPE@@;
@@ATTR_END|pChildWriteDefine@@
    END_STRUCT;
END_TYPE

TYPE "udt@@CLASS@@children"
VERSION : 1.0
    STRUCT
@@ATTR_BEGIN|CHILD@@
        @@CHILDPARAMETERALIAS@@ : Int; // @@CHILDALIASCLASS@@ @@CHILDPARAMETERALIAS@@ @@CHILDALIASDESCRIPTION@@ Instance DB Index
@@ATTR_END|CHILD@@
    END_STRUCT;
END_TYPE

@@ATTR_BEGIN|pLinkExists@@
TYPE "udt@@CLASS@@link"
VERSION : 1.0
    STRUCT
@@ATTR_BEGIN|pLink@@
        @@CHILDPARAMETERALIAS@@ : Int;      // @@CHILDPARAMETERCLASS@@ Instance DB Index
@@ATTR_END|pLink@@
    END_STRUCT;
END_TYPE
@@ATTR_END|pLinkExists@@

@@ATTR_BEGIN|pChildSelectExists@@
TYPE "udt@@CLASS@@select"
VERSION : 1.0
    STRUCT
@@ATTR_BEGIN|pChildSelect@@
        @@LINKPARAMETERALIAS@@ : Int;      // @@CHILDCLASS@@ Instance DB Index
@@ATTR_END|pChildSelect@@
    END_STRUCT;
END_TYPE
@@ATTR_END|pChildSelectExists@@

TYPE "udt@@CLASS@@"
VERSION : 1.0
    STRUCT
        child : "udt@@CLASS@@children";      // Child index to access child instance DB
@@ATTR_BEGIN|pLinkExists@@
        link : "udt@@CLASS@@link";           // Link index to access link instance DB
@@ATTR_END|pLinkExists@@
@@ATTR_BEGIN|pChildSelectExists@@
        select : "udt@@CLASS@@select";       // Select index to access selection instance DB
@@ATTR_END|pChildSelectExists@@
        read : "udt@@CLASS@@read";       // Calculated data on read CPU
        write : "udt@@CLASS@@write";         // Directives from write CPU
    END_STRUCT;
END_TYPE

@@TEMPLATE_END@@

//TYPE "udtEventPrompts"
//VERSION : 0.1
//    STRUCT
//@@TEMPLATE_BEGIN|pEventPromptNum@@
//        event : Array[1..@@IDXEVENTMAX@@] of "udtEventPrompt";   // SFC events for operator prompts
//@@TEMPLATE_END@@
//    END_STRUCT;
//END_TYPE
