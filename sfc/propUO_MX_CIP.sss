****************************************************************************************************
SEQUENCE STEP SCHEDULE
generated on 29/11/2018 4:43:19 PM by David Paspa
****************************************************************************************************





--------------------------------------------------
SEQUENCE
--------------------------------------------------

SFCNo:- 001
Title:- Manufacturing Vessel Mx CIP
Description:- Sequence for Clean In Place CIP operation
Name:- CIP
Class:- MX
Level:- UO
STEP_LIST_FORMAT:- JU    S0@@STEP_NUM@@; // STEP-0@@STEP_NUM@@:
ACT_LIST_FORMAT:- JU    @@ACT_CODE@@@@STEP_NUM@@; //ACTION-@@ACT_NUM@@
HeaderName:- MUCIP
Version:- 2.0
RevisionHistory:- // SFC Revision History:
// Rev By               Date        CC         Note
// 2.0 David Paspa      27-Nov-2018            Reboot for S7-1500
// 0.2 David Paspa      26-Oct-2009            Added synch flags
// 0.1 Gerald Kontriner 07-Sep-2009            SFC structural design
HMI_FORMAT:- @@STEP_NUM_INT@@,@@STEP_TITLE@@

--------------------------------------------------
PARAMETER::1
--------------------------------------------------
Name:- prompt_vessel_empty_confirm_yes
Type:- BOOL
Description:- UO_MX_CIP Operator to confirm the vessel is empty confirm yes
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::2
--------------------------------------------------
Name:- prompt_vessel_empty
Type:- BOOL
Description:- UO_MX_CIP Operator to confirm the vessel is empty
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::3
--------------------------------------------------
Name:- ema_vessel_runtime
Type:- TIME
Description:- Agitator run time
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::4
--------------------------------------------------
Name:- emx_drain_state
Type:- INT
Description:- Mx drain line state
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::5
--------------------------------------------------
Name:- emx_drain_subs
Type:- INT
Description:- Mx drain line substate
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::6
--------------------------------------------------
Name:- emx_drain_cmd
Type:- INT
Description:- Mx drain line command
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::7
--------------------------------------------------
Name:- emv_inlet_opened_time
Type:- TIME
Description:- Sprayball inlets pulse open time
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::8
--------------------------------------------------
Name:- r_time_sprayball_opened
Type:- TIME
Description:- MX CIP Time to pulse open each sprayball valve
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::9
--------------------------------------------------
Name:- emv_inlet_cmd
Type:- INT
Description:- Sprayball inlets command
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::10
--------------------------------------------------
Name:- emv_inlet_state
Type:- INT
Description:- Sprayball inlets state
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::11
--------------------------------------------------
Name:- emv_inlet_subs
Type:- INT
Description:- Sprayball inlets substate
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::12
--------------------------------------------------
Name:- emc_gas_setpoint
Type:- REAL
Description:- Pressure control setpoint
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::13
--------------------------------------------------
Name:- emm_vessel_settling_time
Type:- TIME
Description:- Settling time for tare or measure
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::14
--------------------------------------------------
Name:- r_time_measure_settling
Type:- TIME
Description:- MX CIP Time for vessel contents settling for mass measure or tare
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::15
--------------------------------------------------
Name:- r_pres_gas_empty
Type:- REAL
Description:- MX CIP HPCA pressure to empty the vessel
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::16
--------------------------------------------------
Name:- r_pres_gas_wash
Type:- REAL
Description:- MX CIP HPCA pressure to blow through whilst washing or rinsing the vessel
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::17
--------------------------------------------------
Name:- r_time_agit_clean
Type:- TIME
Description:- MX CIP Time to clean agitator when flooded
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::18
--------------------------------------------------
Name:- log_msg_pw_fl_wash_end
Type:- BOOL
Description:- UO_MX_CIP PW filtration line wash end
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::19
--------------------------------------------------
Name:- log_msg_pw_fl_wash_begin
Type:- BOOL
Description:- UO_MX_CIP PW filtration line wash begin
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::20
--------------------------------------------------
Name:- vessel_mx
Type:- INT
Description:- Manufacturing vessel selection M1 or M2
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::21
--------------------------------------------------
Name:- emc_water_mass_charge
Type:- REAL
Description:- Description
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::22
--------------------------------------------------
Name:- emc_water_timeout
Type:- TIME
Description:- Description
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::23
--------------------------------------------------
Name:- wfi_flrinse_begin_time
Type:- TOD
Description:- WFI filtration line rinse begin time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::24
--------------------------------------------------
Name:- wfi_flrinse_end_time
Type:- TOD
Description:- WFI filtration line rinse end time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::25
--------------------------------------------------
Name:- log_time_act_wfi_flrinse
Type:- BOOL
Description:- UO_MX_CIP Actual WFI filtration line rinse time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::26
--------------------------------------------------
Name:- time_act_wfi_flrinse
Type:- TIME
Description:- UO_MX_CIP Actual WFI filtration line rinse time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::27
--------------------------------------------------
Name:- wfi_rinse_begin_time
Type:- TOD
Description:- WFI rinse begin time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::28
--------------------------------------------------
Name:- wfi_rinse_end_time
Type:- TOD
Description:- WFI rinse end time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::29
--------------------------------------------------
Name:- log_time_act_wfi_rinse
Type:- BOOL
Description:- UO_MX_CIP Actual WFI rinse time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::30
--------------------------------------------------
Name:- time_act_wfi_rinse
Type:- TIME
Description:- UO_MX_CIP Actual WFI rinse time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::31
--------------------------------------------------
Name:- pw_steam_begin_time
Type:- TOD
Description:- PW steaming begin time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::32
--------------------------------------------------
Name:- pw_steam_end_time
Type:- TOD
Description:- PW steaming end time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::33
--------------------------------------------------
Name:- log_time_act_pw_steam
Type:- BOOL
Description:- UO_MX_CIP Actual PW line steam time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::34
--------------------------------------------------
Name:- time_act_pw_steam
Type:- TIME
Description:- UO_MX_CIP Actual PW line steam time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::35
--------------------------------------------------
Name:- pw_flwash_begin_time
Type:- TOD
Description:- Filtration line PW wash begin time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::36
--------------------------------------------------
Name:- pw_flwash_end_time
Type:- TOD
Description:- Filtration line PW wash end time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::37
--------------------------------------------------
Name:- log_time_act_pw_flwash
Type:- BOOL
Description:- UO_MX_CIP Actual PW flush time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::38
--------------------------------------------------
Name:- time_act_pw_flwash
Type:- TIME
Description:- UO_MX_CIP Actual PW flush time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::39
--------------------------------------------------
Name:- pw_wash_begin_time
Type:- TOD
Description:- PW wash begin time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::40
--------------------------------------------------
Name:- pw_wash_end_time
Type:- TOD
Description:- PW wash begin time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::41
--------------------------------------------------
Name:- log_time_act_pw_wash
Type:- BOOL
Description:- UO_MX_CIP Actual PW wash time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::42
--------------------------------------------------
Name:- time_act_pw_wash
Type:- TIME
Description:- UO_MX_CIP Actual PW wash time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::43
--------------------------------------------------
Name:- flood_mixing_begin_time
Type:- TOD
Description:- PW flood mixing begin time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::44
--------------------------------------------------
Name:- flood_mixing_end_time
Type:- TOD
Description:- PW flood mixing end time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::45
--------------------------------------------------
Name:- log_time_act_flood_mixing
Type:- BOOL
Description:- UO_MX_CIP Actual PW flood mixing time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::46
--------------------------------------------------
Name:- time_act_flood_mixing
Type:- TIME
Description:- UO_MX_CIP Actual PW flood mixing time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::47
--------------------------------------------------
Name:- log_real_pw_flood_mass
Type:- BOOL
Description:- UO_MX_CIP Actual PW flood mass
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::48
--------------------------------------------------
Name:- pw_flush_end_time
Type:- TOD
Description:- PW Flush end time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::49
--------------------------------------------------
Name:- log_time_act_pw_flush
Type:- BOOL
Description:- UO_MX_CIP Actual PW flush time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::50
--------------------------------------------------
Name:- pw_flush_begin_time
Type:- TOD
Description:- PW Flush begin time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::51
--------------------------------------------------
Name:- log_msg_cip_end
Type:- BOOL
Description:- UO_MX_CIP end time

ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::52
--------------------------------------------------
Name:- log_msg_cip_begin
Type:- BOOL
Description:- UO_MX_CIP begin time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::53
--------------------------------------------------
Name:- emm_vessel_mass_tare
Type:- REAL
Description:- Saved tare mass value
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::54
--------------------------------------------------
Name:- emm_vessel_subs
Type:- INT
Description:- Substate selection to emm_vessel
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::55
--------------------------------------------------
Name:- emm_vessel_cmd
Type:- INT
Description:- Command to emm_vessel
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::56
--------------------------------------------------
Name:- emm_vessel_state
Type:- INT
Description:- Device State of emm_vessel
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::57
--------------------------------------------------
Name:- r_agit_setpoint
Type:- REAL
Description:- MX CIP Agitator speed for cleaning
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::58
--------------------------------------------------
Name:- emc_water_runtime
Type:- TIME
Description:- run time for emc_water
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::59
--------------------------------------------------
Name:- time_act_pw_flush
Type:- TIME
Description:- UO_MX_CIP Actual PW flush time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::60
--------------------------------------------------
Name:- r_time_wfi_rinse_mx
Type:- TIME
Description:- MX CIP Time to rinse vessel and outlet drain line with WFI
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::61
--------------------------------------------------
Name:- r_time_pw_wash_mmflx
Type:- TIME
Description:- MX CIP Time to wash filtration line with PW
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::62
--------------------------------------------------
Name:- emx_mmfl_subs
Type:- INT
Description:- Substate selection to emx_mmfl
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::63
--------------------------------------------------
Name:- emx_mmfl_cmd
Type:- INT
Description:- Command to emx_mmfl
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::64
--------------------------------------------------
Name:- emx_mmfl_state
Type:- INT
Description:- Device State of emx_mmfl
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::65
--------------------------------------------------
Name:- log_msg_wfi_rinse_end
Type:- BOOL
Description:- UO_MX_CIP WFI rinse end
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::66
--------------------------------------------------
Name:- log_msg_wfi_rinse_begin
Type:- BOOL
Description:- UO_MX_CIP WFI rinse begin
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::67
--------------------------------------------------
Name:- log_msg_pw_wash_end
Type:- BOOL
Description:- UO_MX_CIP PW wash end
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::68
--------------------------------------------------
Name:- log_msg_pw_wash_begin
Type:- BOOL
Description:- UO_MX_CIP PW wash begin
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::69
--------------------------------------------------
Name:- log_msg_pw_flood_end
Type:- BOOL
Description:- UO_MX_CIP PW flood end
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::70
--------------------------------------------------
Name:- log_msg_pw_flood_begin
Type:- BOOL
Description:- UO_MX_CIP PW flood begin
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::71
--------------------------------------------------
Name:- log_msg_pw_flush_end
Type:- BOOL
Description:- UO_MX_CIP PW flush end
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::72
--------------------------------------------------
Name:- log_msg_pw_flush_begin
Type:- BOOL
Description:- UO_MX_CIP PW flush begin
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::73
--------------------------------------------------
Name:- real_pw_flood_mass
Type:- REAL
Description:- UO_MX_CIP Actual PW flood mass
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::74
--------------------------------------------------
Name:- log_msg_pw_flood_timeout
Type:- BOOL
Description:- UO_MX_CIP Timeout waiting forl PW flood mass
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::75
--------------------------------------------------
Name:- ema_vessel_setpoint
Type:- REAL
Description:- Speed Setpoint Parameter Agitator
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::76
--------------------------------------------------
Name:- emc_gas_medium_gas
Type:- INT
Description:- Medium to use for gas
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::77
--------------------------------------------------
Name:- emc_water_medium_liquid
Type:- INT
Description:- Medium selection for emc_water
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::78
--------------------------------------------------
Name:- emv_vessel_state
Type:- INT
Description:- Device State of emv_vessel
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::79
--------------------------------------------------
Name:- emv_vessel_subs
Type:- INT
Description:- Substate selection to emv_vessel
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::80
--------------------------------------------------
Name:- emv_vessel_cmd
Type:- INT
Description:- Command to emv_vessel
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::81
--------------------------------------------------
Name:- emc_water_state
Type:- INT
Description:- Device State of emc_water
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::82
--------------------------------------------------
Name:- emc_water_subs
Type:- INT
Description:- Substate selection to emc_water
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::83
--------------------------------------------------
Name:- emc_water_cmd
Type:- INT
Description:- Command to emc_water
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::84
--------------------------------------------------
Name:- emc_gas_state
Type:- INT
Description:- Device State of emc_gas
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::85
--------------------------------------------------
Name:- emc_gas_subs
Type:- INT
Description:- Substate selection to emc_gas
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::86
--------------------------------------------------
Name:- emc_gas_cmd
Type:- INT
Description:- Command to emc_gas
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::87
--------------------------------------------------
Name:- ema_vessel_state
Type:- INT
Description:- Device State of ema_vessel
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::88
--------------------------------------------------
Name:- ema_vessel_subs
Type:- INT
Description:- Substate selection to ema_vessel
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::89
--------------------------------------------------
Name:- ema_vessel_cmd
Type:- INT
Description:- Command to ema_vessel
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::90
--------------------------------------------------
Name:- r_time_wfi_rinse_mmflx
Type:- TIME
Description:- MX CIP Time to rinse filtration line with WFI
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::91
--------------------------------------------------
Name:- r_time_wfi_empty_mx
Type:- TIME
Description:- MX CIP Time to empty the vessel after WFI rinse
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::92
--------------------------------------------------
Name:- r_time_pw_steam_mx
Type:- TIME
Description:- MX CIP Time to steam vessel PW connection
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::93
--------------------------------------------------
Name:- r_time_pw_wash_mx
Type:- TIME
Description:- MX CIP Time to wash the vessel with PW
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::94
--------------------------------------------------
Name:- r_time_pw_empty2
Type:- TIME
Description:- MX CIP Time to empty the vessel after PW wash
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::95
--------------------------------------------------
Name:- r_time_pw_empty1
Type:- TIME
Description:- MX CIP Time to empty the vessel after agitator flooding
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::96
--------------------------------------------------
Name:- r_time_pw_flood
Type:- TIME
Description:- MX CIP Time for PW charge mass timeout if not reached
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::97
--------------------------------------------------
Name:- r_time_pw_flush_mx
Type:- TIME
Description:- MX CIP Time for initial PW flush
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::98
--------------------------------------------------
Name:- r_mass_pw_flood
Type:- REAL
Description:- MX CIP PW mass to flood the agitator for cleaning
ParameterInOut:- VAR


--------------------------------------------------
STEP::01
--------------------------------------------------
StepNo:- 01
Title:- UO_MX_CIP : Unit Operation Commenced
Description:- Log Mx CIP operation begin time.
Start Mass Tare operation.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Log Mx CIP operation begin time.
Reset mass EM.
Action:- //Log Mx CIP operation begin time.
SET;
S #_log_msg_cip_begin;

//Stop Mass EM to reset it.
L "dbCONST".BLK.CMD.STOP;
T #_emm_vessel_cmd;
Verification:- //Verify emm_vessel is stopped
A(;
L #_emm_vessel_state;
L "dbCONST".BLK.STATE.STOPPED;
==I;
);

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Start Mass Tare operation.
Action:- //Start Mass Tare.
L #_r_time_measure_settling;
L 1000;
*I;
T #_emm_vessel_settling_time;
L "dbCONST".BLK.EMM1.SUBS.TARE;
T #_emm_vessel_subs;
L "dbCONST".BLK.CMD.START;
T #_emm_vessel_cmd;
Verification:- //Verify emm_vessel changed to substate TARE.
A(;
L #_emm_vessel_subs;
L "dbCONST".BLK.EMM1.SUBS.TARE;
==I;
);


--------------------------------------------------
TRANSITION::01
--------------------------------------------------
TRNNo:- 01
Title:- TARE complete?
EmptyTransition:- False
Description:- Emm_vessel substate TARE is complete
Condition:- A(;
L   #_emm_vessel_state;
L   "dbCONST".BLK.STATE.COMPLETED;
==I;
);


--------------------------------------------------
STEP::02
--------------------------------------------------
StepNo:- 02
Title:- UO_MX_CIP : Open tank path to outlet drain line.
Description:- Open tank path to outlet drain line.
Open Mx outlet valve (DISCHARGE).

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Reset EMs
Action:- L "dbCONST".BLK.CMD.STOP;
T #_emv_inlet_cmd;
T #_emv_vessel_cmd;
T #_emx_drain_cmd;
T #_emx_mmfl_cmd;
Verification:- //Verify emv_inlet stopped.
A(;
L    #_emv_inlet_state;
L    "dbCONST".BLK.STATE.STOPPED;
==I;
);
//Verify emv_vessel stopped.
A(;
L    #_emv_vessel_state;
L    "dbCONST".BLK.STATE.STOPPED;
==I;
);
//Verify if emx_drain stopped.
A(;
L   #_emx_drain_state;
L    "dbCONST".BLK.STATE.STOPPED;
==I;
);
//Verify if emx_mmfl stopped.
A(;
L   #_emx_mmfl_state;
L    "dbCONST".BLK.STATE.STOPPED;
==I;
);

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Set emv_vessel to substate DISCHARGE. 
Open tank path to outlet drain line.
Action:- //Open Mx inlet valves.
L "dbCONST".BLK.EMV2.SUBS.CHARGE;
T #_emv_inlet_subs;
L "dbCONST".BLK.CMD.START;
T #_emv_inlet_cmd;

//Open Mx outlet valve.
L "dbCONST".BLK.EMV1.SUBS.DISCHARGE;
T #_emv_vessel_subs;
L "dbCONST".BLK.CMD.START;
T #_emv_vessel_cmd;

// Set emx_drain to substate CIP and start it.
L "dbCONST".BLK.EMX4.SUBS.CIP;
T #_emx_drain_subs;
L "dbCONST".BLK.CMD.START;
T #_emx_drain_cmd;

// Set emx_mmfl to substate CIP_MX and start it.
L "dbCONST".BLK.EMX1.SUBS.CIP_MX;
T #_emx_mmfl_subs;
L "dbCONST".BLK.CMD.START;
T #_emx_mmfl_cmd;

Verification:- //Verify emv_inlet changed to substate CHARGE.
A(;
L    #_emv_inlet_subs;
L    "dbCONST".BLK.EMV2.SUBS.CHARGE;
==I;
);
//Verify emv_vessel changed to substate DISCHARGE.
A(;
L    #_emv_vessel_subs;
L    "dbCONST".BLK.EMV1.SUBS.DISCHARGE;
==I;
);
//Verify if emx_drain changed to substate CIP.
A(;
L   #_emx_drain_subs;
L   "dbCONST".BLK.EMX4.SUBS.CIP;
==I;
);
//Verify if emx_mmfl changed to substate CIP_MX.
A(;
L   #_emx_mmfl_subs;
L   "dbCONST".BLK.EMX1.SUBS.CIP_MX;
==I;
);


--------------------------------------------------
TRANSITION::02
--------------------------------------------------
TRNNo:- 02
Title:- DISCHARGE complete?
EmptyTransition:- False
Description:- emv_inlet substate CHARGE is complete and emv_vessel substate DISCHARGE is complete and Parent indicates MMFLx Unit ready for flushing.
Condition:- A(;
L   #_emv_inlet_state;
L   "dbCONST".BLK.STATE.COMPLETED;
==I;
);
A(;
L   #_emv_vessel_state;
L   "dbCONST".BLK.STATE.COMPLETED;
==I;
);
A(;
L   #_emx_drain_state;
L   "dbCONST".BLK.STATE.COMPLETED;
==I;
);
A(;
L   #_emx_mmfl_state;
L   "dbCONST".BLK.STATE.COMPLETED;
==I;
);


--------------------------------------------------
STEP::03
--------------------------------------------------
StepNo:- 03
Title:- UO_MX_CIP : Commence PW Preflush of vessel
Description:- Open HPCA supply valve and open PW supply to preflush vessel with time_pw_flush timer. Start pulsing spray ball valves.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Reset gas and water commands
Action:- L "dbCONST".BLK.CMD.STOP;
T #_emc_gas_cmd;
T #_emc_water_cmd;
Verification:- A(;
L    #_emc_gas_state;
L    "dbCONST".BLK.STATE.STOPPED;
==I;
);
A(;
L    #_emc_water_state;
L    "dbCONST".BLK.STATE.STOPPED;
==I;
);

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Open HPCA supply valve.
Action:- // Open HPCA supply valve.
L "dbCONST".SEL.GAS.HPCA;
T #_emc_gas_medium_gas;
L #_r_pres_gas_wash;
T #_emc_gas_setpoint;
L "dbCONST".BLK.EMC1.SUBS.PRESSURE;
T #_emc_gas_subs;
L "dbCONST".BLK.CMD.START;
T #_emc_gas_cmd;
Verification:- //Verify if CA valve opened.
A(;
L     #_emc_gas_subs;
L     "dbCONST".BLK.EMC1.SUBS.PRESSURE;
==I;
);

--------------------------------------------------
ACTION::03
--------------------------------------------------
Description:- Preflush vessel.
Load flushing time and start PW flush.
Action:- // Load flushing time for PW pre-stage.
L #_r_time_pw_flush_mx;
L 1000;
*I;
T #_emc_water_runtime;

//Set emc_water to substate FLUSH and open PW supply valve.
L "dbCONST".SEL.LIQUID.PW;
T #_emc_water_medium_liquid;
L "dbCONST".BLK.EMC2.SUBS.FLUSH;
T #_emc_water_subs;
L "dbCONST".BLK.CMD.START;
T #_emc_water_cmd;

//Report Event Set
SET;
S #_log_msg_pw_flush_begin;

//Store PW Flush begin time.
L "dbCONST".CHRONO.CPU_TIME;
T #_pw_flush_begin_time;
Verification:- //Verify if emc_water changed to substate FLUSH.
A(;
L   #_emc_water_subs;
L   "dbCONST".BLK.EMC2.SUBS.FLUSH;
==I;
);

--------------------------------------------------
ACTION::04
--------------------------------------------------
Description:- Flip flop the sprayball valves to pulse them open one at a time for greater flow rate during cleaning
Action:- // Set the sprayball valve pulse opened time
L #_r_time_sprayball_opened;
L 1000;
*I;
T #_emv_inlet_opened_time;
L "dbCONST".BLK.EMV2.SUBS.PULSE;
T #_emv_inlet_subs;
L "dbCONST".BLK.CMD.START;
T #_emv_inlet_cmd;
Verification:- //Verify if emv_inlet changed to substate PULSE
A(;
L   #_emv_inlet_subs;
L   "dbCONST".BLK.EMV2.SUBS.PULSE;
==I;
);


--------------------------------------------------
TRANSITION::03
--------------------------------------------------
TRNNo:- 03
Title:- Pre-flush time expired.
EmptyTransition:- False
Description:- Tank flushed for time_pw_flush expired.
Condition:- A(;
L   #_emc_water_state;
L   "dbCONST".BLK.STATE.COMPLETED;
==I;
);
A(;
L   #_emc_gas_state;
L   "dbCONST".BLK.STATE.COMPLETED;
==I;
);


--------------------------------------------------
STEP::04
--------------------------------------------------
StepNo:- 04
Title:- UO_MX_CIP : Close MX outlet to flood vessel.
Description:- Log actual PW flush time.
Close Mx outlet valve.
Close HPCA supply valve.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Log actual PW flush time.
Close Mx outlet valve.
Close HPCA supply valve.
Action:- //Store PW Flush end time.
L "dbCONST".CHRONO.CPU_TIME;
T #_pw_flush_end_time;

//Log actual PW flush time.
CALL T_DIFF
{date_type := 'Time_Of_Day', time_type := 'Time'}
(  IN1                         := #_pw_flush_end_time ,
   IN2                         := #_pw_flush_begin_time ,
  OUT                         := #_time_act_pw_flush
);

SET;
S #_log_time_act_pw_flush;


// Close Mx outlet valve.
L "dbCONST".BLK.CMD.STOP;
T  #_emv_vessel_cmd;

// Stop emc_gas.
L "dbCONST".BLK.CMD.STOP;
T  #_emc_gas_cmd;

//Report Event Set
SET;
S #_log_msg_pw_flush_end;
Verification:- //Verify if emv_vessel & emc_gas stopped.
A(;
L #_emv_vessel_state;
L "dbCONST".BLK.STATE.STOPPED;
==I;
);
A(;
L #_emc_gas_state;
L "dbCONST".BLK.STATE.STOPPED;
==I;
);

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Reset timer.
Action:- R #sqSeqTimerStart;
Verification:- AN #SQ_TIMER.Q;

--------------------------------------------------
ACTION::03
--------------------------------------------------
Description:- Start the timer
Action:- L T#10S;
T #SQ_TIMER.PT;
S #sqSeqTimerStart;
Verification:- A #sqSeqTimerStart;


--------------------------------------------------
TRANSITION::04
--------------------------------------------------
TRNNo:- 04
Title:- Timer
EmptyTransition:- False
Description:- TBD on delay timer
Condition:- A #SQ_TIMER.Q;


--------------------------------------------------
STEP::05
--------------------------------------------------
StepNo:- 05
Title:- MX_UO_CIP : Wait to reach vessel flood mass
Description:- Start PW FLUSH and CHARGE.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Reset water EM
Action:- L "dbCONST".BLK.CMD.STOP;
T #_emc_water_cmd;
Verification:- A(;
L    #_emc_water_state;
L    "dbCONST".BLK.STATE.STOPPED;
==I;
);

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Set medium to PW and start CHARGE.
Action:- //Set emc_water to substate FLUSH and open PW supply valve.
L "dbCONST".SEL.LIQUID.PW;
T #_emc_water_medium_liquid;
L #_r_time_pw_flood;
L 1000;
*I;
T #_emc_water_timeout;

//Load Mass to charge vessel.
L #_r_mass_pw_flood;
T #_emc_water_mass_charge;

//Start Charge
L "dbCONST".BLK.EMC2.SUBS.CHARGE;
T #_emc_water_subs;
L "dbCONST".BLK.CMD.START;
T #_emc_water_cmd;
Verification:- //Verify if emc_water changed to substate CHARGE.
A(;
L   #_emc_water_subs;
L   "dbCONST".BLK.EMC2.SUBS.CHARGE;
==I;
);


--------------------------------------------------
TRANSITION::05
--------------------------------------------------
TRNNo:- 5.0000
Title:- CHARGE completed.
EmptyTransition:- False
Description:- CHARGE completed and TIME_PW_AGIT expired.
Condition:- A(;
L   #_emc_water_state;
L   "dbCONST".BLK.STATE.COMPLETED;
==I;
);


--------------------------------------------------
STEP::06
--------------------------------------------------
StepNo:- 06
Title:- UO_MX_CIP : PW Flood mixing.
Description:- Enable Mx Agitator.
Store mixing begin time.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Stop the agitator EM to reset it
Action:- L "dbCONST".BLK.CMD.STOP;
T #_ema_vessel_cmd;
Verification:- A(;
L    #_ema_vessel_state;
L    "dbCONST".BLK.STATE.STOPPED;
==I;
);

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Enable Mx Agitator EAn010 (STATE=MIX, TIME RUN HOUR=1)
Action:- // Load setpoint and enable Mx Agitator.
L #_r_agit_setpoint; 
T #_ema_vessel_setpoint;
L _r_time_agit_clean;
L 1000;
*I;
T #_ema_vessel_runtime;

L "dbCONST".BLK.EMA1.SUBS.MIX;
T #_ema_vessel_subs;
L "dbCONST".BLK.CMD.START;
T #_ema_vessel_cmd;
Verification:- A(;
L  #_ema_vessel_subs;
L "dbCONST".BLK.EMA1.SUBS.MIX;
==I;
);

--------------------------------------------------
ACTION::03
--------------------------------------------------
Description:- Store mixing begin time.
Action:- //Store flood mixing begin time.
L "dbCONST".CHRONO.CPU_TIME;
T #_flood_mixing_begin_time;
Verification:- A "uncondJump";


--------------------------------------------------
TRANSITION::06
--------------------------------------------------
TRNNo:- 06
Title:- Wait for flood mixing completed
EmptyTransition:- False
Description:- Jump when flood mixing completed
Condition:- A(;
L   #_ema_vessel_state;
L   "dbCONST".BLK.STATE.COMPLETED;
==I;
);


--------------------------------------------------
STEP::07
--------------------------------------------------
StepNo:- 07
Title:- UO_MX_CIP : Disable Agitator
Description:- Disable Agitator and open Mx outlet valve.
Log actual tank PW flood mixing time.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Disable agitator.
Action:- // Disable Mx Agitator
L "dbCONST".BLK.CMD.STOP;
T #_ema_vessel_cmd;
T #_emv_vessel_cmd;
Verification:- A(;
L    #_ema_vessel_state;
L    "dbCONST".BLK.STATE.STOPPED;
==I;
);

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Open Mx outlet valve.
Store mixing begin time.
Action:- //Open Mx outlet valve.
L "dbCONST".BLK.EMV1.SUBS.DISCHARGE;
T #_emv_vessel_subs;
L "dbCONST".BLK.CMD.START;
T #_emv_vessel_cmd;

//Store PW Flood mixing end time.
L "dbCONST".CHRONO.CPU_TIME;
T #_flood_mixing_end_time;

//Log actual PW Flood mixing time.
CALL T_DIFF
{date_type := 'Time_Of_Day', time_type := 'Time'}
(  IN1                         := #_flood_mixing_end_time ,
   IN2                         := #_flood_mixing_begin_time ,
  OUT                         := #_time_act_flood_mixing
);
SET;
S #_log_time_act_flood_mixing;
Verification:- A(;
L #_ema_vessel_state;
L "dbCONST".BLK.STATE.STOPPED;
==I;
);
A(;
L #_emv_vessel_subs;
L "dbCONST".BLK.EMV1.SUBS.DISCHARGE;
==I;
);


--------------------------------------------------
TRANSITION::07
--------------------------------------------------
TRNNo:- 07
Title:- Empty Transition
EmptyTransition:- False
Description:- Jump
Condition:- A "uncondJump";


--------------------------------------------------
STEP::08
--------------------------------------------------
StepNo:- 08
Title:- UO_MX_CIP : Wait to empty vessel
Description:- Open HPCA supply valve.
Start timer for PW Empty.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Reset the gas EM
Action:- L "dbCONST".BLK.CMD.STOP;  
T #_emc_gas_cmd;
Verification:- A(;
L    #_emc_gas_state;
L    "dbCONST".BLK.STATE.STOPPED;
==I;
);

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Open HPCA supply valve.
Action:- // Open HPCA supply valve.
L "dbCONST".SEL.GAS.HPCA;
T #_emc_gas_medium_gas;
L #_r_pres_gas_empty;
T #_emc_gas_setpoint;
L "dbCONST".BLK.EMC1.SUBS.PRESSURE;
T #_emc_gas_subs;
L "dbCONST".BLK.CMD.START;  
T #_emc_gas_cmd;
Verification:- A(;
L #_emc_gas_subs;
L "dbCONST".BLK.EMC1.SUBS.PRESSURE;
==I;
);

--------------------------------------------------
ACTION::03
--------------------------------------------------
Description:- Load time to empty vessel after flooding.
Action:- //Start timer for PW Empty.
A #SQ_TIMER.Q;
R #sqSeqTimerStart;

AN #SQ_TIMER.Q;
S #sqSeqTimerStart;
L #_r_time_pw_empty1;
L 1000;
*I;
T #SQ_TIMER.PT;
Verification:- A #sqSeqTimerStart;


--------------------------------------------------
TRANSITION::08
--------------------------------------------------
TRNNo:- 08
Title:- Timer expired.
EmptyTransition:- False
Description:- TIME_PW_EMPTY1 expired?
Condition:- A #SQ_TIMER.Q;


--------------------------------------------------
STEP::09
--------------------------------------------------
StepNo:- 09
Title:- UO_MX_CIP : Commence vessel washing with PW
Description:- Open PW supply to wash vessel and start FLUSH.
Store PW wash begin time.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Reset the water EM
Action:- L "dbCONST".BLK.CMD.STOP;
T #_emc_water_cmd;
Verification:- A(;
L    #_emc_water_state;
L    "dbCONST".BLK.STATE.STOPPED;
==I;
);

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Open PW supply to wash vessel.
Load Time to wash with PW.
Store PW wash begin time.
Action:- //Set emc_water to substate FLUSH and open PW supply valve.
L #_r_time_pw_wash_mx;
L 1000;
*I;
T #_emc_water_runtime;
L "dbCONST".SEL.LIQUID.PW;
T #_emc_water_medium_liquid;
L "dbCONST".BLK.EMC2.SUBS.FLUSH;
T #_emc_water_subs;
L "dbCONST".BLK.CMD.START;
T #_emc_water_cmd;


//Report Event Set
SET;
S #_log_msg_pw_wash_begin;


//Store PW wash begin time.
L "dbCONST".CHRONO.CPU_TIME;
T #_pw_wash_begin_time;

Verification:- //Verify if emc_water changed to substate FLUSH.
A(;
L   #_emc_water_subs;
L   "dbCONST".BLK.EMC2.SUBS.FLUSH;
==I;
);


--------------------------------------------------
TRANSITION::09
--------------------------------------------------
TRNNo:- 09
Title:- Timer expired.
EmptyTransition:- False
Description:- TIME_PW_WASH_Mx expired?
Condition:- A(;
L   #_emc_water_state;
L   "dbCONST".BLK.STATE.COMPLETED;
==I;
);


--------------------------------------------------
STEP::10
--------------------------------------------------
StepNo:- 10
Title:- UO_MX_CIP : PW washing completed
Description:- Log actual tank PW wash time.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Log actual tank PW wash time.
Action:- //Store PW wash end time.
L "dbCONST".CHRONO.CPU_TIME;
T #_pw_wash_end_time;


//Log actual tank PW wash time
CALL T_DIFF
{date_type := 'Time_Of_Day', time_type := 'Time'}
(  IN1                         := #_pw_wash_end_time ,
   IN2                         := #_pw_wash_begin_time ,
  OUT                         := #_time_act_pw_wash
);
SET;
S #_log_time_act_pw_wash;

//Report Event Set
SET;
S #_log_msg_pw_wash_end;
Verification:- A "uncondJump";


--------------------------------------------------
TRANSITION::10
--------------------------------------------------
TRNNo:- 10
Title:- Empty Transition
EmptyTransition:- False
Description:- Empty Transition
Condition:- A "uncondJump";


--------------------------------------------------
STEP::11
--------------------------------------------------
StepNo:- 11
Title:- UO_MX_CIP : Divert Wash to MMFLx
Description:- Divert Wash to MMFLx.
Start TIME_PW_WASH_MMFLx.
Store PW filtration wash begin time.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Reset the EMs
Action:- L "dbCONST".BLK.CMD.STOP;
T #_emx_mmfl_cmd;
T #_emc_water_cmd;
Verification:- A(;
L    #_emx_mmfl_state;
L    "dbCONST".BLK.STATE.STOPPED;
==I;
);
A(;
L    #_emc_water_state;
L    "dbCONST".BLK.STATE.STOPPED;
==I;
);

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Divert to MMFLx Filtration Line.
Action:- // Set emx_mmfl to substate CIP_MMFLX and start it.
L "dbCONST".BLK.EMX1.SUBS.CIP_MMFLX;
T #_emx_mmfl_subs;
L "dbCONST".BLK.CMD.START;
T #_emx_mmfl_cmd;
Verification:- //Verify if emx_mmfl changed to substate CIP_MMFLX.
A(;
L   #_emx_mmfl_subs;
L   "dbCONST".BLK.EMX1.SUBS.CIP_MMFLX;
==I;
);

--------------------------------------------------
ACTION::03
--------------------------------------------------
Description:- Start FLUSH PW with TIME_PW_WASH_MMFLx timer.
Store PW filtration wash begin time.
Action:- //Set emc_water to substate FLUSH and open PW supply valve.
L #_r_time_pw_wash_mmflx;
L 1000;
*I;
T #_emc_water_runtime;
L "dbCONST".SEL.LIQUID.PW;
T #_emc_water_medium_liquid;
L "dbCONST".BLK.EMC2.SUBS.FLUSH;
T #_emc_water_subs;
L "dbCONST".BLK.CMD.START;
T #_emc_water_cmd;




//Store PW filtration wash begin time.
L "dbCONST".CHRONO.CPU_TIME;
T #_pw_flwash_begin_time;


//Report Event Set
SET;
S #_log_msg_pw_fl_wash_begin;
Verification:- //Verify if emc_water changed to substate FLUSH.
A(;
L   #_emc_water_subs;
L   "dbCONST".BLK.EMC2.SUBS.FLUSH;
==I;
);


--------------------------------------------------
TRANSITION::11
--------------------------------------------------
TRNNo:- 11
Title:- Timer expired.
EmptyTransition:- False
Description:- TIME_PW_WASH_MMFLx expired?
Condition:- A(;
L   #_emc_water_state;
L   "dbCONST".BLK.STATE.COMPLETED;
==I;
);
A(;
L    #_emx_mmfl_state;
L    "dbCONST".BLK.STATE.COMPLETED;
==I;
);


--------------------------------------------------
STEP::12
--------------------------------------------------
StepNo:- 12
Title:- UO_MX_CIP : Filtration line PW wash completed
Description:- Log actual Filtration line PW wash time and close PW supply valve.
Start TIME_PW_EMPTY2.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Log actual Filtration line PW wash time and close PW supply valve.
Action:- //Store PW filtration wash end time.
L "dbCONST".CHRONO.CPU_TIME;
T #_pw_flwash_end_time;

//Log actual filtration line PW wash time.
CALL T_DIFF
{date_type := 'Time_Of_Day', time_type := 'Time'}
(  IN1                         := #_pw_flwash_end_time ,
   IN2                         := #_pw_flwash_begin_time ,
  OUT                         := #_time_act_pw_flwash
);
SET;
S #_log_time_act_pw_flwash;

//Close PW supply valve.
L "dbCONST".BLK.CMD.STOP;
T  #_emc_water_cmd;

//Report Event Set
SET;
S #_log_msg_pw_fl_wash_end;

// Set emx_mmfl to substate SIP and restart it.
L "dbCONST".BLK.EMX1.SUBS.SIP;
T #_emx_mmfl_subs;
L "dbCONST".BLK.CMD.RESTART;
T #_emx_mmfl_cmd;
Verification:- //Verify if emc_water stopped and MMFLx completed
A(;
L    #_emc_water_state;
L    "dbCONST".BLK.STATE.STOPPED;
==I;
);
A(;
L    #_emx_mmfl_state;
L    "dbCONST".BLK.STATE.COMPLETED;
==I;
);

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Start Timer for PW Empty
Action:- // Clear MMFLx restart command
L "dbCONST".BLK.CMD.START;
T #_emx_mmfl_cmd;

//Start Timer for PW Empty
A #SQ_TIMER.Q;
R #sqSeqTimerStart;

AN #SQ_TIMER.Q;
S #sqSeqTimerStart;
L #_r_time_pw_empty2;
L 1000;
*I;
T #SQ_TIMER.PT;
Verification:- A #sqSeqTimerStart;


--------------------------------------------------
TRANSITION::12
--------------------------------------------------
TRNNo:- 12
Title:- Timer expired
EmptyTransition:- False
Description:- #TIME_PW_EMPTY2 expired?
Condition:- A #SQ_TIMER.Q;


--------------------------------------------------
STEP::13
--------------------------------------------------
StepNo:- 13
Title:- MX_UO_CIP : Steaming PW inlet line
Description:- Close HPCA supply valve(vent opened) and open PW line PS supply valve with Timer TIME_PW_STEAM.
Store PW steaming begin time.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Close CA supply valve.Vent opened.
Action:- // Close CA supply valve.
L "dbCONST".BLK.CMD.STOP;
T  #_emc_gas_cmd;
T  #_emc_water_cmd;
Verification:- //Verify if CA suppy valve closed.
A(;
L #_emc_gas_state;
L "dbCONST".BLK.STATE.STOPPED;
==I;
);
A(;
L #_emc_water_state;
L "dbCONST".BLK.STATE.STOPPED;
==I;
);

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Open PW line PS supply valve with Timer TIME_PW_STEAM.
Store PW steaming begin time.
Action:- //Open PW line PS supply valve
L #_r_time_pw_steam_mx;
L 1000;
*I;
T #_emc_water_runtime;  

L "dbCONST".SEL.LIQUID.PSPW;
T #_emc_water_medium_liquid;
L "dbCONST".BLK.EMC2.SUBS.FLUSH;
T #_emc_water_subs;
L "dbCONST".BLK.CMD.START;
T #_emc_water_cmd;


//Store PW steaming begin time.
L "dbCONST".CHRONO.CPU_TIME;
T #_pw_steam_begin_time;
Verification:- //Verify if emc_water changed to substate FLUSH.
A(;
L   #_emc_water_subs;
L   "dbCONST".BLK.EMC2.SUBS.FLUSH;
==I;
);


--------------------------------------------------
TRANSITION::13
--------------------------------------------------
TRNNo:- 13
Title:- Timer Expired?
EmptyTransition:- False
Description:- TIME_PW_STEAM expired?
Condition:- //PW-PS FLUSH completed.
A(;
L   #_emc_water_state;
L   "dbCONST".BLK.STATE.COMPLETED;
==I;
);


--------------------------------------------------
STEP::14
--------------------------------------------------
StepNo:- 14
Title:- UO_MX_CIP : Stop Steaming PW inlet line
Description:- Log actual PW line steaming time.
Close PW line PS supply valve.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Close PW-line CS supply valve.
Log actual PW line steaming time.
Action:- //Close PW line PS supply valve
L "dbCONST".BLK.CMD.STOP;
T  #_emc_water_cmd;


//Store PW Flush end time.
L "dbCONST".CHRONO.CPU_TIME;
T #_pw_steam_end_time;

//Log actual PW line steaming time.
CALL T_DIFF
{date_type := 'Time_Of_Day', time_type := 'Time'}
(  IN1                         := #_pw_steam_end_time ,
   IN2                         := #_pw_steam_begin_time ,
  OUT                         := #_time_act_pw_steam
);
SET;
S #_log_time_act_pw_steam;
Verification:- A(;
L #_emc_water_state;
L "dbCONST".BLK.STATE.STOPPED;
==I;
);

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Start Timer for PS Steam
Action:- //Start Timer for 10s.
A #SQ_TIMER.Q;
R #sqSeqTimerStart;

AN #SQ_TIMER.Q;
S #sqSeqTimerStart;
L T#10S;
T #SQ_TIMER.PT;
Verification:- A #sqSeqTimerStart;


--------------------------------------------------
TRANSITION::14
--------------------------------------------------
TRNNo:- 14
Title:- Timer
EmptyTransition:- False
Description:- Timer 10s
Condition:- A #SQ_TIMER.Q;


--------------------------------------------------
STEP::15
--------------------------------------------------
StepNo:- 15
Title:- MX_UO_CIP : Wait for OPER to setup for WFI
Description:- Setup for WFI addition to vessel. Start EMC2_SETUP with MEDIUM WFI.
Open outlet valve.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Reset the EMs
Action:- L "dbCONST".BLK.CMD.STOP;
T #_emc_water_cmd;
T #_emv_vessel_cmd;
Verification:- A(;
L #_emc_water_state;
L "dbCONST".BLK.STATE.STOPPED;
==I;
);
A(;
L #_emv_vessel_state;
L "dbCONST".BLK.STATE.STOPPED;
==I;
);

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- SETUP for WFI addition.
Action:- //Set to MEDIUM WFI and start SETUP substate.
L "dbCONST".SEL.LIQUID.WFI;
T #_emc_water_medium_liquid;
L "dbCONST".BLK.EMC2.SUBS.SETUP;
T #_emc_water_subs;
L "dbCONST".BLK.CMD.START;
T #_emc_water_cmd;
Verification:- //Verify if emc_water changed to substate SETUP.
A(;
L #_emc_water_subs;
L "dbCONST".BLK.EMC2.SUBS.SETUP;
==I;
);


--------------------------------------------------
ACTION::03
--------------------------------------------------
Description:- Open Discharge
Action:- //Open Discharge.
L   "dbCONST".BLK.EMV1.SUBS.DISCHARGE;
T   #_emv_vessel_subs;
L   "dbCONST".BLK.CMD.START;
T   #_emv_vessel_cmd;
Verification:- A(;
L 	#_emv_vessel_state;
L 	"dbCONST".BLK.EMV1.SUBS.DISCHARGE;
==I;
);


--------------------------------------------------
TRANSITION::15
--------------------------------------------------
TRNNo:- 15
Title:- Setup ready for WFI addition.
EmptyTransition:- False
Description:- WFI addition SETUP completed.
Condition:- A(;
L   #_emc_water_state;
L   "dbCONST".BLK.STATE.COMPLETED;
==I;
);
A(;
L   #_emv_vessel_state;
L   "dbCONST".BLK.STATE.COMPLETED;
==I;
);


--------------------------------------------------
STEP::16
--------------------------------------------------
StepNo:- 16
Title:- UO_MX_CIP : Commence WFI Rinse
Description:- Divert to tank outlet drain line.
Open WFI supply valve to rinse vessel and open HPCA supply valve.
Store WFI rinse begin time.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Action Description
Action:- L "dbCONST".BLK.CMD.STOP;
T #_emx_mmfl_cmd;
T #_emc_gas_cmd;
T #_emc_water_cmd;
Verification:- A(;
L #_emx_mmfl_state;
L "dbCONST".BLK.STATE.STOPPED;
==I;
);
A(;
L #_emc_gas_state;
L "dbCONST".BLK.STATE.STOPPED;
==I;
);
A(;
L #_emc_water_state;
L "dbCONST".BLK.STATE.STOPPED;
==I;
);

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Divert to tank outlet drain line. (CIP_MX)
Action:- // Set emx_mmfl to substate CIP_MX and start it.
L "dbCONST".BLK.EMX1.SUBS.CIP_MX;
T #_emx_mmfl_subs;
L "dbCONST".BLK.CMD.START;
T #_emx_mmfl_cmd;
Verification:- //Verify if emx_mmfl changed to substate CIP_MX.
A(;
L   #_emx_mmfl_subs;
L   "dbCONST".BLK.EMX1.SUBS.CIP_MX;
==I;
);

--------------------------------------------------
ACTION::03
--------------------------------------------------
Description:- Open HPCA supply valve.
Action:- //Open HPCA supply valve.
L "dbCONST".SEL.GAS.HPCA;
T #_emc_gas_medium_gas;
L #_r_pres_gas_wash;
T #_emc_gas_setpoint;
L "dbCONST".BLK.EMC1.SUBS.PRESSURE; 
T #_emc_gas_subs;
L "dbCONST".BLK.CMD.START;
T #_emc_gas_cmd;
Verification:- //Verify if CA supply valve opened.
A(;
L #_emc_gas_subs;
L "dbCONST".BLK.EMC1.SUBS.PRESSURE; 
==I;
);

--------------------------------------------------
ACTION::04
--------------------------------------------------
Description:- Open WFI supply valve with TIME_WFI_RINSE timer.
Store WFI rinse begin time.
Action:- //Set to MEDIUM WFI and open WFI supply valve
L #_r_time_wfi_rinse_mx;
L 1000;
*I;
T #_emc_water_runtime;  //RunTimeECn001

L "dbCONST".SEL.LIQUID.WFI;
T #_emc_water_medium_liquid;
L "dbCONST".BLK.EMC2.SUBS.FLUSH;
T #_emc_water_subs;
L "dbCONST".BLK.CMD.START;
T #_emc_water_cmd;

//Report Event Set
SET;
S #_log_msg_wfi_rinse_begin;

//Store WFI rinse begin time.
L "dbCONST".CHRONO.CPU_TIME;
T #_wfi_rinse_begin_time;
Verification:- //Verify if emc_water changed to FLUSH substate.
A(;
L #_emc_water_subs;
L "dbCONST".BLK.EMC2.SUBS.FLUSH;
==I;
);


--------------------------------------------------
TRANSITION::16
--------------------------------------------------
TRNNo:- 16
Title:- Timer Expired?
EmptyTransition:- False
Description:- TIME_WFI_RINSE_Mx expired?
Condition:- //Continue if FLUSH completed and TIME_WFI_RINSE_Mx finished.
A(;
L   #_emc_water_state;
L   "dbCONST".BLK.STATE.COMPLETED;
==I;
);
A(;
L   #_emc_gas_state;
L   "dbCONST".BLK.STATE.COMPLETED;
==I;
);
A(;
L   #_emx_mmfl_state;
L   "dbCONST".BLK.STATE.COMPLETED;
==I;
);


--------------------------------------------------
STEP::17
--------------------------------------------------
StepNo:- 17
Title:- UO_MX_CIP : Mx_WFI_Rinse Completed
Description:- Log actual WFI rinse time. 
Divert Wash to MMFLx.

Start FLUSH WFI with TIME_WFI_RINSE_MMFLx timer.
Store WFI filtration line rinse begin time.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Reset the EMs
Action:- L "dbCONST".BLK.CMD.STOP;
T #_emx_mmfl_cmd;
T #_emc_water_cmd;
Verification:- A(;
L #_emx_mmfl_state;
L "dbCONST".BLK.STATE.STOPPED;
==I;
);
A(;
L #_emc_water_state;
L "dbCONST".BLK.STATE.STOPPED;
==I;
);

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Log actual WFI rinse time. 
Divert to MMFLx Filtration Line.
Action:- //Store WFI rinse end time.
L "dbCONST".CHRONO.CPU_TIME;
T #_wfi_rinse_end_time;

//Log actual tank WFI rinse time.
CALL T_DIFF
{date_type := 'Time_Of_Day', time_type := 'Time'}
(  IN1                         := #_wfi_rinse_end_time ,
   IN2                         := #_wfi_rinse_begin_time ,
  OUT                         := #_time_act_wfi_rinse
);
SET;
S #_log_time_act_wfi_rinse;

// Set emx_mmfl to substate CIP_MMFLX and start it.
L "dbCONST".BLK.EMX1.SUBS.CIP_MMFLX;
T #_emx_mmfl_subs;
L "dbCONST".BLK.CMD.START;
T #_emx_mmfl_cmd;
Verification:- //Verify if emx_mmfl changed to substate CIP_MMFLX.
A(;
L   #_emx_mmfl_subs;
L   "dbCONST".BLK.EMX1.SUBS.CIP_MMFLX;
==I;
);

--------------------------------------------------
ACTION::03
--------------------------------------------------
Description:- Start FLUSH WFI with TIME_WFI_RINSE_MMFLx timer.
Store WFI filtration line rinse begin time.
Action:- //Set to MEDIUM WFI and open WFI supply valve.
L #_r_time_pw_wash_mmflx;
L 1000;
*I;
T #_emc_water_runtime; 

L "dbCONST".SEL.LIQUID.WFI;
T #_emc_water_medium_liquid;
L "dbCONST".BLK.EMC2.SUBS.FLUSH;
T #_emc_water_subs;
L "dbCONST".BLK.CMD.START;
T #_emc_water_cmd;

//Store WFI filtration line rinse begin time.
L "dbCONST".CHRONO.CPU_TIME;
T #_wfi_flrinse_begin_time;
Verification:- //Verify if emc_water changed to FLUSH substate.
A(;
L #_emc_water_subs;
L "dbCONST".BLK.EMC2.SUBS.FLUSH;
==I;
);


--------------------------------------------------
TRANSITION::17
--------------------------------------------------
TRNNo:- 17
Title:- MMFLx WFI Rinse Completed
EmptyTransition:- False
Description:- MMFLx WFI Rinse Completed
Condition:- A #SQ_TIMER.Q;


--------------------------------------------------
STEP::18
--------------------------------------------------
StepNo:- 18
Title:- UO_MX_CIP : WFI Rinse complete. Wait to empty vessel.
Description:- Log actual MMFLx WFI rinse time.
Close WFI supply valve.

Start timer to empty Tank, TIME_WFI_EMPTY.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Log actual filtration line WFI Rinse time.
Close WFI supply valve and start WFI Empty timer.

Action:- //Store WFI filtration line rinse end time.
L "dbCONST".CHRONO.CPU_TIME;
T #_wfi_flrinse_end_time;

//Log actual filtration line WFI Rinse time.
CALL T_DIFF
{date_type := 'Time_Of_Day', time_type := 'Time'}
(  IN1                         := #_wfi_flrinse_end_time ,
   IN2                         := #_wfi_flrinse_begin_time ,
  OUT                         := #_time_act_wfi_flrinse
);
SET;
S #_log_time_act_wfi_flrinse;

//Close WFI supply valve.
L "dbCONST".BLK.CMD.STOP;
T  #_emc_water_cmd;

//Report Event Set
SET;
S #_log_msg_wfi_rinse_end;

// Set emx_mmfl to substate SIP and restart it.
L "dbCONST".BLK.EMX1.SUBS.SIP;
T #_emx_mmfl_subs;
L "dbCONST".BLK.CMD.RESTART;
T #_emx_mmfl_cmd;
Verification:- A(;
L 	#_emc_water_state;
L 	"dbCONST".BLK.STATE.STOPPED;
==I;
);
A(;
L    #_emx_mmfl_state;
L    "dbCONST".BLK.STATE.COMPLETED;
==I;
);


--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Start timer to empty Tank.
Action:- // Clear MMFLx restart command
L "dbCONST".BLK.CMD.START;
T #_emx_mmfl_cmd;

//Start Timer for WFI Empty
A #SQ_TIMER.Q;
R #sqSeqTimerStart;

AN #SQ_TIMER.Q;
S #sqSeqTimerStart;
L #_r_time_wfi_empty_mx;
L 1000;
*I;
T #SQ_TIMER.PT;
Verification:- A #sqSeqTimerStart;


--------------------------------------------------
TRANSITION::18
--------------------------------------------------
TRNNo:- 18
Title:- Timer Expired?
EmptyTransition:- False
Description:- TIME_WFI_EMPTY expired?
Condition:- A #SQ_TIMER.Q;


--------------------------------------------------
STEP::19
--------------------------------------------------
StepNo:- 19
Title:- UO_MX_CIP : Close HPCA supply valve
Description:- Close compressed air HPCA supply valve.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Close CA supply valve.
Action:- // Close CA supply valve
L "dbCONST".BLK.CMD.STOP;
T  #_emc_gas_cmd;

SET;
S #_prompt_vessel_empty;
Verification:- //Verify if HPCA supply valve closed.
A(;
L 	#_emc_gas_state;
L 	"dbCONST".BLK.STATE.STOPPED;
==I;
);


--------------------------------------------------
TRANSITION::19
--------------------------------------------------
TRNNo:- 19.0000
Title:- Wait for vessel confirmed empty
EmptyTransition:- False
Description:- Jump when operator confirms vessel and lines fully drained
Condition:- A #_prompt_vessel_empty_confirm_yes;


--------------------------------------------------
STEP::20
--------------------------------------------------
StepNo:- 20
Title:- UO_MX_CIP : Unit Operation Completed
Description:- Set all used equipment modules to safe state.
Log Mx CIP operation end time.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Set all used equipment modules to safe state.
Log Mx CIP operation end time.
Action:- // Set all used equipment to safe state.
L "dbCONST".BLK.CMD.STOP;
T  #_ema_vessel_cmd;
T  #_emm_vessel_cmd;
T  #_emc_gas_cmd;
T  #_emc_water_cmd;
T  #_emx_drain_cmd;
T  #_emx_mmfl_cmd;

// Log Mx CIP operation end time.
SET;
S #_log_msg_cip_end;
Verification:- A "uncondJump";


****************************************************************************************************
END SSS REPORT
****************************************************************************************************
