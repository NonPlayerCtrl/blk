****************************************************************************************************
SEQUENCE STEP SCHEDULE
generated on 10/08/2018 10:42:52 AM by David Paspa
****************************************************************************************************





--------------------------------------------------
SEQUENCE
--------------------------------------------------

Name:- CHARGE
Title:- PH_CHARGE
Description:- Add specified amount of WFI or PW to the vessel Mx
HMI_FORMAT:- @@STEP_NUM_INT@@,@@STEP_TITLE@@
Class:- EMC2
Level:- PH
STEP_LIST_FORMAT:- JU    S0@@STEP_NUM@@; // STEP-0@@STEP_NUM@@:
ACT_LIST_FORMAT:- JU    @@ACT_CODE@@@@STEP_NUM@@; //ACTION-@@ACT_NUM@@
HeaderName:- C2PCHAR
Version:- 0.5
RevisionHistory:- // SFC Revision History:
// Rev By               Date        CC         Note
// 0.6 Srinivas Nimmala  19-May-2010           Report Trigger Added    

// 0.5 Khairul Basar  20-Sep-2009 CC-09/023    SQ_TIMER is removed from Visio variable list.Timeout_alarm 
//                                             programmed.Start/Stop of EMM1 to request mass measurement.
//                                             Reset Pulse mode in S007.Mass_current compare logic with >=R
//                                             instead of ==R.
// 0.4 Khairul Basar  25-Aug-2009 CC-09/023    Change in Verific. & TRN code OR to AND. 
//                                             Change in the Last step.SQ_TIMER added.
// 0.3 David Paspa    24-Aug-2009 CC-09/023    Removed repeated setup steps.
// 0.2 Khairul Basar  18-Aug-2009              Added logic code
// 0.1 David Paspa    13-Jul-2009              SFC structural design

--------------------------------------------------
PARAMETER::1
--------------------------------------------------
Name:- log_msg_filling_timeout_abort
Type:- BOOL
Description:- PH_EMC2_CHARGE Charge timeout charging vessel. Operator confirmed to abort.
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::2
--------------------------------------------------
Name:- log_msg_filling_timeout_repeat
Type:- BOOL
Description:- PH_EMC2_CHARGE Charge timeout charging vessel. Operator confirmed to retry.
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::3
--------------------------------------------------
Name:- log_msg_invalid_mass_repeat
Type:- BOOL
Description:- PH_EMC2_CHARGE Charge mass is not correct. Confirmed to retry.
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::4
--------------------------------------------------
Name:- log_msg_invalid_mass_abort
Type:- BOOL
Description:- PH_EMC2_CHARGE Charge mass is not correct. Confirmed to abort.
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::5
--------------------------------------------------
Name:- prompt_invalid_mass
Type:- BOOL
Description:- PH_EMC2_CHARGE Operator to confirrm retry or abort? Charge mass incorrect.
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::6
--------------------------------------------------
Name:- log_msg_charge_begin
Type:- BOOL
Description:- PH_EMC2_CHARGE begin time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::7
--------------------------------------------------
Name:- log_msg_charge_end
Type:- BOOL
Description:- PH_EMC2_CHARGE end time
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::8
--------------------------------------------------
Name:- prompt_invalid_mass_confirm_yes
Type:- BOOL
Description:- PH_EMC2_CHARGE Charge mass is not correct. Confirmed to retry.
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::9
--------------------------------------------------
Name:- prompt_invalid_mass_confirm_no
Type:- BOOL
Description:- PH_EMC2_CHARGE Charge mass is not correct. Confirmed to abort.
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::10
--------------------------------------------------
Name:- log_msg_invalid_mass
Type:- BOOL
Description:- PH_EMC2_CHARGE Charge mass invalid.
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::11
--------------------------------------------------
Name:- mass_final
Type:- REAL
Description:- mass_final
ParameterInOut:- IN_OUT

--------------------------------------------------
PARAMETER::12
--------------------------------------------------
Name:- mi_vessel_pv
Type:- REAL
Description:- Mass from field EMM1
ParameterInOut:- IN_OUT

--------------------------------------------------
PARAMETER::13
--------------------------------------------------
Name:- mass_ready
Type:- BOOL
Description:- An accurate mass reading is available
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::14
--------------------------------------------------
Name:- pos_wfi_state
Type:- INT
Description:- WFI supply valve state
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::15
--------------------------------------------------
Name:- pos_pw_state
Type:- INT
Description:- PW supply valve state
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::16
--------------------------------------------------
Name:- pos_pspw_state
Type:- INT
Description:- PS supply for PW loop valve state
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::17
--------------------------------------------------
Name:- pos_pswfi_state
Type:- INT
Description:- PS supply for WFI loop valve state
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::18
--------------------------------------------------
Name:- pos_pswfi_cmd
Type:- INT
Description:- PS supply for WFI loop valve cmd
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::19
--------------------------------------------------
Name:- pos_pspw_cmd
Type:- INT
Description:- PS supply for PW loop valve cmd
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::20
--------------------------------------------------
Name:- pos_wfi_cmd
Type:- INT
Description:- WFI supply valve cmd
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::21
--------------------------------------------------
Name:- pos_pw_cmd
Type:- INT
Description:- PW supply valve cmd
ParameterInOut:- OUT

--------------------------------------------------
PARAMETER::22
--------------------------------------------------
Name:- prompt_filling_timeout_confirm_yes
Type:- BOOL
Description:- PH_EMC2_CHARGE Charge timeout charging vessel. Operator confirmed to retry.
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::23
--------------------------------------------------
Name:- prompt_filling_timeout_confirm_no
Type:- BOOL
Description:- PH_EMC2_CHARGE Charge timeout charging vessel. Operator confirmed to abort.
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::24
--------------------------------------------------
Name:- prompt_filling_timeout
Type:- BOOL
Description:- PH_EMC2_CHARGE Operator to confirrm retry or abort? Timeout charging vessel.
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::25
--------------------------------------------------
Name:- log_msg_filling_timeout
Type:- BOOL
Description:- PH_EMC2_CHARGE Charge timeout waiting to charge vessel
ParameterInOut:- VAR

--------------------------------------------------
PARAMETER::26
--------------------------------------------------
Name:- timeout
Type:- TIME
Description:- timeout
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::27
--------------------------------------------------
Name:- mass_actual
Type:- REAL
Description:- mass_actual
ParameterInOut:- IN_OUT

--------------------------------------------------
PARAMETER::28
--------------------------------------------------
Name:- mass_initial
Type:- REAL
Description:- mass_initial
ParameterInOut:- IN_OUT

--------------------------------------------------
PARAMETER::29
--------------------------------------------------
Name:- mass_charge
Type:- REAL
Description:- mass charge
ParameterInOut:- IN

--------------------------------------------------
PARAMETER::30
--------------------------------------------------
Name:- medium_liquid
Type:- INT
Description:- Selected medium PW, PSPW, WFI or PSWFI
ParameterInOut:- IN


--------------------------------------------------
STEP::01
--------------------------------------------------
StepNo:- 01
Title:- PH_EMC2_CHARGE : Request current mass in vessel
Description:- Log CHARGE begin time.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Log CHARGE begin time.
Action:- //Log CHARGE begin time.
SET;
S #_log_msg_charge_begin;

Verification:- A "uncondJump";


--------------------------------------------------
TRANSITION::01
--------------------------------------------------
TRNNo:- 01
Title:- Phase Parameter Check
EmptyTransition:- False
Description:- Mass Charge Target Parameter Invalid
Condition:-  A(; 
 L     #_mass_charge; 
 L     1.000000e+000;
 >R; 
  ); 


--------------------------------------------------
TRANSITION::04
--------------------------------------------------
TRNNo:- 04
Title:- Phase Parameter ready
EmptyTransition:- False
Description:- Vessel mass Target value is available.
Condition:-  A(; 
 L     #_mass_charge; 
 L     1.000000e+000;
<=R; 
  ); 


--------------------------------------------------
STEP::02
--------------------------------------------------
StepNo:- 02
Title:- PH_EMC2_CHARGE : Phase Parameter Invalid
Description:- Mass Charge Target Parameter Invalid message set to operator and ask for confirmation

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Mass calculation fail try again.
Action:- SET;
S #_log_msg_invalid_mass;
S #_prompt_invalid_mass;
Verification:- A "uncondJump";


--------------------------------------------------
TRANSITION::02
--------------------------------------------------
TRNNo:- 02
Title:- Operator abort
EmptyTransition:- False
Description:- Operator decided to abort.
Condition:-  A #_prompt_invalid_mass_confirm_no;


--------------------------------------------------
TRANSITION::03
--------------------------------------------------
TRNNo:- 03
Title:- Try again
EmptyTransition:- False
Description:- Operator decided to try again.
Condition:- A #_prompt_invalid_mass_confirm_yes;


--------------------------------------------------
STEP::03
--------------------------------------------------
StepNo:- 03
Title:- PH_EMC2_CHARGE : Log operator abort
Description:- Log operator abort.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Log operator abort.
Action:- //Log operator abort.
SET;
S #_log_msg_invalid_mass_abort;
Verification:- A "uncondJump";


--------------------------------------------------
STEP::04
--------------------------------------------------
StepNo:- 04
Title:- PH_EMC2_CHARGE : Log operator repeat
Description:- Log operator repeat

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Log operator repeat
Action:- //Log operator repeat.
SET;
S #_log_msg_invalid_mass_repeat;
Verification:- A "uncondJump";


--------------------------------------------------
TRANSITION::06
--------------------------------------------------
TRNNo:- 06
Title:- Empty Transition
EmptyTransition:- False
Description:- Empty Transition
Condition:- A "uncondJump";


--------------------------------------------------
STEP::05
--------------------------------------------------
StepNo:- 05
Title:- PH_EMC2_CHARGE : Store current vessel mass
Description:- Fetch the current vessel mass and store in mass_initial

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Clear out mass_initial.
Action:- L     0.000000e+000; 
T     #_mass_initial; 
Verification:-   A(; 
  L     #_mass_initial; 
  L     0.000000e+000; 
  ==R; 
  );

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Store current mass to initial mass.
Action:- L     #_mi_vessel_pv;
T     #_mass_initial; 
Verification:- A "uncondJump";


--------------------------------------------------
TRANSITION::07
--------------------------------------------------
TRNNo:- 07
Title:- Jump
EmptyTransition:- False
Description:- Jump unconditionally
Condition:- A "uncondJump";


--------------------------------------------------
STEP::06
--------------------------------------------------
StepNo:- 06
Title:- PH_EMC2_CHARGE : Open selected duty supply valve
Description:- Open selected WFI or PW supply valve. Start the sequence timer.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Open WFI or PW supply valve. 
Action:- //Enable flow path and Open selected WFI/PW valve
L #_medium_liquid;
L "dbCONST".SEL.LIQUID.WFI;
==I;
JC v021;

L #_medium_liquid;
L "dbCONST".SEL.LIQUID.PSWFI;
==I;
JC v022;


L #_medium_liquid;
L "dbCONST".SEL.LIQUID.PW;
==I;
JC v023;

L #_medium_liquid;
L "dbCONST".SEL.LIQUID.PSPW;
==I;
JC v024;



v021:NOP 0;
L  "dbCONST".BLK.POS4.CMD.OPEN;
T #_pos_wfi_cmd;
JU en02;


v022:NOP 0;
L  "dbCONST".BLK.POS4.CMD.OPEN;
T #_pos_pswfi_cmd;
JU en02;


v023:NOP 0;
L  "dbCONST".BLK.POS4.CMD.OPEN;
T #_pos_pw_cmd;
JU en02;


v024:NOP 0;
L  "dbCONST".BLK.POS4.CMD.OPEN;
T #_pos_pspw_cmd;
JU en02;

en02: NOP 0;
Verification:- //Verify state open of selected WFI/PW valve
A(;
L #_medium_liquid;
L "dbCONST".SEL.LIQUID.WFI;
==I;
);
A(;
L "dbCONST".BLK.POSx.STATE.OPENED;
L #_pos_wfi_state;
==I;
);
O;
A(;
L #_medium_liquid;
L "dbCONST".SEL.LIQUID.PSWFI;
==I;
);
A(;
L "dbCONST".BLK.POSx.STATE.OPENED;
L #_pos_pswfi_state;
==I;
);
O;
A(;
L #_medium_liquid;
L "dbCONST".SEL.LIQUID.PW;
==I;
);
A(;
L "dbCONST".BLK.POSx.STATE.OPENED;
L #_pos_pw_state;
==I;
);
O;
A(;
L #_medium_liquid;
L "dbCONST".SEL.LIQUID.PSPW;
==I;
);
A(;
L "dbCONST".BLK.POSx.STATE.OPENED;
L #_pos_pspw_state;
==I;
);

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Start the sequence timer.
Action:- L #_timeout;
T #SQ_TIMER.PT;

SET;
S #sqSeqTimerStart;
Verification:- A "uncondJump";


--------------------------------------------------
TRANSITION::08
--------------------------------------------------
TRNNo:- 08
Title:- Wait for mass endpoint
EmptyTransition:- False
Description:- Jump if current vessel mass is mass_initial + mass_charge
Condition:- // vessel mass >= Mass Inital + Mass charge
 L #_mass_initial;
L #_mass_charge;
+R;
L #_mi_vessel_pv;
<=R;


--------------------------------------------------
TRANSITION::09
--------------------------------------------------
TRNNo:- 09
Title:- Check timeout exceeded
EmptyTransition:- False
Description:- Jump if the timeout period has expired.
Condition:- A #SQ_TIMER.Q;


--------------------------------------------------
STEP::07
--------------------------------------------------
StepNo:- 07
Title:- PH_EMC2_CHARGE : Vessel filling timeout. Wait for operator retry.
Description:- Close the WFI or PW valve. Stop the sequence timer. Raise the timeout alarm message. Prompt operator to try again or abort.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Close WFI or PW supply valve. 
Raise the timeout alarm message. Prompt operator to try again or abort.
Action:- //Close selected WFI/PW valve

L #_medium_liquid;
L "dbCONST".SEL.LIQUID.WFI;
==I;
JC v041;

L #_medium_liquid;
L "dbCONST".SEL.LIQUID.PSWFI;
==I;
JC v042;

L #_medium_liquid;
L "dbCONST".SEL.LIQUID.PW;
==I;
JC v043;

L #_medium_liquid;
L "dbCONST".SEL.LIQUID.PSPW;
==I;
JC v044;



v041:NOP 0;
L "dbCONST".BLK.POSx.CMD.CLOSE;
T #_pos_wfi_cmd;
JU en04;


v042:NOP 0;
L "dbCONST".BLK.POSx.CMD.CLOSE;
T #_pos_pswfi_cmd;
JU en04;


v043:NOP 0;
L "dbCONST".BLK.POSx.CMD.CLOSE;
T #_pos_pw_cmd;
JU en04;


v044:NOP 0;
L "dbCONST".BLK.POSx.CMD.CLOSE;
T #_pos_pspw_cmd;
JU en04;

en04: NOP 0;	

SET;
S #_prompt_filling_timeout;
S #_log_msg_filling_timeout;
R #sqSeqTimerStart;
Verification:- //Verify state open of selected WFI/PW valve
A(;
L #_medium_liquid;
L "dbCONST".SEL.LIQUID.WFI;
==I;
);
A(;
L "dbCONST".BLK.POSx.STATE.CLOSED; 
L #_pos_wfi_state;
==I;
);
O;
A(;
L #_medium_liquid;
L "dbCONST".SEL.LIQUID.PSWFI;
==I;
);
A(;
L "dbCONST".BLK.POSx.STATE.CLOSED; 
L #_pos_pswfi_state;
==I;
);
O;
A(;
L #_medium_liquid;
L "dbCONST".SEL.LIQUID.PW;
==I;
);
A(;
L "dbCONST".BLK.POSx.STATE.CLOSED; 
L #_pos_pw_state;
==I;
);
O;
A(;
L #_medium_liquid;
L "dbCONST".SEL.LIQUID.PSPW;
==I;
);
A(;
L "dbCONST".BLK.POSx.STATE.CLOSED; 
L #_pos_pspw_state;
==I;
);



--------------------------------------------------
TRANSITION::10
--------------------------------------------------
TRNNo:- 10
Title:- Operator abort
EmptyTransition:- False
Description:- Operator decided to abort.
Condition:-  A #_prompt_filling_timeout_confirm_no;


--------------------------------------------------
TRANSITION::11
--------------------------------------------------
TRNNo:- 11
Title:- Try again
EmptyTransition:- False
Description:- Operator decided to try again.
Condition:- A #_prompt_filling_timeout_confirm_yes;


--------------------------------------------------
STEP::08
--------------------------------------------------
StepNo:- 08
Title:- PH_EMC2_CHARGE : Log operator abort
Description:- Log operator abort.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Log operator abort.
Action:- //Log operator abort.
SET;
S #_log_msg_filling_timeout_abort;
R #_prompt_filling_timeout_confirm_no;
Verification:- A "uncondJump";


--------------------------------------------------
TRANSITION::12
--------------------------------------------------
TRNNo:- 12
Title:- Empty Transition
EmptyTransition:- False
Description:- Empty Transition
Condition:- A "uncondJump";


--------------------------------------------------
STEP::09
--------------------------------------------------
StepNo:- 9.0000
Title:- PH_EMC2_CHARGE : Close supply valve
Description:- Close supply valves.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Close WFI and PW supply valve. 
Action:- //Close WFI and PW valves.

L "dbCONST".BLK.POSx.CMD.CLOSE;
T #_pos_wfi_cmd; 
T #_pos_pswfi_cmd;
T #_pos_pw_cmd;  
T #_pos_pspw_cmd; 
Verification:- //Verify the valve closed status.

A(;
L "dbCONST".BLK.POSx.STATE.CLOSED;
L #_pos_wfi_state; 
==I;
);
A(;
L "dbCONST".BLK.POSx.STATE.CLOSED;
L #_pos_pswfi_state;  
==I;
);
A(;
L "dbCONST".BLK.POSx.STATE.CLOSED;
L #_pos_pw_state;  
==I;
);
A(;
L "dbCONST".BLK.POSx.STATE.CLOSED;
L #_pos_pspw_state;  
==I;
);



--------------------------------------------------
TRANSITION::14
--------------------------------------------------
TRNNo:- 14
Title:- Vessel mass measurement ready
EmptyTransition:- False
Description:- Vessel mass module indicates an accurate mass reading is available.
Condition:-  A #_mass_ready;


--------------------------------------------------
STEP::10
--------------------------------------------------
StepNo:- 10
Title:- PH_EMC2_CHARGE : Log operator repeat
Description:- Log operator repeat

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Log operator repeat
Action:- //Log operator repeat.
SET;
S #_log_msg_filling_timeout_repeat;
R #_prompt_filling_timeout_confirm_yes;
Verification:- A "uncondJump";


--------------------------------------------------
TRANSITION::13
--------------------------------------------------
TRNNo:- 13
Title:- Empty Transition
EmptyTransition:- False
Description:- Empty Transition
Condition:- A "uncondJump";


--------------------------------------------------
STEP::11
--------------------------------------------------
StepNo:- 11
Title:- PH_EMC2_CHARGE : Calculate mass added
Description:- Fetch the final vessel mass ans store in the mass final.Calculate actual mass added.
mass actual=mass_final-mass_initial;Log mass mass actual.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Clear out mass_actual.
Action:-   L     0.000000e+000; 
  T     #_mass_actual; 
Verification:-  A(; 
 L     #_mass_actual; 
 L     0.000000e+000; 
 ==R; 
 ); 

--------------------------------------------------
ACTION::02
--------------------------------------------------
Description:- Calculate Actual Charge
Action:-  L #_mi_vessel_pv; 
 T #_mass_final; 
 L #_mass_initial; 
 -R; 
 T #_mass_actual; 
Verification:-  A(; 
L  #_mass_actual; 
L  0.000000e+000; 
>R; 
 ); 


--------------------------------------------------
TRANSITION::15
--------------------------------------------------
TRNNo:- 15
Title:- TRN Title
EmptyTransition:- False
Description:- Jump
Condition:- A "uncondJump";


--------------------------------------------------
STEP::12
--------------------------------------------------
StepNo:- 12
Title:- PH_EMC2_CHARGE : Last Step
Description:- Log CHARGE end time.

--------------------------------------------------
ACTION::01
--------------------------------------------------
Description:- Log CHARGE end time.
Action:- //Log CHARGE end time.
SET;
S #_log_msg_charge_end;
R #sqSeqTimerStart;
Verification:- A "uncondJump";

****************************************************************************************************
END SSS REPORT
****************************************************************************************************
