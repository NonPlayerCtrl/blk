//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//----------------------------------------------------------------------------//
// Class:       fbPOSx                                                        //
// Description:                                                               //
// On/Off valve with single output and open/close feedback;This CM also can be//
// used for the valves without feedback, with only open feedback or only close//
// feedback.                                                                  //
// 1.POS1: on/off valve with single output & no beedback                      //
//   In this case FB_O=OUT_Q,FB_C=NOT-OUT_Q ;The FB_C & FB_O both dont have   //
//   feedback from field;                                                     //
// 2.POS2:On/Off valve with single output and closed feedback                 //
//   In this case FB_O=NOT-FB_C/OUT_Q;The FB_C has feedback from field;       //
// 3.POS3:On/Off valve with single output and open feedback                   //
//   In this case FB_C=NOT-FB_O/NOT-OUT_Q;The FB_O has feedback from field;   //
// 4.POS4:On/Off valve with single output and both opened and closed feedback //
//   In this case FB_O,FB_O both have feedback from field;                    //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 2.0 David Paspa      30-Jan-2018 NA        Reboot for S7-1500.             //
// 0.4 Mr. Khoon        01-Oct-2009 CC-09/016 Mode=Initialized,OOS coded.     //
// 0.5 Steve Linehan    29-Sep-2009 CC-09/016 Bypass Input Mode Added.        //
// 0.4 Khairul Basar    16-Sep-2009 CC-09/016 Duplicate Auto/man parameters   //
//                                            deleted. auto/manual both now   //
//                                            using same parameters.          //
// 0.3 Khairul Basar    10-Sep-2009 CC-09/016 ref2.                           //
// 0.2 Khairul Basar    02-Sep-2009 CC-09/016 ref1.                           //
// 0.1 Khairul Basar    03-Aug-2009           Initial design.                 //
//                                                                            //
// Ref2:                                                                      //
// Instead of one timer, two timers namely TMR_OPN and TMR_CLS used for       //
// opening and closing travel time respectively.                              //
// Nw13 Travelling logic changed.Logic for travelling is :                    //
// When command=open, timer running, & still not opened.                      //
// or command=close, timer running, still not closed.                         //
// 3. Fail to open/Close divided into two Nw 10 & 11.                         //
// 4.Openning timer in Nw8, Closing timer in Nw9 start by Command flag.       //
// 5.Instead of using closing & openneing flag, temp flags are changed to     //
// closed & opened respectivley & programed in Nw6 & 7.                       //
//                                                                            //
// Ref1:                                                                      //
// 1.Travelling logic changed in NW9 & 10,travelling considered when both the //
// feedback is unavailable but commanded to open or close.                    //
// 2.Nw1 deleted, to get previous device state compared with state of fault   //
// while open/close state.                                                    //
// 3.Nw10 splitted into Nw10 & 11.                                            //
// 4.Fault while Opened/Closed coded in the Nw12.Logic is once open or close  //
// state is confirmed and then feedback lost or wrong feedback comes in, then //
// it will say fault state.                                                   //
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "fbPOSx"
TITLE = POSx : On/Off valve with single output and  open/close feedback
{ S7_Optimized_Access := 'FALSE' }
AUTHOR : REO
NAME : fbPOSx
VERSION : 2.0

    VAR_INPUT
        CMD : Int := 1;   // Close command
        CRIL : Bool;   // Critical Interlock in series
        NCRIL : Bool;   // Non-critical Interlock in series
        MAN_OVERRIDE : Bool;   // Critical Interlock in series can be Override by this Input
        FB_C : Bool;   // Close feedback signal from field
        FB_O : Bool;   // Open feedback signal from field
        IN_MAN : Bool;
        TMR : Time := T#3S;   // Close/Open feedback delay limit
        INTERLOCKING_TIMER : Timer;
    END_VAR

    VAR_OUTPUT
        STATE : Int;   // Valve Status
        OUT_Q : Bool;   // Valve open/close command
        FAULT_C : Bool;   // Valve fail to close
        FAULT_O : Bool;   // Valve fail to Open
        INTERLOCK : Bool;   // Valve operation interlocked
        VLC_NC : Bool;
        FAIL_IL : Bool;
        VLC_NO : Bool;
    END_VAR

    VAR_IN_OUT
        MODE : Int := 1;     // Control Mode, Auto by default
        OWNER : Int;         // Value to be set or reset by Parent
    END_VAR

    VAR
        TMR_OPN {OriginalPartName := 'TON'; LibVersion := '1.0'} : TON;
        TMR_CLS {OriginalPartName := 'TON'; LibVersion := '1.0'} : TON;
    END_VAR

    VAR_TEMP
        Out_Q1 : Bool;
        STATE1 : Int;
        Closed : Bool;
        Opened : Bool;
        isCommand : Bool;
        Interlocked : Bool;
        tInterlock : Bool;
        F2C1 : Bool;
        F2O1 : Bool;
        modeOOS : Bool;
        BYPASS_IP : Bool;
    END_VAR

BEGIN
NETWORK
TITLE = Interlocking Logic
//Instance Specific/Non critical Interlocks can be bypassed by Override/Inhibit
//command from Operator Station(HMI)
//#STATE=7----Interlocked
//
//
      O #CRIL;
      O;
      A #NCRIL;
      AN #MAN_OVERRIDE;
      = #tInterlock;
      A #tInterlock;
      A(;
      L #CMD;
      L "dbCONST".BLK.POSx.CMD.OPEN;
      ==I;
      );
      L S5T#5S;
      SD #INTERLOCKING_TIMER;
      NOP 0;
      NOP 0;
      NOP 0;
      A #INTERLOCKING_TIMER;
      = #Interlocked;
      A #tInterlock;
      = #INTERLOCK;
NETWORK
TITLE = Out of Service Mode=3
//#STATE=8----Out of service
      L #MODE;
      L "dbCONST".BLK.MODE.OOS;
      ==I;
      = #modeOOS;
NETWORK
TITLE = Input Bypass Mode In Manual
      A(;
      L #MODE;
      L "dbCONST".BLK.MODE.MANUAL;
      ==I;
      );
      A #IN_MAN;
      = #BYPASS_IP;
NETWORK
TITLE = Valve Command open
//#MODE    = 1---> Manual operation
//#MODE    = 2---> Auto operation
//
      A(;
      O(;
      L #MODE;
      L "dbCONST".BLK.MODE.MANUAL;
      ==I;
      );
      O(;
      L #MODE;
      L "dbCONST".BLK.MODE.AUTO;
      ==I;
      );
      );
      A(;
      L #CMD;
      L "dbCONST".BLK.POSx.CMD.OPEN;
      ==I;
      );
      = #isCommand;
      A #isCommand;
      AN #Interlocked;
      S #OUT_Q;
      A #isCommand;
      A #Interlocked;
      = #FAIL_IL;
NETWORK
TITLE = Close command
//Depending on situation:
//If Fail to Close or Fail to Open fault occurs then Command should Hold to the
//Current state,  Holding current state is safe to do.
//
//Mode=3 , Out of Service
      A(;
      O(;
      L #MODE;
      L "dbCONST".BLK.MODE.MANUAL;
      ==I;
      );
      O(;
      L #MODE;
      L "dbCONST".BLK.MODE.AUTO;
      ==I;
      );
      );
      A(;
      L #CMD;
      L "dbCONST".BLK.POSx.CMD.CLOSE;
      ==I;
      );
      O #modeOOS;
      O #Interlocked;
      R #OUT_Q;
NETWORK
TITLE = out_Q= temp[4]
      A #OUT_Q;
      = #Out_Q1;
NETWORK
TITLE = State Machine Logic - Valve CLOSED (1)
      AN #Out_Q1;
      A(;
      A #FB_C;
      AN #FB_O;
      O #BYPASS_IP;
      );
      = #isCommand;
      A #isCommand;
      JNB Label_0;
      L "dbCONST".BLK.POSx.STATE.CLOSED;
      T #STATE;
Label_0:      NOP 0;
      A #isCommand;
      = #Closed;
NETWORK
TITLE = State Machine Logic - Valve OPENED (2)
      A #Out_Q1;
      A(;
      A #FB_O;
      AN #FB_C;
      O #BYPASS_IP;
      );
      = #isCommand;
      A #isCommand;
      JNB Label_1;
      L "dbCONST".BLK.POSx.STATE.OPENED;
      T #STATE;
Label_1:      NOP 0;
      A #isCommand;
      = #Opened;
NETWORK
TITLE = Valve Status Not Confirmed Closed
      O #Out_Q1;
      O;
      A(;
      O #FB_O;
      ON #FB_C;
      );
      AN #BYPASS_IP;
      = #VLC_NC;
NETWORK
TITLE = Valve Status Not Confirmed Open
      ON #Out_Q1;
      O;
      A(;
      ON #FB_O;
      O #FB_C;
      );
      AN #BYPASS_IP;
      = #VLC_NO;
NETWORK
TITLE = Run openning travel timer
      A #Out_Q1;
      = #isCommand;
      CALL #TMR_OPN
      {time_type := 'Time'}
      (  IN                          := #isCommand ,
         PT                          := #TMR ,
         Q                           := #TMR_OPN.Q ,
         ET                          := #TMR_OPN.ET
      );
      NOP 0;
NETWORK
TITLE = Run Closing travel timer
      AN #Out_Q1;
      = #isCommand;
      CALL #TMR_CLS
      {time_type := 'Time'}
      (  IN                          := #isCommand ,
         PT                          := #TMR ,
         Q                           := #TMR_CLS.Q ,
         ET                          := #TMR_CLS.ET
      );
      NOP 0;
NETWORK
TITLE = Fault while openning
      A(;
      A #TMR_OPN.Q;
      AN #Opened;
      O #FAIL_IL;
      );
      AN #modeOOS;
      JNB Label_2;
      L "dbCONST".BLK.POSx.STATE.FAULT;
      T #STATE;
      SET;
      SAVE;
      CLR;
Label_2:      A BR;
      = #FAULT_O;
      = #F2O1;
NETWORK
TITLE = Fault while Closing
      A #TMR_CLS.Q;
      AN #Closed;
      AN #modeOOS;
      JNB Label_3;
      L "dbCONST".BLK.POSx.STATE.FAULT;
      T #STATE;
      SET;
      SAVE;
      CLR;
Label_3:      A BR;
      = #FAULT_C;
      = #F2C1;
NETWORK
TITLE = Fault while Closed/Opened
//While open, Open feedback lost or close feedback come
//While closed, Close feedback lost or open feedback come
      A(;
      A #Out_Q1;
      A(;
      L #STATE;
      L "dbCONST".BLK.POSx.STATE.OPENED;
      ==I;
      );
      A(;
      O #FB_C;
      ON #FB_O;
      );
      O;
      AN #Out_Q1;
      A(;
      L #STATE;
      L "dbCONST".BLK.POSx.STATE.CLOSED;
      ==I;
      );
      A(;
      ON #FB_C;
      O #FB_O;
      );
      );
      AN #BYPASS_IP;
      JNB Label_4;
      L "dbCONST".BLK.POSx.STATE.FAULT;
      T #STATE;
Label_4:      NOP 0;
NETWORK
TITLE = State Machine Logic - Valve TRAVEL (3)
//When command=open, timer running, & still not opened.
//or command=close, timer running, still not closed.
      A(;
      A #Out_Q1;
      AN #TMR_OPN.Q;
      AN #Opened;
      O;
      AN #Out_Q1;
      AN #TMR_CLS.Q;
      AN #Closed;
      );
      JNB Label_5;
      L "dbCONST".BLK.POSx.STATE.TRAVEL;
      T #STATE;
Label_5:      NOP 0;
END_FUNCTION_BLOCK
