//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//                Automatically Generated File - Do Not Edit                  //
//----------------------------------------------------------------------------//
// Class:       ifbMOT1                                                       //
// Description: Instances of MOT1                                             //
//                                                                            //
// Vacuum Pump control.                                                       //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 2.0 David Paspa      05-Jan-2018 NA        Reboot for S7-1500.             //
// 0.6 Khairul Basar    12-Oct-2009 CC-09/016 IN_REQ_MODE is assigned to      //
//                                            Toggle.                         //
// 0.5 Gus Abdallah     01-Oct-2009 CC-09/016 Interlock are CM processed.     //
// 0.4 Khairul Basar    17-Sep-2009 CC-09/016 Instead of Auto/Man dual command//
//                                            only CMD is configured.         //
// 0.3 Khairul Basar    09-Sep-2009 CC-09/016 MOT1 updated as per Ref1.       //
// 0.2 Khairul Basar    31-Aug-2009 CC-09/016 Interlocks are assigned.        //
// 0.1 Khairul Basar    31-Aug-2009           Initial design.                 //
//                                                                            //
// Ref1: Instead of using one timer, another timer is created. One timer will //
// start when there is Start command, another will start when Stop command.   //
// FAULT_S will be setting so operator acknowledge signal must reset that     //
// flag to be able restart the MOT1 again. Start and Stop command divided     //
// into two networks NW2 & 3.                                                 //
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "ifbMOT1"
TITLE = MOT1:Instance
{ S7_Optimized_Access := 'FALSE' }
AUTHOR : REO
NAME : ifbMOT1
VERSION : 2.0

//----------------------------------------------------------------------------//
//                                                                            //
//----------------------------------------------------------------------------//
   VAR
@@TEMPLATE_BEGIN@@
    @@INSTANCE@@ : "fbMOT1";   // @@DESCRIPTION@@
@@TEMPLATE_END@@
   END_VAR

VAR_TEMP
    CRIL : Bool;
    NCRIL : Bool;
END_VAR

BEGIN
@@TEMPLATE_BEGIN@@
NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Get the critical interlock if there is one. If not set alwaysLow:      //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|CRIL_EXISTS@@
@@ATTR_DEFAULT_BEGIN@@
    A "alwaysLow";
@@ATTR_DEFAULT_END@@
    "idbILCR".@@TARGET@@-CRIL.INTERLOCK;
@@ATTR_END|CRIL_EXISTS@@
    = #CRIL;

NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Get the non-critical interlock if there is one. If not set alwaysLow:  //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|NCRIL_EXISTS@@
@@ATTR_DEFAULT_BEGIN@@
    A "alwaysLow";
@@ATTR_DEFAULT_END@@
    "idbILNCR".@@TARGET@@-NCRIL.INTERLOCK;
@@ATTR_END|NCRIL_EXISTS@@
    = #NCRIL;

NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Call the class function to process each instance:                      //
    //------------------------------------------------------------------------//
    CALL #@@INSTANCE@@
      (  CMD                         := #@@INSTANCE@@.CMD ,
         TMR                         := #@@INSTANCE@@.TMR ,
         CRIL                       := #CRIL ,
         NCRIL                      := #NCRIL ,
         MAN_OVERRIDE                := #@@INSTANCE@@.MAN_OVERRIDE ,
         RUNNING_FB                  := "RNG-@@NUMINSTANCE@@" ,
         MOT_OL_TRIP                 := "OVL-@@NUMINSTANCE@@" ,
         STATE                       := #@@INSTANCE@@.STATE ,
         INTERLOCK                   := #@@INSTANCE@@.INTERLOCK ,
         OUT_Q                       := "@@INSTANCE@@" ,
         FAULT_S                     := #@@INSTANCE@@.FAULT_S ,
         FAULT_O                     := #@@INSTANCE@@.FAULT_O ,
         MODE                        := #@@INSTANCE@@.MODE
      );
      NOP 0;
@@TEMPLATE_END@@
END_FUNCTION_BLOCK
