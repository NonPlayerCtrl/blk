//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//                Automatically Generated File - Do Not Edit                  //
//----------------------------------------------------------------------------//
// Class:       ifbPOS2                                                       //
// Description: Instances of POS2                                             //
//                                                                            //
// POS2 On/Off valve with single output and closed feedback. Uses the generic //
// fbPOSx class. The FB_C has feedback from field.                            //
// In this case FB_O = NOT-FB_C/OUT_Q because FB_O has no field feedback.     //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 2.0 David Paspa      05-Jan-2018 NA        Reboot for S7-1500.             //
// 0.7 Khairul Basar    12-Oct-2009 CC-09/016 IN_REQ_MODE is assigned to      //
//                                            Toggle.                         //
// 0.6 Gus Abdallah     01-Oct-2009 CC-09/016 Interlocks are CM processed.    //
// 0.5 Khairul Basar    18-Sep-2009 CC-09/016 ifcPOSx is called for           //
//                                            interfacing.                    //
// 0.4 Khairul Basar    16-Sep-2009 CC-09/016 Duplicate Auto/man parameters   //
//                                            deleted auto/manual both now    //
//                                            using same parameters.          //
// 0.3 Khairul Basar    10-Sep-2009 CC-09/016 Only POSx updated.              //
// 0.2 Khairul Basar    02-Sep-2009 CC-09/016 FB_O=NOT-FB_C assigned.         //
//                                            Instances are updated after     //
//                                            modification on POSx(ref-fbPOSx)//
//                                            Class/instance interlocks are   //
//                                            added.                          //
// 0.1 Khairul Basar    03-Aug-2009           Initial design.                 //
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "ifbPOS2"
TITLE = Instances of POS2 On/Off valve with single output and closed feedback
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : REO
NAME : ifbPOS2
VERSION : 2.0

//----------------------------------------------------------------------------//
// Declare the instance objects of the class:                                 //
//----------------------------------------------------------------------------//
VAR
@@TEMPLATE_BEGIN@@
    @@INSTANCE@@ : "fbPOSx";   // @@DESCRIPTION@@
@@TEMPLATE_END@@
END_VAR

VAR_TEMP
    FB_C : Bool;
    FB_O : Bool;
END_VAR

BEGIN
@@TEMPLATE_BEGIN@@
NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Get the critical interlock if there is one. If not set alwaysLow:      //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|CRIL_EXISTS@@
@@ATTR_DEFAULT_BEGIN@@
    A "alwaysLow";
@@ATTR_DEFAULT_END@@
    A "idbCRIL".@@INSTANCE@@cril.INTERLOCK;
@@ATTR_END|CRIL_EXISTS@@
    = #@@INSTANCE@@.mc.CRIL;

NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Get the non-critical interlock if there is one. If not set alwaysLow:  //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|NCRIL_EXISTS@@
@@ATTR_DEFAULT_BEGIN@@
    A "alwaysLow";
@@ATTR_DEFAULT_END@@
    A "idbNCRIL".@@INSTANCE@@ncril.INTERLOCK;
@@ATTR_END|NCRIL_EXISTS@@
    = #@@INSTANCE@@.mc.NCRIL;

NETWORK
TITLE = @@INSTANCE@@ : Owner
    //------------------------------------------------------------------------//
    // Set the instance owner:                                                //
    //------------------------------------------------------------------------//
    L "dbCONST".BLK.OWNER.@@PARENT@@;
    T #@@INSTANCE@@.mc.OWNER;

NETWORK
TITLE = @@INSTANCE@@ : Safe Command
    //------------------------------------------------------------------------//
    // Set the safe command:                                                  //
    //------------------------------------------------------------------------//
    L "dbCONST".BLK.POS2.SAFE.CMD;
    T #@@INSTANCE@@.mc.CMD_SAFE;

NETWORK
TITLE = @@INSTANCE@@ : Feedback from the field
    //------------------------------------------------------------------------//
    // Get the position feedback values:                                      //
    //------------------------------------------------------------------------//
    A "@@INSTANCE@@-ZSC";
    = #FB_C;
    AN "@@INSTANCE@@-ZSC";
    = #FB_O;

NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Call the class function to process each instance:                      //
    //------------------------------------------------------------------------//
    CALL #@@INSTANCE@@
    (   FB_C                 := #FB_C ,
        FB_O                 := #FB_O ,
        NC                   := @@NC@@ ,
        OUT_Q                := "@@INSTANCE@@-CMD"
    );

@@TEMPLATE_END@@
END_FUNCTION_BLOCK
