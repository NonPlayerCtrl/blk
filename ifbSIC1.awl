//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//                Automatically Generated File - Do Not Edit                  //
//----------------------------------------------------------------------------//
// Class:       ifbDI1                                                        //
// Description: Instances of DI1                                              //
//                                                                            //
// Agitator speed control.                                                    //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 2.0 David Paspa      05-Jan-2018 NA        Reboot for S7-1500.             //
// 0.8 Khairul Basar    12-Oct-2009 CC-09/016 IN_REQ_MODE is assigned to      //
//                                            Toggle.                         //
// 0.7 Gus Abdallah     01-Oct-2009 CC-09/016 Interlocks are CM processed.    //
// 0.6 Khairul Basar    18-Sep-2009 CC-09/016 ifcSIC1 is created & interfaced.//
// 0.5 Khairul Basar    16-Sep-2009 CC-09/016 Duplicate Auto/man parameters   //
//                                            deleted auto/manual both now    //
//                                            using same parameters.          //
// 0.4 Khairul Basar    14-Sep-2009 CC-09/016 O/P var DataQuality added.      //
// 0.3 Khairul Basar    11-Sep-2009 CC-09/016 Ref2.                           //
// 0.2 Khairul Basar    03-Sep-2009 CC-09/016 Ref1.                           //
// 0.1 Khairul Basar    03-Aug-2009           Initial design.                 //
//                                                                            //
// Ref2:                                                                      //
// TAH,THR & FLT are changed from NO to NC contact in the instance logic.     //
// SIC1 changed: Now Setpoint is moved to PID as per selected mode.           //
// TAH,THR & FLT will result device state 'FAULT=5'.                          //
// In DB1, Device state changed to 3=Stop, 4=Running instead of 4=stop,       //
// 3=Running.                                                                 //
//                                                                            //
// Ref1:                                                                      //
// MI1 Measure value assigned to MASS_MI1 parameter, The only DI ES_1000      //
// Emergency switch is connected to CRIL, whereas others MOT_OL, MOT_OH &    //
// INVF is connected to corresponding input parameters, these are removed     //
// from AND logic from CRIL. MV_RPM analog value range is hardcoded, but     //
// Speed set point range not hard coded, it will be done in HMI.              //
// Now the Minimum mass condition is always overridden in manual mode         //
// Now Device states are configured for ENABLED, when enabled two sub state   //
// STOPPED & RUNNING and DISABLED                                             //
// Now Parameters MEASURE_RPM for agitator RPM , MASS_MI1 is for mass of the  //
// vessel(this parameter is not in the FS), parameter for set point of manual //
// is SETPOINT_MAN, & in auto is SETPOINT_AUTO configured.                    //
// Set point SETPOINT_MAN and SETPOINT_AUTO initialized to 0.0 and GAIN to 1.0//
// Emergency stop signal added to CRIL.                                      //
// Now logic state for Interlock is corrected, see 2.                         //
// ALARM_HH, ALARM_H, ALARM_L, ALARM_LL are added in SIC1 and programmed.     //
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "ifbSIC1"
TITLE = Instances of agitator speed control
{ S7_Optimized_Access := 'FALSE' }
AUTHOR : REO
NAME : ifbSIC1
VERSION : 2.0

//----------------------------------------------------------------------------//
//                                                                            //
//----------------------------------------------------------------------------//
   VAR
@@TEMPLATE_BEGIN@@
      @@INSTANCE@@ : "fbDI1";   // @@DESCRIPTION@@
@@TEMPLATE_END@@
@@TEMPLATE_BEGIN@@
      @@INSTANCE@@_MODE : Struct
         PosEdge1 : Bool;
         PosEdge2 : Bool;
         REQ : Int;   // Request for Required Mode
      END_STRUCT;
@@TEMPLATE_END@@
   END_VAR

VAR_TEMP
    CRIL : Bool;
    NCRIL : Bool;
END_VAR

BEGIN
@@TEMPLATE_BEGIN@@
NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Get the critical interlock if there is one. If not set alwaysLow:      //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|CRIL_EXISTS@@
@@ATTR_DEFAULT_BEGIN@@
    A "alwaysLow";
@@ATTR_DEFAULT_END@@
    "idbILCR".@@TARGET@@-CRIL.INTERLOCK;
@@ATTR_END|CRIL_EXISTS@@
    = #CRIL;

NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Get the non-critical interlock if there is one. If not set alwaysLow:  //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|NCRIL_EXISTS@@
@@ATTR_DEFAULT_BEGIN@@
    A "alwaysLow";
@@ATTR_DEFAULT_END@@
    "idbILNCR".@@TARGET@@-NCRIL.INTERLOCK;
@@ATTR_END|NCRIL_EXISTS@@
    = #NCRIL;

//----------------------------------------------------------------------------//
//                                                                            //
//----------------------------------------------------------------------------//
NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
      CALL "ifcSIC1"
      (  IN_REQ_MODE                 := "idb@@PARENTCLASS@@".@@PARENT@@_MODE.Toggle ,
         IN_MODE                     := "idb@@PARENTCLASS@@".@@PARENT@@_MODE.REQ ,
         IN_AGITATOR_CMD             := "idb@@PARENTCLASS@@".@@PARENT@@.@@CHILDALIAS@@_CMD ,
         IN_SETPOINT                 := "idb@@PARENTCLASS@@".@@PARENT@@.OUT_SETPOINT ,
         AGITATOR_INTURRUPT          := "idb@@LNK2CLASS@@".@@LNK2TAG@@.AGITATOR_INTERRUPT ,
         OUT_MODE                    := #@@INSTANCE@@.REQ ,
         IO_MODE                     := "idbSIC1".@@INSTANCE@@.MODE ,
         IO_AGITATOR_CMD             := "idbSIC1".@@INSTANCE@@.CMD ,
         IO_SETPOINT                 := "idbSIC1".@@INSTANCE@@.SETPOINT ,
         POS_EDGE1                   := #@@INSTANCE@@.PosEdge1 ,
         POS_EDGE2                   := #@@INSTANCE@@.PosEdge2
      );
      NOP 0;

NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Call the class function to process each instance:                      //
    //------------------------------------------------------------------------//
      AN "THR-@@NUMINSTANCE@@";
      = %L0.2;
      BLD 103;
      AN "TAH-@@NUMINSTANCE@@";
      = %L0.3;
      BLD 103;
      AN "FLT-@@NUMINSTANCE@@";
      = %L0.4;
      BLD 103;
      CALL #@@INSTANCE@@
      (  CMD                         := #@@INSTANCE@@.CMD ,
         SETPOINT                    := #@@INSTANCE@@.SETPOINT ,
         CRIL                       := %L0.0 ,
         NCRIL                      := %L0.1 ,
         MAN_OVERRIDE                := #@@INSTANCE@@.MAN_OVERRIDE ,
         THR                         := %L0.2 ,
         TAH                         := %L0.3 ,
         FLT                         := %L0.4 ,
         MASS_RUN                    := #@@INSTANCE@@.MASS_RUN ,
         MASS_STOP                   := #@@INSTANCE@@.MASS_STOP ,
         MEASURE_RPM                 := "P_SPM-@@NUMINSTANCE@@":P ,
         MV_H                        := @@MAXAGIT@@ ,
         MV_L                        := 0.0 ,
         MV_POLR                     := #@@INSTANCE@@.MV_POLR ,
         LIMIT_HH                    := #@@INSTANCE@@.LIMIT_HH ,
         LIMIT_H                     := #@@INSTANCE@@.LIMIT_H ,
         LIMIT_L                     := #@@INSTANCE@@.LIMIT_L ,
         LIMIT_LL                    := #@@INSTANCE@@.LIMIT_LL ,
         MASS_MI1                    := "idb@@LNK1CLASS@@".@@LNK1TAG@@.MEASURE ,
         FB_TDELAY                   := #@@INSTANCE@@.FB_TDELAY ,
         NON_PID                     := #@@INSTANCE@@.NON_PID ,
         P_SEL                       := #@@INSTANCE@@.P_SEL ,
         I_SEL                       := #@@INSTANCE@@.I_SEL ,
         D_SEL                       := #@@INSTANCE@@.D_SEL ,
         GAIN                        := #@@INSTANCE@@.GAIN ,
         TI                          := #@@INSTANCE@@.TI ,
         TD                          := #@@INSTANCE@@.TD ,
         CYCLE                       := #@@INSTANCE@@.CYCLE ,
         STATE                       := #@@INSTANCE@@.STATE ,
         OUT_Q                       := #@@INSTANCE@@.OUT_Q ,
         MAN_NONPID                  := #@@INSTANCE@@.MAN_NONPID ,
         INTERLOCK                   := #@@INSTANCE@@.INTERLOCK ,
         ALM_THR                     := #@@INSTANCE@@.ALM_THR ,
         ALM_TAH                     := #@@INSTANCE@@.ALM_TAH ,
         ALM_FLT                     := #@@INSTANCE@@.ALM_FLT ,
         ALARM_HH                    := #@@INSTANCE@@.ALARM_HH ,
         ALARM_H                     := #@@INSTANCE@@.ALARM_H ,
         ALARM_L                     := #@@INSTANCE@@.ALARM_L ,
         ALARM_LL                    := #@@INSTANCE@@.ALARM_LL ,
         OUT_Q_F                     := "@@INSTANCE@@_F" ,
         OUT_Q_R                     := "@@INSTANCE@@_R" ,
         OUT_FR                      := #@@INSTANCE@@.OUT_FR ,
         MASS_PV_R                   := #@@INSTANCE@@.MASS_PV_R ,
         MV_RPM_R                    := #@@INSTANCE@@.MV_RPM_R ,
         DATA_QUALITY                := #@@INSTANCE@@.DATA_QUALITY ,
         RUNNING                     := #@@INSTANCE@@.RUNNING ,
         MON_MISMATCH                := #@@INSTANCE@@.MON_MISMATCH ,
         RUN_FAULT                   := #@@INSTANCE@@.RUN_FAULT ,
         OUT_SETPOINT                := #@@INSTANCE@@.OUT_SETPOINT ,
         OUT_LMN_PER                 := "P_SPS-@@NUMINSTANCE@@":P ,
         OUT_LMN                     := #@@INSTANCE@@.OUT_LMN ,
         MODE                        := #@@INSTANCE@@.MODE
      );
      NOP 0;
@@TEMPLATE_END@@
END_FUNCTION_BLOCK
