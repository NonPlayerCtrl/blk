//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//                Automatically Generated File - Do Not Edit                  //
//----------------------------------------------------------------------------//
// Class:       ifbPOS4                                                       //
// Description: Instances of POS4                                             //
//                                                                            //
// Uses the generic fbPOSx class. In this case both FB_C and FB_O have        //
// digital input feedback signals from field.                                 //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 2.0 David Paspa      05-Jan-2018 NA        Reboot for S7-1500.             //
// 0.7 Khairul Basar    12-Oct-2009 CC-09/016 IN_REQ_MODE is assigned to      //
//                                            Toggle                          //
// 0.6 Gus Abdallah     01-Oct-2009 CC-09/016 Interlocks are CM processed     //
// 0.5 Khairul Basar    18-Sep-2009 CC-09/016 ifcPOSx is called for           //
//                                            interfacing.                    //
// 0.4 Khairul Basar    16-Sep-2009 CC-09/016 Duplicate Auto/man parameters   //
//                                            deleted auto/manual both now    //
//                                            using same parameters.          //
// 0.3 Khairul Basar    10-Sep-2009 CC-09/016 POSx updated                    //
// 0.2 Khairul Basar    02-Sep-2009 CC-09/016 Ref1.                           //
// 0.1 Khairul Basar    03-Aug-2009 NA        Initial design                  //
//                                                                            //
// Ref1:                                                                      //
// Corrected the assignment of OUT_Qs to DV1111,DV1211,DV1214.                //
// Class interlocks are added.Fault state transition T3 & T4 is now           //
// configured (ref fbPOSx). Alarm names changed to FAULT_C for fail to close  //
// and FAULT_O for fail to open (ref fbPOSx). Timer parameter name changed to //
// TMR (ref fbPOSx).                                                          //
// Initial value is configured for TMR is 3S (ref fbPOSx).                    //
//----------------------------------------------------------------------------//
FUNCTION_BLOCK "ifbPOS4"
TITLE = Instances of POS4 On/Off valve with output command and opened and closed feedback
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : REO
NAME : ifbPOS4
VERSION : 2.0

//----------------------------------------------------------------------------//
// Declare the instance objects of the class:                                 //
//----------------------------------------------------------------------------//
VAR
@@TEMPLATE_BEGIN@@
    @@INSTANCE@@ : "fbPOSx";   // @@DESCRIPTION@@
@@TEMPLATE_END@@
END_VAR

VAR_TEMP
    CRIL : Bool;
    NCRIL : Bool;
    FB_C : Bool;
    FB_O : Bool;
END_VAR

BEGIN
@@TEMPLATE_BEGIN@@
NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Get the critical interlock if there is one. If not set alwaysLow:      //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|CRIL_EXISTS@@
@@ATTR_DEFAULT_BEGIN@@
    A "alwaysLow";
@@ATTR_DEFAULT_END@@
    A "idbCRIL".@@INSTANCE@@cril.INTERLOCK;
@@ATTR_END|CRIL_EXISTS@@
    = #CRIL;

NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Get the non-critical interlock if there is one. If not set alwaysLow:  //
    //------------------------------------------------------------------------//
@@ATTR_BEGIN|NCRIL_EXISTS@@
@@ATTR_DEFAULT_BEGIN@@
    A "alwaysLow";
@@ATTR_DEFAULT_END@@
    A "idbNCRIL".@@INSTANCE@@ncril.INTERLOCK;
@@ATTR_END|NCRIL_EXISTS@@
    = #NCRIL;

NETWORK
TITLE = @@INSTANCE@@ : @@DESCRIPTION@@
    //------------------------------------------------------------------------//
    // Call the class function to process each instance:                      //
    //------------------------------------------------------------------------//
    A "@@INSTANCE@@-ZSC";
    = #FB_C;
    A "@@INSTANCE@@-ZSO";
    = #FB_O;
    CALL #@@INSTANCE@@
    (   OWNER                := #@@INSTANCE@@.OWNER ,
        SERIAL               := #@@INSTANCE@@.SERIAL ,
        CRIL                 := #CRIL ,
        NCRIL                := #NCRIL ,
        MAN_OVERRIDE         := #@@INSTANCE@@.MAN_OVERRIDE ,
        TMR                  := #@@INSTANCE@@.TMR ,
        FB_C                 := #FB_C ,
        FB_O                 := #FB_O ,
        NC                   := @@NC@@ ,
        OUT_Q                := "@@INSTANCE@@-CMD" ,
        FAULT_C              := #@@INSTANCE@@.FAULT_C ,
        FAULT_O              := #@@INSTANCE@@.FAULT_O ,
        CMD                  := #@@INSTANCE@@.CMD ,
        MODE                 := #@@INSTANCE@@.MODE ,
        STATE                := #@@INSTANCE@@.STATE ,
        INTERLOCK            := #@@INSTANCE@@.INTERLOCK
    );
    NOP 0;

@@TEMPLATE_END@@
END_FUNCTION_BLOCK
