//----------------------------------------------------------------------------//
//            Copyright 2018 Rieckermann Engineering Operations               //
//----------------------------------------------------------------------------//
// Description: Calls all Equipment Module instances.                         //
//----------------------------------------------------------------------------//
// Revision history:                                                          //
// Rev By               Date        CC        Note                            //
// 2.0 David Paspa      09-Feb-2018 NA        Reboot for S7-1500.             //
// 0.1 Khairul Basar    03-Aug-2009           Initial design.                 //
//----------------------------------------------------------------------------//
FUNCTION "fcHygieneStatus" : Void
TITLE = HYGIENE STATUS MONITORING FUNCTION
{ S7_Optimized_Access := 'FALSE' }
NAME : fcHygiene_Status
AUTHOR : Rieckermann Engineering Operations
VERSION : 2.0

//----------------------------------------------------------------------------//
// Calling parameters should be retentive in nature:                          //
//----------------------------------------------------------------------------//
   VAR_INPUT
      CLEAN_TIME : DInt;   // 604800000
      STERILE_TIME : DInt;   // 604800000
   END_VAR

   VAR_OUTPUT
      CLEAN_TOUT : Bool;   // LAST STATUS
      STERILE_TOUT : Bool;   // LAST STATUS
   END_VAR

   VAR_IN_OUT
      HYGIENE_STATE : Int;
      CLEAN_ELAPSED_TIME : DInt;
      STERILE_ELAPSED_TIME : DInt;
   END_VAR

   VAR_TEMP
      clean_timeout : Bool;
      sterile_timeout : Bool;
      start_sterile_tmr : Bool;
      start_clean_tmr : Bool;
      reset_clean_tmr : Bool;
      reset_sterile_tmr : Bool;
   END_VAR


BEGIN
NETWORK
TITLE = Start cleanliness monitoring timer if Hygiene Status is CLEAN
      L #HYGIENE_STATE;
      L "dbCONST".BLK.HYGIENE_STATE.CLEAN;
      ==I;
      = #start_clean_tmr;
      R #CLEAN_TOUT;

NETWORK
TITLE = Start sterile monitoring timer if Hygiene Status is STERILE
      L #HYGIENE_STATE;
      L "dbCONST".BLK.HYGIENE_STATE.STERILE;
      ==I;
      = #start_sterile_tmr;
      R #STERILE_TOUT;

NETWORK
TITLE = Reset cleanliness timer if Hygiene Status is not CLEAN
      L #HYGIENE_STATE;
      L "dbCONST".BLK.HYGIENE_STATE.CLEAN;
      <>I;
      = #reset_clean_tmr;

NETWORK
TITLE = Reset sterile timer if Hygiene Status is not STERILE
      L #HYGIENE_STATE;
      L "dbCONST".BLK.HYGIENE_STATE.STERILE;
      <>I;
      = #reset_sterile_tmr;
NETWORK

TITLE = Retentive timer for CLEAN
      A #start_clean_tmr;
      = %L1.0;
      BLD 103;
      A #reset_clean_tmr;
      = %L1.1;
      BLD 103;
      CALL TONR_X
      (  TMR_EN                      := %L1.0 ,
         RESET                       := %L1.1 ,
         PV                          := #CLEAN_TIME ,
         DELTA_T                     := "dbCONST".OB1_prev_cycle ,
         Q                           := #clean_timeout ,
         ET                          := #CLEAN_ELAPSED_TIME
      );
      NOP 0;

NETWORK
TITLE = Retentive timer for STERILE
      A #start_sterile_tmr;
      = %L1.0;
      BLD 103;
      A #reset_sterile_tmr;
      = %L1.1;
      BLD 103;
      CALL TONR_X
      (  TMR_EN                      := %L1.0 ,
         RESET                       := %L1.1 ,
         PV                          := #STERILE_TIME ,
         DELTA_T                     := "dbCONST".OB1_prev_cycle ,
         Q                           := #sterile_timeout ,
         ET                          := #STERILE_ELAPSED_TIME
      );
      NOP 0;

NETWORK
TITLE = Set the Hygiene Status to USED if cleanliness timer expired
      A #clean_timeout;
      JNB Label_0;
      L "dbCONST".BLK.HYGIENE_STATE.USED;
      T #HYGIENE_STATE;
      SET;
      SAVE;
      CLR;
Label_0:      A BR;
      S #CLEAN_TOUT;

NETWORK
TITLE = Set the Hygiene Status to CLEAN if sterile timer expired
      A #sterile_timeout;
      JNB Label_1;
      L "dbCONST".BLK.HYGIENE_STATE.CLEAN;
      T #HYGIENE_STATE;
      SET;
      SAVE;
      CLR;
Label_1:      A BR;
      S #STERILE_TOUT;
END_FUNCTION
